ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l0xx_ll_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_ADC_CommonDeInit,"ax",%progbits
  18              		.align	1
  19              		.global	LL_ADC_CommonDeInit
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	LL_ADC_CommonDeInit:
  25              	.LVL0:
  26              	.LFB178:
  27              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @file    stm32l0xx_ll_adc.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @brief   ADC LL module driver
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * in the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #if defined(USE_FULL_LL_DRIVER)
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #include "stm32l0xx_ll_adc.h"
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #include "stm32l0xx_ll_bus.h"
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #ifdef  USE_FULL_ASSERT
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #include "stm32_assert.h"
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #else
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define assert_param(expr) ((void)0U)
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #endif
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @{
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 2


  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #if defined (ADC1)
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /** @addtogroup ADC_LL ADC
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /** @addtogroup ADC_LL_Private_Constants
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @{
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Definitions of ADC hardware constraints delays */
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       not timeout values:                                                  */
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       Timeout values for ADC operations are dependent to device clock      */
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       configuration (system clock versus ADC clock),                       */
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       and therefore must be defined in user application.                   */
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       Refer to @ref ADC_LL_EC_HW_DELAYS for description of ADC timeout     */
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       values definition.                                                   */
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Note: ADC timeout values are defined here in CPU cycles to be independent  */
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       of device clock setting.                                             */
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       In user application, ADC timeout values should be defined with       */
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       temporal values, in function of device clock settings.               */
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*       Highest ratio CPU clock frequency vs ADC clock frequency:            */
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*        - ADC clock from synchronous clock with AHB prescaler 512,          */
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*          APB prescaler 16, ADC prescaler 4.                                */
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*        - ADC clock from asynchronous clock (HSI) with prescaler 1,         */
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*          with highest ratio CPU clock frequency vs HSI clock frequency:    */
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /*          CPU clock frequency max 32MHz, HSI frequency 16MHz: ratio 2.      */
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Unit: CPU cycles.                                                          */
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define ADC_CLOCK_RATIO_VS_CPU_HIGHEST          ((uint32_t) 512U * 16U * 4U)
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define ADC_TIMEOUT_DISABLE_CPU_CYCLES          (ADC_CLOCK_RATIO_VS_CPU_HIGHEST * 1U)
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define ADC_TIMEOUT_STOP_CONVERSION_CPU_CYCLES  (ADC_CLOCK_RATIO_VS_CPU_HIGHEST * 1U)
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @}
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Private macros ------------------------------------------------------------*/
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /** @addtogroup ADC_LL_Private_Macros
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @{
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Check of parameters for configuration of ADC hierarchical scope:           */
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* common to several ADC instances.                                           */
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_COMMON_CLOCK(__CLOCK__)                                      \
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV1)                                 \
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV2)                                 \
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV4)                                 \
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV6)                                 \
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV8)                                 \
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV10)                                \
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 3


  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV12)                                \
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV16)                                \
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV32)                                \
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV64)                                \
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV128)                               \
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV256)                               \
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_CLOCK_FREQ_MODE(__CLOCK_FREQ_MODE__)                         \
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__CLOCK_FREQ_MODE__) == LL_ADC_CLOCK_FREQ_MODE_HIGH)                   \
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK_FREQ_MODE__) == LL_ADC_CLOCK_FREQ_MODE_LOW)                    \
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Check of parameters for configuration of ADC hierarchical scope:           */
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* ADC instance.                                                              */
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_CLOCK(__CLOCK__)                                             \
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__CLOCK__) == LL_ADC_CLOCK_SYNC_PCLK_DIV4)                             \
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_SYNC_PCLK_DIV2)                             \
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_SYNC_PCLK_DIV1)                             \
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC)                                      \
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_RESOLUTION(__RESOLUTION__)                                   \
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__RESOLUTION__) == LL_ADC_RESOLUTION_12B)                              \
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__RESOLUTION__) == LL_ADC_RESOLUTION_10B)                              \
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__RESOLUTION__) == LL_ADC_RESOLUTION_8B)                               \
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__RESOLUTION__) == LL_ADC_RESOLUTION_6B)                               \
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_DATA_ALIGN(__DATA_ALIGN__)                                   \
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__DATA_ALIGN__) == LL_ADC_DATA_ALIGN_RIGHT)                            \
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__DATA_ALIGN__) == LL_ADC_DATA_ALIGN_LEFT)                             \
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_LOW_POWER(__LOW_POWER__)                                     \
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__LOW_POWER__) == LL_ADC_LP_MODE_NONE)                                 \
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__LOW_POWER__) == LL_ADC_LP_AUTOWAIT)                                  \
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__LOW_POWER__) == LL_ADC_LP_AUTOPOWEROFF)                              \
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__LOW_POWER__) == LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF)                     \
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Check of parameters for configuration of ADC hierarchical scope:           */
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* ADC group regular                                                          */
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* ADC group regular external trigger TIM2_CC3 available only on              */
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* STM32L0 devices categories: Cat.1, Cat.2, Cat.5                            */
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #if defined (STM32L011xx) || defined (STM32L021xx) || \
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     defined (STM32L031xx) || defined (STM32L041xx) || \
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     defined (STM32L071xx) || defined (STM32L072xx) || defined (STM32L073xx) || \
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     defined (STM32L081xx) || defined (STM32L082xx) || defined (STM32L083xx)
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_REG_TRIG_SOURCE(__REG_TRIG_SOURCE__)                         \
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_SOFTWARE)                      \
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM6_TRGO)                 \
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM21_CH2)                 \
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM2_TRGO)                 \
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM2_CH4)                  \
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM22_TRGO)                \
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM2_CH3)                  \
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 4


 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM3_TRGO)                 \
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_EXTI_LINE11)               \
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #else
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_REG_TRIG_SOURCE(__REG_TRIG_SOURCE__)                         \
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_SOFTWARE)                      \
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM6_TRGO)                 \
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM21_CH2)                 \
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM2_TRGO)                 \
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM2_CH4)                  \
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM22_TRGO)                \
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM3_TRGO)                 \
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_EXTI_LINE11)               \
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #endif
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_REG_CONTINUOUS_MODE(__REG_CONTINUOUS_MODE__)                 \
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__REG_CONTINUOUS_MODE__) == LL_ADC_REG_CONV_SINGLE)                    \
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_CONTINUOUS_MODE__) == LL_ADC_REG_CONV_CONTINUOUS)                \
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_REG_DMA_TRANSFER(__REG_DMA_TRANSFER__)                       \
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__REG_DMA_TRANSFER__) == LL_ADC_REG_DMA_TRANSFER_NONE)                 \
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_DMA_TRANSFER__) == LL_ADC_REG_DMA_TRANSFER_LIMITED)              \
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_DMA_TRANSFER__) == LL_ADC_REG_DMA_TRANSFER_UNLIMITED)            \
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_REG_OVR_DATA_BEHAVIOR(__REG_OVR_DATA_BEHAVIOR__)             \
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__REG_OVR_DATA_BEHAVIOR__) == LL_ADC_REG_OVR_DATA_PRESERVED)           \
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_OVR_DATA_BEHAVIOR__) == LL_ADC_REG_OVR_DATA_OVERWRITTEN)         \
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #define IS_LL_ADC_REG_SEQ_SCAN_DISCONT_MODE(__REG_SEQ_DISCONT_MODE__)          \
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   (   ((__REG_SEQ_DISCONT_MODE__) == LL_ADC_REG_SEQ_DISCONT_DISABLE)           \
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****    || ((__REG_SEQ_DISCONT_MODE__) == LL_ADC_REG_SEQ_DISCONT_1RANK)             \
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   )
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @}
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Private function prototypes -----------------------------------------------*/
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /* Exported functions --------------------------------------------------------*/
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /** @addtogroup ADC_LL_Exported_Functions
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @{
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /** @addtogroup ADC_LL_EF_Init
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @{
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @brief  De-initialize registers of all ADC instances belonging to
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         the same ADC common instance to their default reset values.
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   This function is performing a hard reset, using high level
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 5


 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         clock source RCC ADC reset.
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADCxy_COMMON ADC common instance
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - SUCCESS: ADC common registers are de-initialized
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - ERROR: not applicable
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** ErrorStatus LL_ADC_CommonDeInit(ADC_Common_TypeDef *ADCxy_COMMON)
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** {
  28              		.loc 1 211 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Check the parameters */
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_ADC_COMMON_INSTANCE(ADCxy_COMMON));
  33              		.loc 1 213 3 view .LVU1
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Force reset of ADC clock (core clock) */
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   LL_APB2_GRP1_ForceReset(LL_APB2_GRP1_PERIPH_ADC1);
  34              		.loc 1 216 3 view .LVU2
  35              	.LBB30:
  36              	.LBI30:
  37              		.file 2 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @file    stm32l0xx_ll_bus.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * All rights reserved.
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file in
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * the root directory of this software component.
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 6


  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifndef __STM32L0xx_LL_BUS_H
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define __STM32L0xx_LL_BUS_H
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifdef __cplusplus
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** extern "C" {
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #include "stm32l0xx.h"
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @addtogroup STM32L0xx_LL_Driver
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RCC)
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN      /*!< DMA1 clock enable */
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_MIF            RCC_AHBENR_MIFEN       /*!< MIF clock enable */
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN  /*!< Sleep Mode SRAM clock enable
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN       /*!< CRC clock enable */
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TSC)
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN       /*!< TSC clock enable */
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*TSC*/
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RNG)
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN       /*!< RNG clock enable */
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*RNG*/
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(AES)
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_CRYPEN      /*!< CRYP clock enable */
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*AES*/
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 7


  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN     /*!< TIM2 clock enable */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM3)
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN     /*!< TIM3 clock enable */
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM6)
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN     /*!< TIM6 clock enable */
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM7)
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN     /*!< TIM7 clock enable */
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(LCD)
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR_LCDEN      /*!< LCD clock enable */
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*LCD*/
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN     /*!< WWDG clock enable */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(SPI2)
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN     /*!< SPI2 clock enable */
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN   /*!< USART2 clock enable */
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APB1ENR_LPUART1EN  /*!< LPUART1 clock enable */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART4)
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN   /*!< USART4 clock enable */
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART5)
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN   /*!< USART5 clock enable */
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN     /*!< I2C1 clock enable */
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C2)
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN     /*!< I2C2 clock enable */
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USB)
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN      /*!< USB clock enable */
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*USB*/
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(CRS)
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN      /*!< CRS clock enable */
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*CRS*/
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN      /*!< PWR clock enable */
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(DAC)
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN      /*!< DAC clock enable */
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C3)
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR_I2C3EN     /*!< I2C3 clock enable */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR_LPTIM1EN   /*!< LPTIM1 clock enable */
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 8


 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN  /*!< SYSCFG clock enable */
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM21          RCC_APB2ENR_TIM21EN   /*!< TIM21 clock enable */
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM22)
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM22          RCC_APB2ENR_TIM22EN   /*!< TIM22 clock enable */
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN      /*!< FireWall clock enable */
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN    /*!< ADC1 clock enable */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN    /*!< SPI1 clock enable */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART1)
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN  /*!< USART1 clock enable */
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN  /*!< DBGMCU clock enable */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             0xFFFFFFFFU
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN    /*!< GPIO port A control */
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN    /*!< GPIO port B control */
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN    /*!< GPIO port C control */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOD)
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN    /*!< GPIO port D control */
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOD*/
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOE)
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN    /*!< GPIO port H control */
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOE*/
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOH)
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOH           RCC_IOPENR_GPIOHEN    /*!< GPIO port H control */
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOH*/
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 9


 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_EnableClock\n
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_EnableClock\n
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_EnableClock\n
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_EnableClock\n
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_EnableClock
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_IsEnabledClock\n
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_IsEnabledClock\n
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_IsEnabledClock\n
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_IsEnabledClock\n
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_IsEnabledClock\n
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_IsEnabledClock
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_DisableClock\n
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_DisableClock\n
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_DisableClock\n
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_DisableClock\n
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_DisableClock\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 10


 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_DisableClock
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ForceReset\n
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ForceReset\n
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset\n
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset\n
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ForceReset
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ReleaseReset\n
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ReleaseReset\n
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset\n
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ReleaseReset
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 11


 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_EnableClockSleep\n
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockSleep\n
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_EnableClockSleep
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_DisableClockSleep\n
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockSleep\n
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_DisableClockSleep
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 12


 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_EnableClock\n
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_EnableClock\n
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_EnableClock\n
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_EnableClock\n
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_EnableClock\n
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_EnableClock\n
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_EnableClock\n
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_EnableClock\n
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_EnableClock\n
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_EnableClock\n
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_EnableClock\n
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_EnableClock\n
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_EnableClock\n
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_EnableClock\n
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_EnableClock\n
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_EnableClock\n
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_EnableClock\n
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_EnableClock\n
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_EnableClock
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 13


 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_IsEnabledClock\n
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_IsEnabledClock\n
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_IsEnabledClock\n
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_IsEnabledClock\n
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 14


 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_DisableClock\n
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_DisableClock\n
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_DisableClock\n
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_DisableClock\n
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_DisableClock\n
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_DisableClock\n
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_DisableClock\n
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_DisableClock\n
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_DisableClock\n
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_DisableClock\n
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_DisableClock\n
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_DisableClock\n
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_DisableClock\n
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_DisableClock\n
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_DisableClock\n
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_DisableClock\n
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_DisableClock\n
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_DisableClock\n
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_DisableClock
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 15


 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ForceReset\n
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ForceReset\n
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ForceReset\n
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ForceReset\n
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ForceReset\n
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ForceReset\n
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ForceReset\n
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ForceReset\n
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ForceReset\n
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ForceReset\n
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ForceReset\n
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ForceReset\n
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ForceReset\n
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ForceReset\n
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ForceReset\n
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ForceReset\n
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ForceReset\n
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ForceReset\n
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ForceReset
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 16


 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ReleaseReset\n
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ReleaseReset\n
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ReleaseReset\n
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ReleaseReset\n
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ReleaseReset\n
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ReleaseReset\n
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ReleaseReset\n
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ReleaseReset\n
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ReleaseReset\n
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ReleaseReset\n
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ReleaseReset
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_EnableClockSleep\n
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_EnableClockSleep\n
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_EnableClockSleep\n
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_EnableClockSleep\n
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_EnableClockSleep\n
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_EnableClockSleep\n
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_EnableClockSleep\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 17


 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_EnableClockSleep\n
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_EnableClockSleep\n
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_EnableClockSleep\n
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_EnableClockSleep\n
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_EnableClockSleep\n
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_EnableClockSleep\n
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_EnableClockSleep
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockSleep(uint32_t Periphs)
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR, Periphs);
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR, Periphs);
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_DisableClockSleep\n
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_DisableClockSleep\n
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_DisableClockSleep\n
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_DisableClockSleep\n
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_DisableClockSleep\n
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_DisableClockSleep\n
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_DisableClockSleep\n
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_DisableClockSleep\n
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_DisableClockSleep\n
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_DisableClockSleep\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 18


 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_DisableClockSleep\n
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_DisableClockSleep\n
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_DisableClockSleep\n
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_DisableClockSleep\n
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_DisableClockSleep
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockSleep(uint32_t Periphs)
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR, Periphs);
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_EnableClock\n
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_EnableClock\n
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_EnableClock\n
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_EnableClock\n
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_EnableClock
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 19


 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_IsEnabledClock\n
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_IsEnabledClock\n
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_IsEnabledClock\n
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_IsEnabledClock\n
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_IsEnabledClock\n
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_IsEnabledClock
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_DisableClock\n
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_DisableClock\n
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_DisableClock\n
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_DisableClock\n
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_DisableClock\n
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_DisableClock\n
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_DisableClock\n
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_DisableClock
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 20


 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ForceReset\n
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ForceReset\n
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ForceReset\n
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ForceReset\n
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ForceReset\n
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ForceReset\n
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ForceReset
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
  38              		.loc 2 871 22 view .LVU3
  39              	.LBB31:
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
  40              		.loc 2 873 3 view .LVU4
  41 0000 054B     		ldr	r3, .L2
  42 0002 596A     		ldr	r1, [r3, #36]
  43 0004 8022     		movs	r2, #128
  44 0006 9200     		lsls	r2, r2, #2
  45 0008 0A43     		orrs	r2, r1
  46 000a 5A62     		str	r2, [r3, #36]
  47              	.LVL1:
  48              		.loc 2 873 3 is_stmt 0 view .LVU5
  49              	.LBE31:
  50              	.LBE30:
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Release reset of ADC clock (core clock) */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 21


 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   LL_APB2_GRP1_ReleaseReset(LL_APB2_GRP1_PERIPH_ADC1);
  51              		.loc 1 219 3 is_stmt 1 view .LVU6
  52              	.LBB32:
  53              	.LBI32:
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ReleaseReset\n
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ReleaseReset\n
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ReleaseReset\n
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ReleaseReset\n
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ReleaseReset\n
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ReleaseReset
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
  54              		.loc 2 898 22 view .LVU7
  55              	.LBB33:
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
  56              		.loc 2 900 3 view .LVU8
  57 000c 5A6A     		ldr	r2, [r3, #36]
  58 000e 0349     		ldr	r1, .L2+4
  59 0010 0A40     		ands	r2, r1
  60 0012 5A62     		str	r2, [r3, #36]
  61              	.LVL2:
  62              		.loc 2 900 3 is_stmt 0 view .LVU9
  63              	.LBE33:
  64              	.LBE32:
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   return SUCCESS;
  65              		.loc 1 221 3 is_stmt 1 view .LVU10
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** }
  66              		.loc 1 222 1 is_stmt 0 view .LVU11
  67 0014 0020     		movs	r0, #0
  68              	.LVL3:
  69              		.loc 1 222 1 view .LVU12
  70              		@ sp needed
  71 0016 7047     		bx	lr
  72              	.L3:
  73              		.align	2
  74              	.L2:
  75 0018 00100240 		.word	1073876992
  76 001c FFFDFFFF 		.word	-513
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 22


  77              		.cfi_endproc
  78              	.LFE178:
  80              		.section	.text.LL_ADC_CommonInit,"ax",%progbits
  81              		.align	1
  82              		.global	LL_ADC_CommonInit
  83              		.syntax unified
  84              		.code	16
  85              		.thumb_func
  87              	LL_ADC_CommonInit:
  88              	.LVL4:
  89              	.LFB179:
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @brief  Initialize some features of ADC common parameters
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         (all ADC instances belonging to the same ADC common instance)
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         and multimode (for devices with several ADC instances available).
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   The setting of ADC common parameters is conditioned to
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         ADC instances state:
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         All ADC instances belonging to the same ADC common instance
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         must be disabled.
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADCxy_COMMON ADC common instance
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADC_CommonInitStruct Pointer to a @ref LL_ADC_CommonInitTypeDef structure
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - SUCCESS: ADC common registers are initialized
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - ERROR: ADC common registers are not initialized
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** ErrorStatus LL_ADC_CommonInit(ADC_Common_TypeDef *ADCxy_COMMON, LL_ADC_CommonInitTypeDef *ADC_Commo
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** {
  90              		.loc 1 240 1 is_stmt 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ErrorStatus status = SUCCESS;
  95              		.loc 1 241 3 view .LVU14
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Check the parameters */
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_ADC_COMMON_INSTANCE(ADCxy_COMMON));
  96              		.loc 1 244 3 view .LVU15
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_COMMON_CLOCK(ADC_CommonInitStruct->CommonClock));
  97              		.loc 1 245 3 view .LVU16
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Note: Hardware constraint (refer to description of functions             */
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /*       "LL_ADC_SetCommonXXX()":                                           */
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /*       On this STM32 series, setting of these features is conditioned to   */
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /*       ADC state:                                                         */
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /*       All ADC instances of the ADC common group must be disabled.        */
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(ADCxy_COMMON) == 0U)
  98              		.loc 1 252 3 view .LVU17
  99              	.LBB34:
 100              	.LBI34:
 101              		.file 3 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @file    stm32l0xx_ll_adc.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @author  MCD Application Team
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 23


   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #ifndef __STM32L0xx_LL_ADC_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __STM32L0xx_LL_ADC_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #include "stm32l0xx.h"
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - regular trigger source                                                   */
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 24


  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (6U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTSE
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTE
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWDCH)
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26U)/* Value equivalent to POSITION_VAL(ADC_CHANNEL_ID
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FU) /* Equivalent to shift: (ADC_CHANNEL_NUMBE
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000U) /* Marker of internal channel */
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* channels literals definition.                                              */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000U)
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR1_AWDCH
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR1_AWDCH
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR1_AWDCH
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR1_AWDCH
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* channels literals definition.                                              */
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 25


 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(ADC_CCR_VLCDEN)
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000U)
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET)
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET)
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC registers bits positions */
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        (3U)  /* Value equivalent to POSITION_VAL(ADC_CFGR1_RES)
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_AWDS
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_TR_HT_BITOFFSET_POS            (16U) /* Value equivalent to POSITION_VAL(ADC_TR_HT) */
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    (0U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    (1U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    (2U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    (3U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    (4U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    (5U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    (6U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    (7U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    (8U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    (9U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 26


 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(ADC_CCR_VLCDEN)
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC registers bits groups */
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC internal channels related definitions */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FF80078U)) /* Internal voltage referenc
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3000U)                     /* Analog voltage reference 
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Temperature sensor */
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L011, calibration parameter TS_CAL1 is not available. */
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx)
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FF8007AU)) /* Internal temperature sens
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FF8007EU)) /* Internal temperature sens
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx)
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30U)                       /* Internal temperature sens
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130U)                      /* Internal temperature sens
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000U)                     /* Analog voltage reference 
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(USE_FULL_LL_DRIVER)
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 27


 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and multimode
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sharing the same ADC common instance):
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         disabled.
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC state:
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance must be disabled.
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         refer to description of each function for setting
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         conditioned to ADC state.
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note On this STM32 series, this parameter has some cl
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 28


 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (functions with prefix "REG").
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC state:
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance must be disabled.
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         refer to description of each function for setting
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         conditioned to ADC state.
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (several ADC channels enabled in group regular s
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              data preserved or overwritten.
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 29


 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD        /*!< ADC flag ADC analog watchdog 1 *
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWDIE      /*!< ADC interruption ADC analog watc
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* DMA transfer.                                                              */
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000U) /* ADC group regular conversion data reg
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 30


 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000U)                               /*!< ADC asy
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_FREQ_MODE  ADC common - Clock frequency mode
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_HIGH        (0x00000000U)/*!< ADC clock mode to high frequency. On S
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_LOW         (ADC_CCR_LFMEN)        /*!< ADC clock mode to low freque
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000U)/*!< ADC measurement paths all disabled */
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_TSEN)
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VLCD          (ADC_CCR_VLCDEN)       /*!< ADC measurement path to inte
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000U)                               /*!< ADC asy
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 31


 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000U)             /*!< ADC resolution 12 bits */
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000U)/*!< ADC conversion data alignment: right a
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000U)             /*!< No ADC low power mode act
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001U) /*!< ADC group regular (available on all S
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 32


 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< A
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VLCD                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000U)                                           
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM21_CH2      (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM22_TRGO     (ADC_CFGR1_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC group regular external trigger TIM2_CC3 available only on              */
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* STM32L0 devices categories: Cat.1, Cat.2, Cat.5                            */
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (STM32L011xx) || defined (STM32L021xx) || \
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L031xx) || defined (STM32L041xx) || \
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L071xx) || defined (STM32L072xx) || defined (STM32L073xx) || \
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L081xx) || defined (STM32L082xx) || defined (STM32L083xx) || \
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L010x6) || defined (STM32L010x8) || defined (STM32L010xB)
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC group regular external trigger TIM21_TRGO available only on            */
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* STM32L0 devices categories: Cat.2, Cat.3, Cat.5                            */
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (STM32L031xx) || defined (STM32L041xx) || \
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L051xx) || defined (STM32L052xx) || defined (STM32L053xx) || \
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L062xx) || defined (STM32L063xx) || \
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L071xx) || defined (STM32L072xx) || defined (STM32L073xx) || \
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L081xx) || defined (STM32L082xx) || defined (STM32L083xx) || \
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L010x6) || defined (STM32L010x8) || defined (STM32L010xB)
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM21_TRGO     (LL_ADC_REG_TRIG_EXT_TIM22_TRGO)
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 33


 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** * @{
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000U)           /*!< ADC conversions are perform
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000U)                        /*!< ADC conversion
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN) /*!< ADC conversion
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN) /*!< ADC conversion
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** * @{
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000U)          /*!< ADC group regular behavior i
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000U)          /*!< ADC group regular sequencer 
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< ADC group regular sequencer 
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000U)                                           
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000U)                                         /*
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP_0)                                      /*
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP_1)                                      /*
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)                     /*
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 34


 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP_2)                                      /*
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_0)                     /*
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1)                     /*
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)    /*
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000U)                                           
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                    ADC
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)         | ADC
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VLCD_REG             ((LL_ADC_CHANNEL_VLCD       & ADC_CHANNEL_ID_MASK) | ADC
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR_HT            )     /*!< ADC analog watchdog thr
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (            ADC_TR_LT)     /*!< ADC analog watchdog thr
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR_HT | ADC_TR_LT)     /*!< ADC analog watchdog bot
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 35


 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000U)                               /*!< ADC ove
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                          ADC_CFGR2_OVSE)  /*!< ADC ove
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000U)          /*!< ADC oversampling discontinuo
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000U)                                           
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000U)                                           
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not timeout values.
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         above each literal definition.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 36


 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not timeout values.                                                  */
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       STM32 series:                                                         */
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 83/fADC.                    */
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         cycles                                                             */
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         configuration.                                                     */
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "tUP_LDO").                                                      */
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US (10U)              /*!< Delay for ADC stabilization tim
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "TADC_BUF").                                                     */
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: us                                                                   */
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       (10U)              /*!< Delay for internal voltage refer
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: us                                                                   */
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    (10U)              /*!< Delay for temperature sensor sta
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles            */
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (2U)             /*!< Delay required between ADC end o
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 37


 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Write a value in ADC register
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __REG__ Register to be written
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Read a value in ADC register
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __REG__ Register to be read
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Register value
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Example:
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will return decimal number "4".
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number is returned, either defined with number
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 38


 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0U)                                          
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                            
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                            
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                            
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0U) :                         
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         (                                                                                          
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1U) :                       
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           (                                                                                        
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2U) :                     
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             (                                                                                      
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3U) :                   
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               (                                                                                    
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4U) :                 
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 (                                                                                  
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5U) :               
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   (                                                                                
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6U) :             
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     (                                                                              
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7U) :           
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       (                                                                            
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8U) :         
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         (                                                                          
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9U) :       
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           (                                                                        
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10U) :  
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             (                                                                      
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11U) :
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               (                                                                    
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12U)
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 (                                                                  
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   (                                                                
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     (                                                              
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       (                                                            
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL16) == ADC_CHSELR_CHSEL16)
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         (                                                          
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL1
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           (                                                        
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                            (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSE
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                             (0U)                                                   
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 39


 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           )                                                        
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         )                                                          
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       )                                                            
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     )                                                              
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   )                                                                
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 )                                                                  
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               )                                                                    
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             )                                                                      
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           )                                                                        
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         )                                                                          
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       )                                                                            
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     )                                                                              
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   )                                                                                
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 )                                                                                  
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               )                                                                                    
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             )                                                                                      
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           )                                                                                        
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         )                                                                                          
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0U)                                          
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                            
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                            
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                            
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0U) :                         
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         (                                                                                          
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1U) :                       
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           (                                                                                        
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2U) :                     
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             (                                                                                      
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3U) :                   
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               (                                                                                    
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4U) :                 
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 (                                                                                  
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5U) :               
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   (                                                                                
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6U) :             
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     (                                                                              
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7U) :           
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       (                                                                            
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8U) :         
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         (                                                                          
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9U) :       
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           (                                                                        
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10U) :  
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             (                                                                      
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11U) :
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               (                                                                    
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12U)
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 (                                                                  
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   (                                                                
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 40


 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     (                                                              
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       (                                                            
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL17)
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         (                                                          
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSEL1
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           (0U)                                                     
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         )                                                          
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       )                                                            
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     )                                                              
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   )                                                                
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 )                                                                  
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               )                                                                    
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             )                                                                      
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           )                                                                        
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         )                                                                          
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       )                                                                            
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     )                                                                              
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   )                                                                                
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 )                                                                                  
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               )                                                                                    
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             )                                                                                      
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           )                                                                                        
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         )                                                                                          
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from number in decimal format.
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Example:
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 41


1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)(2)
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__))                                     \
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC internal channel:
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         returned from ADC registers,
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         parameters definitions of driver.
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 42


1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0U)
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a value defined from parameter definition of
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC registers.
1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 43


1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         returned from ADC registers,
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         parameters definitions of driver.
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VLCD)                                     \
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)                               \
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example:
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 44


1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
1223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
1224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)(2)
1225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
1239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (1)
1252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
1254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VLCD_REG             (1)
1257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 45


1259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
1262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         different of 12 bits.
1267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            (< ADCx param >,
1273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            );
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         different of 12 bits.
1290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            );
1297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 46


1316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__) \
1321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__AWD_THRESHOLD_TYPE__) == LL_ADC_AWD_THRESHOLD_LOW)                                 \
1322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                   \
1323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (__AWD_THRESHOLDS__) & LL_ADC_AWD_THRESHOLD_LOW                                    \
1324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                   \
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                   \
1326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                   \
1327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__AWD_THRESHOLDS__) >> ADC_TR_HT_BITOFFSET_POS) & LL_ADC_AWD_THRESHOLD_LOW       \
1328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                   \
1329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC common register instance
1340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (ADC1_COMMON)
1343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC common instance are disabled.
1347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         are disabled.
1358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled.
1360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (refer to reference manual).
1370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 47


1373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((0xFFFU) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))
1379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a resolution to another resolution.
1383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of to the data to be converted
1385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__, __ADC_RESOLUTION_CURRENT__, __ADC_RESOLUTION_TAR
1399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__DATA__)                                                                 \
1400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))   \
1401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U))      \
1402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                       (unit: digital value).
1413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       __ADC_DATA__,\
1422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
1423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 48


1430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         reference VrefInt.
1431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         connected to pin Vref+.
1435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
1454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
1456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
1457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_12B)                  \
1458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L011, calibration parameter TS_CAL1 is not available. */
1461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro __LL_ADC_CALC_TEMPERATURE() is not available.*/
1462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().        */
1463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L010xx, temperature sensor is not available.          */
1464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro related to temperature sensor are            */
1465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not available.                                                       */
1466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx) && !defined(STM32L010xB) && !defined(STM32L010x8) && !defined(STM32L010x6
1467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calculation formula:
1473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  parameters are correct (address and data).
1485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 49


1487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  less accurate than calibrated values),
1488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
1495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor.
1498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                 sensor voltage has been measured.
1505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
1515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L010xx, temperature sensor is not available.          */
1528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro related to temperature sensor are            */
1529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not available.                                                       */
1530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L010xB) && !defined(STM32L010x8) && !defined(STM32L010x6) && !defined(STM32L010x4
1531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (refer to device datasheet).
1536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calculation formula:
1537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   (unit: digital value)
1541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 50


1544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  datasheet typical values.
1548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12bits
1558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                       On STM32L0, refer to device datasheet parameter "Avg_Slop
1562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                       On STM32L0, refer to device datasheet parameter "V130" (c
1564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
1581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((( (                                                                        \
1582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  * 1000)                                                       \
1585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        -                                                                       \
1586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  * 1000)                                                       \
1588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                        \
1589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ) / (__TEMPSENSOR_TYP_AVGSLOPE__)                                          \
1590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ) + (__TEMPSENSOR_CALX_TEMP__)                                              \
1591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 51


1601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example:
1624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC register address
1638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Prevent unused argument compilation warning */
1642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (void)Register;
1643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Retrieve address of register DR */
1645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t) & (ADCx->DR);
1646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 52


1658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
1695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 53


1715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock low frequency mode.
1723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_SetCommonFrequencyMode
1730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CommonFrequencyMode This parameter can be one of the following values:
1733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Commo
1738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_LFMEN, CommonFrequencyMode);
1740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock low frequency mode.
1744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_GetCommonFrequencyMode
1747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON)
1754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_LFMEN));
1756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
1760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
1762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor stabilization time.
1768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
1769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
1771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 54


1772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
1773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a sampling time minimum value is required.
1774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
1775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
1783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      VLCDEN         LL_ADC_SetCommonPathInternalCh
1784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR (2)
1790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VLCD (1)
1791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC_CCR_VLCDEN) && defined (ADC_CCR_TSEN)
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VLCDEN, PathInternal);
1800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #elif defined (ADC_CCR_TSEN)
1801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN, PathInternal);
1802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN, PathInternal);
1804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
1811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      VLCDEN         LL_ADC_GetCommonPathInternalCh
1816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR (2)
1822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VLCD (1)
1823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 55


1829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC_CCR_VLCDEN) && defined (ADC_CCR_TSEN)
1830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VLCDEN));
1831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #elif defined (ADC_CCR_TSEN)
1832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN));
1833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN));
1835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled.
1851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
1860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
1861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             cycle).
1866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             Refer to reference manual.
1867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
1872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
1885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 56


1886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             cycle).
1891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             Refer to reference manual.
1892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
1900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
1902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without having to perform a new calibration using
1903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
1904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
1907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on going on group regular.
1908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
1909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
1911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
1914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
1916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
1917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              CalibrationFactor);
1918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
1922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
1924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
1925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
1926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
1928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
1930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
1932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC resolution.
1936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 57


1943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
1945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
1952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
1954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC resolution.
1958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
1961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
1969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
1971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
1982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
1991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
1998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 58


2000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           in order to reduce power consumption.
2014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           has been retrieved by user software.
2017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           other conversion.
2019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           applications.
2023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           How to use this low power mode:
2024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             IRQ vector sequencer.
2027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC conversion start.
2032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
2034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC channel.
2044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 59


2057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           in order to reduce power consumption.
2069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           has been retrieved by user software.
2072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           other conversion.
2074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           applications.
2078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           How to use this low power mode:
2079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             IRQ vector sequencer.
2082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC conversion start.
2087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
2089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC channel.
2099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 60


2114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Sampling time common to all channels.
2118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         converted:
2121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         setting).
2124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TS_temp, ...).
2126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is required.
2135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
2136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_SetSamplingTimeCommonChannels
2141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTime)
2154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR, ADC_SMPR_SMP, SamplingTime);
2156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Sampling time common to all channels.
2163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this STM32 series.
2167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_GetSamplingTimeCommonChannels
2168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 61


2171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx)
2180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR, ADC_SMPR_SMP));
2182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
2186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
2190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         external interrupt line).
2196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         also set trigger polarity to rising edge
2198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM21_CH2
2215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM22_TRGO
2218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3 (*)
2219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (*) value not defined in all devices
2223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 62


2228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         external interrupt line).
2234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (equivalent to
2238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM21_CH2
2249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM22_TRGO
2252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3 (*)
2253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (*) value not defined in all devices
2257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
2259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
2265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return ((TriggerSource
2269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
2270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
2271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          );
2272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             or external.
2277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 63


2285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN));
2288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the default scan direction is forward.
2330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 64


2342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the default scan direction is forward.
2350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number of ranks.
2365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number of ranks.
2387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 65


2399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
2400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
2423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
2429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
2430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 66


2456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
2478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
2484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
2501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
2502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
2503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
2504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
2505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
2506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
2507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
2508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
2509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
2510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
2511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
2512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 67


2513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
2514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
2515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
2516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
2517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
2518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
2519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
2548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
2556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
2562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 68


2570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
2579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
2580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
2581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
2582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
2583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
2584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
2585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
2586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
2587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
2588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
2589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
2590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
2591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
2592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
2593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
2594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
2595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
2596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
2597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
2626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 69


2627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
2634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
2637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
2653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
2655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
2656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
2657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
2658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
2659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
2660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
2661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
2662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
2663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
2664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
2665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
2666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
2667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
2668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
2669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
2670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
2671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
2672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
2673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 70


2684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
2701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ChannelsBitfield = READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
2703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return ((((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CHA
2705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_C
2706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_C
2707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_C
2708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_C
2709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_C
2710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_C
2711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_C
2712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_C
2713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_C
2714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_ADC
2715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_ADC
2716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_ADC
2717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_ADC
2718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_ADC
2719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_ADC
2720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
2721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_ADC
2722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
2723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_ADC
2724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_ADC
2725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          );
2726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
2729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           conversions launched successively automatically.
2733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
2740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 71


2741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
2742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
2747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
2749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
2753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           conversions launched successively automatically.
2757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
2758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
2764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
2766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
2770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode:
2773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions) is reached.
2776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions).
2780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode non-circular:
2783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
2786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
2793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
2794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
2796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 72


2798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
2802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
2804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
2808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode:
2811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions) is reached.
2814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions).
2818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode non-circular:
2821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
2824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
2827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
2828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
2832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
2835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
2837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
2841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         data preserved or overwritten.
2842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
2843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         other devices without this feature have a behavior
2844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         equivalent to data overwritten.
2845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
2846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
2847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
2848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
2853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 73


2855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
2860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
2862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
2866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         data preserved or overwritten.
2867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
2868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
2874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
2876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
2880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
2884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
2885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
2889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a single channel or all channels,
2890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on ADC group regular.
2891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
2892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled.
2893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
2894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
2895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
2896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
2897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
2898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
2903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_SetAnalogWDMonitChannels\n
2908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_SetAnalogWDMonitChannels\n
2909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_SetAnalogWDMonitChannels
2910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 74


2912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
2915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
2916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
2917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
2918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
2919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
2920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
2921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
2922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
2923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
2924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (1)
2931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
2933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
2934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
2935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VLCD_REG             (1)
2936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDChannelGroup)
2941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1,
2943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_AWDEN),
2944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (AWDChannelGroup & ADC_AWD_CR_ALL_CHANNEL_MASK));
2945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
2949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           as parameter for another function.
2957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           process the returned value with the helper macro
2959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
2961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           one channel.
2962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
2963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
2964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 75


2969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_GetAnalogWDMonitChannels\n
2974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_GetAnalogWDMonitChannels\n
2975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_GetAnalogWDMonitChannels
2976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
2981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
2982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
2983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
2984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
2985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
2986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
2987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
2988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
2989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
2990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
2997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
2999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx)
3001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelGroup = READ_BIT(ADCx->CFGR1, (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_
3003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Set variable according to channel definition including channel ID  */
3005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       with bitfield.                                                     */
3006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelSingle = ((AWDChannelGroup & ADC_CFGR1_AWDSGL) >> ADC_CFGR1_AWDSGL_BITOFFSET_P
3007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelBitField = (ADC_CHANNEL_0_BITFIELD << ((AWDChannelGroup & ADC_CHANNEL_ID_NUMBE
3008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (AWDChannelGroup | (AWDChannelBitField * AWDChannelSingle));
3010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
3014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         high and low.
3015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
3016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
3017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
3021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
3022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 76


3026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
3027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_ConfigAnalogWDThresholds\n
3032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_ConfigAnalogWDThresholds
3033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
3035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
3036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdHighVa
3039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
3041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_TR_HT | ADC_TR_LT,
3042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR_HT_BITOFFSET_POS) | AWDThresholdLowValue);
3043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         high or low.
3048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
3049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
3050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
3054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
3055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
3060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_SetAnalogWDThresholds\n
3065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_SetAnalogWDThresholds
3066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
3071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHighLow,
3074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
3076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
3077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low),      */
3078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* data is not shifted.                                                     */
3079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
3080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              AWDThresholdsHighLow,
3081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow >> ADC_TR_HT_BITOFFSET_POS) & ((uint32_t)0
3082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 77


3083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
3086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
3087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         concatenated.
3088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
3089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
3090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         using helper macro:
3091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
3092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_GetAnalogWDThresholds\n
3096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_GetAnalogWDThresholds
3097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
3102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHigh
3105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
3107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
3108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low or     */
3109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* both thresholds), data is not shifted.                                   */
3110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR,
3111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR_LT))
3112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     >> ((~AWDThresholdsHighLow) & (0x00000010U))
3113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    );
3114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
3121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
3126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
3131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
3133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
3138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 78


3140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
3144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
3145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
3151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
3153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
3157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on the selected ADC group.
3158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           are done from 1 trigger)
3161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           needs a trigger)
3163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
3168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
3170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
3171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
3172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
3175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
3177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
3181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on the selected ADC group.
3182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           are done from 1 trigger)
3185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           needs a trigger)
3187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
3188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
3191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
3192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
3194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
3196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 79


3197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling
3200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
3201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ratio
3202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - shift
3203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
3208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
3209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
3211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
3212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
3213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
3214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
3215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
3216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
3217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
3218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
3219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
3220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
3221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
3222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
3223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
3224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
3225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
3226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
3227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
3228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
3229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
3232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
3234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
3238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
3239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
3241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
3242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
3243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
3244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
3245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
3246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
3247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
3248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
3249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
3251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
3253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 80


3254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
3257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
3258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
3260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
3261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
3262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
3263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
3264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
3265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
3266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
3267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
3268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
3269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
3271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
3273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
3280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
3285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
3286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the voltage regulator:
3287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by enabling it manually
3288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
3289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by launching a calibration
3290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
3291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by enabling the ADC
3292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
3293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
3294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
3295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
3296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tUP_LDO".
3297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
3298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
3302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
3306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 81


3311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
3313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
3317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
3321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
3325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
3327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
3331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
3332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
3334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
3336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN));
3338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
3342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
3343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
3344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion start.
3345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
3346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
3352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
3353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
3357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADEN);
3364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 82


3368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
3371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
3373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
3377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADDIS);
3384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
3388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
3392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
3394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
 102              		.loc 3 3395 26 view .LVU18
 103              	.LBB35:
3396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN));
 104              		.loc 3 3397 3 view .LVU19
 105              		.loc 3 3397 11 is_stmt 0 view .LVU20
 106 0000 064B     		ldr	r3, .L7
 107 0002 9B68     		ldr	r3, [r3, #8]
 108              	.LVL5:
 109              		.loc 3 3397 11 view .LVU21
 110              	.LBE35:
 111              	.LBE34:
 112              		.loc 1 252 6 view .LVU22
 113 0004 DB07     		lsls	r3, r3, #31
 114 0006 07D4     		bmi	.L6
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   {
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Configuration of ADC hierarchical scope:                               */
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*  - common to several ADC                                               */
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    (all ADC instances belonging to the same ADC common instance)       */
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    - Set ADC clock (conversion clock)                                  */
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     LL_ADC_SetCommonClock(ADCxy_COMMON, ADC_CommonInitStruct->CommonClock);
 115              		.loc 1 258 5 is_stmt 1 view .LVU23
 116 0008 0B68     		ldr	r3, [r1]
 117              	.LVL6:
 118              	.LBB36:
 119              	.LBI36:
1687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 120              		.loc 3 1687 22 view .LVU24
 121              	.LBB37:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 83


1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 122              		.loc 3 1689 3 view .LVU25
 123 000a 0268     		ldr	r2, [r0]
 124 000c 0449     		ldr	r1, .L7+4
 125              	.LVL7:
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 126              		.loc 3 1689 3 is_stmt 0 view .LVU26
 127 000e 0A40     		ands	r2, r1
 128 0010 1343     		orrs	r3, r2
 129              	.LVL8:
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 130              		.loc 3 1689 3 view .LVU27
 131 0012 0360     		str	r3, [r0]
 132              	.LVL9:
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 133              		.loc 3 1689 3 view .LVU28
 134              	.LBE37:
 135              	.LBE36:
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 136              		.loc 1 241 15 view .LVU29
 137 0014 0020     		movs	r0, #0
 138              	.LVL10:
 139              	.L5:
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   else
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   {
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Initialization error: One or several ADC instances belonging to        */
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* the same ADC common instance are not disabled.                         */
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     status = ERROR;
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   return status;
 140              		.loc 1 267 3 is_stmt 1 view .LVU30
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** }
 141              		.loc 1 268 1 is_stmt 0 view .LVU31
 142              		@ sp needed
 143 0016 7047     		bx	lr
 144              	.LVL11:
 145              	.L6:
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 146              		.loc 1 264 12 view .LVU32
 147 0018 0120     		movs	r0, #1
 148              	.LVL12:
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 149              		.loc 1 264 12 view .LVU33
 150 001a FCE7     		b	.L5
 151              	.L8:
 152              		.align	2
 153              	.L7:
 154 001c 00240140 		.word	1073816576
 155 0020 FFFFC3FF 		.word	-3932161
 156              		.cfi_endproc
 157              	.LFE179:
 159              		.section	.text.LL_ADC_CommonStructInit,"ax",%progbits
 160              		.align	1
 161              		.global	LL_ADC_CommonStructInit
 162              		.syntax unified
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 84


 163              		.code	16
 164              		.thumb_func
 166              	LL_ADC_CommonStructInit:
 167              	.LVL13:
 168              	.LFB180:
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @brief  Set each @ref LL_ADC_CommonInitTypeDef field to default value.
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADC_CommonInitStruct Pointer to a @ref LL_ADC_CommonInitTypeDef structure
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *                              whose fields will be set to default values.
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @retval None
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** void LL_ADC_CommonStructInit(LL_ADC_CommonInitTypeDef *ADC_CommonInitStruct)
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** {
 169              		.loc 1 277 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Set ADC_CommonInitStruct fields to default values */
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Set fields of ADC common */
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* (all ADC instances belonging to the same ADC common instance) */
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_CommonInitStruct->CommonClock = LL_ADC_CLOCK_ASYNC_DIV2;
 174              		.loc 1 281 3 view .LVU35
 175              		.loc 1 281 37 is_stmt 0 view .LVU36
 176 0000 8023     		movs	r3, #128
 177 0002 DB02     		lsls	r3, r3, #11
 178 0004 0360     		str	r3, [r0]
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** }
 179              		.loc 1 283 1 view .LVU37
 180              		@ sp needed
 181 0006 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE180:
 185              		.section	.text.LL_ADC_DeInit,"ax",%progbits
 186              		.align	1
 187              		.global	LL_ADC_DeInit
 188              		.syntax unified
 189              		.code	16
 190              		.thumb_func
 192              	LL_ADC_DeInit:
 193              	.LVL14:
 194              	.LFB181:
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @brief  De-initialize registers of the selected ADC instance
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         to their default reset values.
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   To reset all ADC instances quickly (perform a hard reset),
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         use function @ref LL_ADC_CommonDeInit().
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   If this functions returns error status, it means that ADC instance
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         is in an unknown state.
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         In this case, perform a hard reset using high level
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         clock source RCC ADC reset.
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         Refer to function @ref LL_ADC_CommonDeInit().
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADCx ADC instance
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 85


 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - SUCCESS: ADC registers are de-initialized
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - ERROR: ADC registers are not de-initialized
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** ErrorStatus LL_ADC_DeInit(ADC_TypeDef *ADCx)
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** {
 195              		.loc 1 301 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		.loc 1 301 1 is_stmt 0 view .LVU39
 200 0000 10B5     		push	{r4, lr}
 201              	.LCFI0:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
 205 0002 82B0     		sub	sp, sp, #8
 206              	.LCFI1:
 207              		.cfi_def_cfa_offset 16
 208 0004 0300     		movs	r3, r0
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ErrorStatus status = SUCCESS;
 209              		.loc 1 302 3 is_stmt 1 view .LVU40
 210              	.LVL15:
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   __IO uint32_t timeout_cpu_cycles = 0U;
 211              		.loc 1 304 3 view .LVU41
 212              		.loc 1 304 17 is_stmt 0 view .LVU42
 213 0006 0022     		movs	r2, #0
 214 0008 0192     		str	r2, [sp, #4]
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Check the parameters */
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(ADCx));
 215              		.loc 1 307 3 is_stmt 1 view .LVU43
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Disable ADC instance if not already disabled.                            */
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   if (LL_ADC_IsEnabled(ADCx) == 1U)
 216              		.loc 1 310 3 view .LVU44
 217              	.LVL16:
 218              	.LBB38:
 219              	.LBI38:
3395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 220              		.loc 3 3395 26 view .LVU45
 221              	.LBB39:
 222              		.loc 3 3397 3 view .LVU46
 223              		.loc 3 3397 11 is_stmt 0 view .LVU47
 224 000a 8268     		ldr	r2, [r0, #8]
 225              	.LVL17:
 226              		.loc 3 3397 11 view .LVU48
 227              	.LBE39:
 228              	.LBE38:
 229              		.loc 1 310 6 view .LVU49
 230 000c D207     		lsls	r2, r2, #31
 231 000e 30D5     		bpl	.L20
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   {
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Set ADC group regular trigger source to SW start to ensure to not      */
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* have an external trigger event occurring during the conversion stop    */
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* ADC disable process.                                                   */
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     LL_ADC_REG_SetTriggerSource(ADCx, LL_ADC_REG_TRIG_SOFTWARE);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 86


 232              		.loc 1 315 5 is_stmt 1 view .LVU50
 233              	.LVL18:
 234              	.LBB40:
 235              	.LBI40:
2225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 236              		.loc 3 2225 22 view .LVU51
 237              	.LBB41:
2227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 238              		.loc 3 2227 3 view .LVU52
 239 0010 C268     		ldr	r2, [r0, #12]
 240 0012 2F49     		ldr	r1, .L25
 241 0014 0A40     		ands	r2, r1
 242 0016 C260     		str	r2, [r0, #12]
 243              	.LVL19:
2227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 244              		.loc 3 2227 3 is_stmt 0 view .LVU53
 245              	.LBE41:
 246              	.LBE40:
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Stop potential ADC conversion on going on ADC group regular.           */
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     if (LL_ADC_REG_IsConversionOngoing(ADCx) != 0U)
 247              		.loc 1 318 5 is_stmt 1 view .LVU54
 248              	.LBB42:
 249              	.LBI42:
3398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
3402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
3403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
3405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
3407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS));
3409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
3413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
3415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
3416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
3417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
3418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
3419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         during calibration:
3420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Calibration factor is available in data register
3421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and also transferred by DMA.
3422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
3423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
3424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         calibration.
3425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
3426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
3427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
3428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
3429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 87


3431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
3433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
3437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADCAL);
3444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
3448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
3449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
3451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
3453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL));
3455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
3462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
3467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
3468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
3469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
3470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           starts immediately.
3471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
3472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
3473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           following the ADC start conversion command.
3474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
3477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
3478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without ADC disable command on going.
3479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
3480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
3484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 88


3488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADSTART);
3491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
3495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
3498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without ADC disable command on going.
3499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
3500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
3504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADSTP);
3511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
3515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
3516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
3518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 250              		.loc 3 3519 26 view .LVU55
 251              	.LBB43:
3520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART));
 252              		.loc 3 3521 3 view .LVU56
 253              		.loc 3 3521 11 is_stmt 0 view .LVU57
 254 0018 8268     		ldr	r2, [r0, #8]
 255              	.LVL20:
 256              		.loc 3 3521 11 view .LVU58
 257              	.LBE43:
 258              	.LBE42:
 259              		.loc 1 318 8 view .LVU59
 260 001a 5207     		lsls	r2, r2, #29
 261 001c 08D5     		bpl	.L12
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     {
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       if (LL_ADC_REG_IsStopConversionOngoing(ADCx) == 0U)
 262              		.loc 1 320 7 is_stmt 1 view .LVU60
 263              	.LVL21:
 264              	.LBB44:
 265              	.LBI44:
3522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
3526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 89


3527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
3529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
 266              		.loc 3 3530 26 view .LVU61
 267              	.LBB45:
3531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP));
 268              		.loc 3 3532 3 view .LVU62
 269              		.loc 3 3532 11 is_stmt 0 view .LVU63
 270 001e 8268     		ldr	r2, [r0, #8]
 271              	.LVL22:
 272              		.loc 3 3532 11 view .LVU64
 273              	.LBE45:
 274              	.LBE44:
 275              		.loc 1 320 10 view .LVU65
 276 0020 D206     		lsls	r2, r2, #27
 277 0022 05D4     		bmi	.L12
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       {
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****         LL_ADC_REG_StopConversion(ADCx);
 278              		.loc 1 322 9 is_stmt 1 view .LVU66
 279              	.LVL23:
 280              	.LBB46:
 281              	.LBI46:
3503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 282              		.loc 3 3503 22 view .LVU67
 283              	.LBB47:
3508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 284              		.loc 3 3508 3 view .LVU68
 285 0024 8268     		ldr	r2, [r0, #8]
 286 0026 2B49     		ldr	r1, .L25+4
 287 0028 0A40     		ands	r2, r1
 288 002a 1021     		movs	r1, #16
 289 002c 0A43     		orrs	r2, r1
 290 002e 8260     		str	r2, [r0, #8]
 291              	.LVL24:
 292              	.L12:
3508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 293              		.loc 3 3508 3 is_stmt 0 view .LVU69
 294              	.LBE47:
 295              	.LBE46:
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       }
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     }
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Wait for ADC conversions are effectively stopped                       */
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     timeout_cpu_cycles = ADC_TIMEOUT_STOP_CONVERSION_CPU_CYCLES;
 296              		.loc 1 327 5 is_stmt 1 view .LVU70
 297              		.loc 1 327 24 is_stmt 0 view .LVU71
 298 0030 8022     		movs	r2, #128
 299 0032 1202     		lsls	r2, r2, #8
 300 0034 0192     		str	r2, [sp, #4]
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     while (LL_ADC_REG_IsStopConversionOngoing(ADCx) == 1U)
 301              		.loc 1 328 5 is_stmt 1 view .LVU72
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 302              		.loc 1 302 15 is_stmt 0 view .LVU73
 303 0036 0020     		movs	r0, #0
 304              	.LVL25:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 90


 305              	.L13:
 306              		.loc 1 328 11 is_stmt 1 view .LVU74
 307              	.LBB48:
 308              	.LBI48:
3530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 309              		.loc 3 3530 26 view .LVU75
 310              	.LBB49:
 311              		.loc 3 3532 3 view .LVU76
 312              		.loc 3 3532 11 is_stmt 0 view .LVU77
 313 0038 9A68     		ldr	r2, [r3, #8]
 314              	.LVL26:
 315              		.loc 3 3532 11 view .LVU78
 316              	.LBE49:
 317              	.LBE48:
 318              		.loc 1 328 11 view .LVU79
 319 003a D206     		lsls	r2, r2, #27
 320 003c 06D5     		bpl	.L24
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     {
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       if (timeout_cpu_cycles-- == 0U)
 321              		.loc 1 330 7 is_stmt 1 view .LVU80
 322              		.loc 1 330 29 is_stmt 0 view .LVU81
 323 003e 019A     		ldr	r2, [sp, #4]
 324 0040 511E     		subs	r1, r2, #1
 325 0042 0191     		str	r1, [sp, #4]
 326              		.loc 1 330 10 view .LVU82
 327 0044 002A     		cmp	r2, #0
 328 0046 F7D1     		bne	.L13
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       {
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****         /* Time-out error */
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****         status = ERROR;
 329              		.loc 1 333 16 view .LVU83
 330 0048 0120     		movs	r0, #1
 331              	.LVL27:
 332              		.loc 1 333 16 view .LVU84
 333 004a F5E7     		b	.L13
 334              	.LVL28:
 335              	.L24:
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       }
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     }
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Disable the ADC instance */
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     LL_ADC_Disable(ADCx);
 336              		.loc 1 338 5 is_stmt 1 view .LVU85
 337              	.LBB50:
 338              	.LBI50:
3376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 339              		.loc 3 3376 22 view .LVU86
 340              	.LBB51:
3381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 341              		.loc 3 3381 3 view .LVU87
 342 004c 9A68     		ldr	r2, [r3, #8]
 343 004e 2149     		ldr	r1, .L25+4
 344 0050 0A40     		ands	r2, r1
 345 0052 0221     		movs	r1, #2
 346 0054 0A43     		orrs	r2, r1
 347 0056 9A60     		str	r2, [r3, #8]
 348              	.LVL29:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 91


3381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 349              		.loc 3 3381 3 is_stmt 0 view .LVU88
 350              	.LBE51:
 351              	.LBE50:
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Wait for ADC instance is effectively disabled */
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     timeout_cpu_cycles = ADC_TIMEOUT_DISABLE_CPU_CYCLES;
 352              		.loc 1 341 5 is_stmt 1 view .LVU89
 353              		.loc 1 341 24 is_stmt 0 view .LVU90
 354 0058 8022     		movs	r2, #128
 355 005a 1202     		lsls	r2, r2, #8
 356 005c 0192     		str	r2, [sp, #4]
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     while (LL_ADC_IsDisableOngoing(ADCx) == 1U)
 357              		.loc 1 342 5 is_stmt 1 view .LVU91
 358              	.LVL30:
 359              	.L16:
 360              		.loc 1 342 11 view .LVU92
 361              	.LBB52:
 362              	.LBI52:
3406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 363              		.loc 3 3406 26 view .LVU93
 364              	.LBB53:
3408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 365              		.loc 3 3408 3 view .LVU94
3408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 366              		.loc 3 3408 11 is_stmt 0 view .LVU95
 367 005e 9A68     		ldr	r2, [r3, #8]
 368              	.LVL31:
3408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 369              		.loc 3 3408 11 view .LVU96
 370              	.LBE53:
 371              	.LBE52:
 372              		.loc 1 342 11 view .LVU97
 373 0060 9207     		lsls	r2, r2, #30
 374 0062 07D5     		bpl	.L11
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     {
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       if (timeout_cpu_cycles-- == 0U)
 375              		.loc 1 344 7 is_stmt 1 view .LVU98
 376              		.loc 1 344 29 is_stmt 0 view .LVU99
 377 0064 019A     		ldr	r2, [sp, #4]
 378 0066 511E     		subs	r1, r2, #1
 379 0068 0191     		str	r1, [sp, #4]
 380              		.loc 1 344 10 view .LVU100
 381 006a 002A     		cmp	r2, #0
 382 006c F7D1     		bne	.L16
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       {
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****         /* Time-out error */
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****         status = ERROR;
 383              		.loc 1 347 16 view .LVU101
 384 006e 0120     		movs	r0, #1
 385              	.LVL32:
 386              		.loc 1 347 16 view .LVU102
 387 0070 F5E7     		b	.L16
 388              	.LVL33:
 389              	.L20:
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 390              		.loc 1 302 15 view .LVU103
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 92


 391 0072 0020     		movs	r0, #0
 392              	.LVL34:
 393              	.L11:
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       }
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     }
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Check whether ADC state is compliant with expected state */
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   if (READ_BIT(ADCx->CR,
 394              		.loc 1 353 3 is_stmt 1 view .LVU104
 395              		.loc 1 353 7 is_stmt 0 view .LVU105
 396 0074 9A68     		ldr	r2, [r3, #8]
 397 0076 1721     		movs	r1, #23
 398              		.loc 1 353 6 view .LVU106
 399 0078 1142     		tst	r1, r2
 400 007a 27D1     		bne	.L23
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                (ADC_CR_ADSTP | ADC_CR_ADSTART
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                 | ADC_CR_ADDIS | ADC_CR_ADEN)
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****               )
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****       == 0U)
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   {
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* ========== Reset ADC registers ========== */
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register IER */
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     CLEAR_BIT(ADCx->IER,
 401              		.loc 1 361 5 is_stmt 1 view .LVU107
 402 007c 5968     		ldr	r1, [r3, #4]
 403 007e 9F24     		movs	r4, #159
 404 0080 A143     		bics	r1, r4
 405 0082 5960     		str	r1, [r3, #4]
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****               (LL_ADC_IT_ADRDY
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | LL_ADC_IT_EOC
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | LL_ADC_IT_EOS
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | LL_ADC_IT_OVR
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | LL_ADC_IT_EOSMP
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | LL_ADC_IT_AWD1)
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              );
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register ISR */
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     SET_BIT(ADCx->ISR,
 406              		.loc 1 371 5 view .LVU108
 407 0084 1A68     		ldr	r2, [r3]
 408 0086 2243     		orrs	r2, r4
 409 0088 1A60     		str	r2, [r3]
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****             (LL_ADC_FLAG_ADRDY
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              | LL_ADC_FLAG_EOC
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              | LL_ADC_FLAG_EOS
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              | LL_ADC_FLAG_OVR
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              | LL_ADC_FLAG_EOSMP
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              | LL_ADC_FLAG_AWD1)
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****            );
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register CR */
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* "read-set": no direct reset applicable.                                */
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     CLEAR_BIT(ADCx->CR, ADC_CR_ADVREGEN);
 410              		.loc 1 383 5 view .LVU109
 411 008a 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 93


 412 008c 1249     		ldr	r1, .L25+8
 413 008e 0A40     		ands	r2, r1
 414 0090 9A60     		str	r2, [r3, #8]
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register CFGR1 */
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     CLEAR_BIT(ADCx->CFGR1,
 415              		.loc 1 386 5 view .LVU110
 416 0092 DA68     		ldr	r2, [r3, #12]
 417 0094 1149     		ldr	r1, .L25+12
 418 0096 0A40     		ands	r2, r1
 419 0098 DA60     		str	r2, [r3, #12]
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****               (ADC_CFGR1_AWDCH   | ADC_CFGR1_AWDEN  | ADC_CFGR1_AWDSGL  | ADC_CFGR1_DISCEN
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT    | ADC_CFGR1_OVRMOD
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN   | ADC_CFGR1_RES
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              );
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register CFGR2 */
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*       already done above.                                              */
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     CLEAR_BIT(ADCx->CFGR2,
 420              		.loc 1 396 5 view .LVU111
 421 009a 1A69     		ldr	r2, [r3, #16]
 422 009c 1049     		ldr	r1, .L25+16
 423 009e 0A40     		ands	r2, r1
 424 00a0 1A61     		str	r2, [r3, #16]
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****               (ADC_CFGR2_CKMODE
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR2_TOVS   | ADC_CFGR2_OVSS  | ADC_CFGR2_OVSR
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR2_OVSE   | ADC_CFGR2_CKMODE)
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              );
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register SMPR */
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     CLEAR_BIT(ADCx->SMPR, ADC_SMPR_SMP);
 425              		.loc 1 403 5 view .LVU112
 426 00a2 5A69     		ldr	r2, [r3, #20]
 427 00a4 0721     		movs	r1, #7
 428 00a6 8A43     		bics	r2, r1
 429 00a8 5A61     		str	r2, [r3, #20]
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register TR */
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     MODIFY_REG(ADCx->TR, ADC_TR_HT | ADC_TR_LT, ADC_TR_HT);
 430              		.loc 1 406 5 view .LVU113
 431 00aa 1A6A     		ldr	r2, [r3, #32]
 432 00ac 0D49     		ldr	r1, .L25+20
 433 00ae 1140     		ands	r1, r2
 434 00b0 0D4A     		ldr	r2, .L25+24
 435 00b2 0A43     		orrs	r2, r1
 436 00b4 1A62     		str	r2, [r3, #32]
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register CHSELR */
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #if defined(ADC_CCR_VLCDEN)
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     CLEAR_BIT(ADCx->CHSELR,
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****               (ADC_CHSELR_CHSEL18 | ADC_CHSELR_CHSEL17 | ADC_CHSELR_CHSEL16
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CHSELR_CHSEL15 | ADC_CHSELR_CHSEL14 | ADC_CHSELR_CHSEL13 | ADC_CHSELR_CHSEL12
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CHSELR_CHSEL11 | ADC_CHSELR_CHSEL10 | ADC_CHSELR_CHSEL9  | ADC_CHSELR_CHSEL8
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CHSELR_CHSEL7  | ADC_CHSELR_CHSEL6  | ADC_CHSELR_CHSEL5  | ADC_CHSELR_CHSEL4
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CHSELR_CHSEL3  | ADC_CHSELR_CHSEL2  | ADC_CHSELR_CHSEL1  | ADC_CHSELR_CHSEL0)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 94


 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              );
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #else
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     CLEAR_BIT(ADCx->CHSELR,
 437              		.loc 1 418 5 view .LVU114
 438 00b6 9A6A     		ldr	r2, [r3, #40]
 439 00b8 0C49     		ldr	r1, .L25+28
 440 00ba 0A40     		ands	r2, r1
 441 00bc 9A62     		str	r2, [r3, #40]
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****               (ADC_CHSELR_CHSEL18 | ADC_CHSELR_CHSEL17
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CHSELR_CHSEL15 | ADC_CHSELR_CHSEL14 | ADC_CHSELR_CHSEL13 | ADC_CHSELR_CHSEL12
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CHSELR_CHSEL11 | ADC_CHSELR_CHSEL10 | ADC_CHSELR_CHSEL9  | ADC_CHSELR_CHSEL8
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CHSELR_CHSEL7  | ADC_CHSELR_CHSEL6  | ADC_CHSELR_CHSEL5  | ADC_CHSELR_CHSEL4
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CHSELR_CHSEL3  | ADC_CHSELR_CHSEL2  | ADC_CHSELR_CHSEL1  | ADC_CHSELR_CHSEL0)
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****              );
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** #endif
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register DR */
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* bits in access mode read only, no direct reset applicable */
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Reset register CALFACT */
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     CLEAR_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT);
 442              		.loc 1 431 5 view .LVU115
 443 00be B421     		movs	r1, #180
 444 00c0 5A58     		ldr	r2, [r3, r1]
 445 00c2 203C     		subs	r4, r4, #32
 446 00c4 A243     		bics	r2, r4
 447 00c6 5A50     		str	r2, [r3, r1]
 448              	.LVL35:
 449              	.L19:
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   else
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   {
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* ADC instance is in an unknown state */
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Need to performing a hard reset of ADC instance, using high level      */
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* clock source RCC ADC reset.                                            */
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Caution: On this STM32 series, if several ADC instances are available   */
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*          on the selected device, RCC ADC reset will reset              */
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*          all ADC instances belonging to the common ADC instance.       */
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     status = ERROR;
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   return status;
 450              		.loc 1 445 3 view .LVU116
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** }
 451              		.loc 1 446 1 is_stmt 0 view .LVU117
 452 00c8 02B0     		add	sp, sp, #8
 453              		@ sp needed
 454 00ca 10BD     		pop	{r4, pc}
 455              	.L23:
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 456              		.loc 1 442 12 view .LVU118
 457 00cc 0120     		movs	r0, #1
 458              	.LVL36:
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 459              		.loc 1 442 12 view .LVU119
 460 00ce FBE7     		b	.L19
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 95


 461              	.L26:
 462              		.align	2
 463              	.L25:
 464 00d0 3FF2FFFF 		.word	-3521
 465 00d4 E8FFFF7F 		.word	2147483624
 466 00d8 FFFFFFEF 		.word	-268435457
 467 00dc 00023E83 		.word	-2093088256
 468 00e0 02FCFF3F 		.word	1073740802
 469 00e4 00F000F0 		.word	-268374016
 470 00e8 0000FF0F 		.word	268369920
 471 00ec 0000F9FF 		.word	-458752
 472              		.cfi_endproc
 473              	.LFE181:
 475              		.section	.text.LL_ADC_Init,"ax",%progbits
 476              		.align	1
 477              		.global	LL_ADC_Init
 478              		.syntax unified
 479              		.code	16
 480              		.thumb_func
 482              	LL_ADC_Init:
 483              	.LVL37:
 484              	.LFB182:
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @brief  Initialize some features of ADC instance.
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         Refer to corresponding unitary functions into
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         is conditioned to ADC state:
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         ADC instance must be disabled.
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         This condition is applied to all ADC features, for efficiency
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         and compatibility over all STM32 families. However, the different
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         features can be set under different ADC state conditions
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         (setting possible with ADC enabled without conversion on going,
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         ADC enabled with conversion on going, ...)
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         Each feature can be updated afterwards with a unitary function
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         and potentially with ADC in a different state than disabled,
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         refer to description of each function for setting
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         conditioned to ADC state.
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   After using this function, some other features must be configured
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         using LL unitary functions.
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         The minimum configuration remaining to be done is:
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - Set ADC group regular sequencer:
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *            map channel on rank corresponding to channel number.
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *            Refer to function @ref LL_ADC_REG_SetSequencerChannels();
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - Set ADC channel sampling time
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *            Refer to function LL_ADC_SetChannelSamplingTime();
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADCx ADC instance
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADC_InitStruct Pointer to a @ref LL_ADC_REG_InitTypeDef structure
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - SUCCESS: ADC registers are initialized
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - ERROR: ADC registers are not initialized
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** ErrorStatus LL_ADC_Init(ADC_TypeDef *ADCx, LL_ADC_InitTypeDef *ADC_InitStruct)
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** {
 485              		.loc 1 480 1 is_stmt 1 view -0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 96


 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		.loc 1 480 1 is_stmt 0 view .LVU121
 490 0000 10B5     		push	{r4, lr}
 491              	.LCFI2:
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 4, -8
 494              		.cfi_offset 14, -4
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ErrorStatus status = SUCCESS;
 495              		.loc 1 481 3 is_stmt 1 view .LVU122
 496              	.LVL38:
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Check the parameters */
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(ADCx));
 497              		.loc 1 484 3 view .LVU123
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_CLOCK(ADC_InitStruct->Clock));
 498              		.loc 1 486 3 view .LVU124
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_RESOLUTION(ADC_InitStruct->Resolution));
 499              		.loc 1 487 3 view .LVU125
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_DATA_ALIGN(ADC_InitStruct->DataAlignment));
 500              		.loc 1 488 3 view .LVU126
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_LOW_POWER(ADC_InitStruct->LowPowerMode));
 501              		.loc 1 489 3 view .LVU127
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Note: Hardware constraint (refer to description of this function):       */
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /*       ADC instance must be disabled.                                     */
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   if (LL_ADC_IsEnabled(ADCx) == 0U)
 502              		.loc 1 493 3 view .LVU128
 503              	.LBB54:
 504              	.LBI54:
3395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 505              		.loc 3 3395 26 view .LVU129
 506              	.LBB55:
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 507              		.loc 3 3397 3 view .LVU130
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 508              		.loc 3 3397 11 is_stmt 0 view .LVU131
 509 0002 8368     		ldr	r3, [r0, #8]
 510              	.LVL39:
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 511              		.loc 3 3397 11 view .LVU132
 512              	.LBE55:
 513              	.LBE54:
 514              		.loc 1 493 6 view .LVU133
 515 0004 DB07     		lsls	r3, r3, #31
 516 0006 11D4     		bmi	.L29
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   {
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Configuration of ADC hierarchical scope:                               */
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*  - ADC instance                                                        */
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    - Set ADC data resolution                                           */
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    - Set ADC conversion data alignment                                 */
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    - Set ADC low power mode                                            */
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     MODIFY_REG(ADCx->CFGR1,
 517              		.loc 1 500 5 is_stmt 1 view .LVU134
 518 0008 C368     		ldr	r3, [r0, #12]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 97


 519 000a 094A     		ldr	r2, .L30
 520 000c 1340     		ands	r3, r2
 521 000e 4A68     		ldr	r2, [r1, #4]
 522 0010 8C68     		ldr	r4, [r1, #8]
 523 0012 2243     		orrs	r2, r4
 524 0014 CC68     		ldr	r4, [r1, #12]
 525 0016 2243     		orrs	r2, r4
 526 0018 1343     		orrs	r3, r2
 527 001a C360     		str	r3, [r0, #12]
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                ADC_CFGR1_RES
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_ALIGN
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_WAIT
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_AUTOFF
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                ,
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                ADC_InitStruct->Resolution
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_InitStruct->DataAlignment
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_InitStruct->LowPowerMode
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****               );
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     MODIFY_REG(ADCx->CFGR2,
 528              		.loc 1 511 5 view .LVU135
 529 001c 0369     		ldr	r3, [r0, #16]
 530 001e 9B00     		lsls	r3, r3, #2
 531 0020 9B08     		lsrs	r3, r3, #2
 532 0022 0A68     		ldr	r2, [r1]
 533 0024 1343     		orrs	r3, r2
 534 0026 0361     		str	r3, [r0, #16]
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 535              		.loc 1 481 15 is_stmt 0 view .LVU136
 536 0028 0020     		movs	r0, #0
 537              	.LVL40:
 538              	.L28:
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                ADC_CFGR2_CKMODE
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                ,
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                ADC_InitStruct->Clock
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****               );
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   else
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   {
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Initialization error: ADC instance is not disabled. */
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     status = ERROR;
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   return status;
 539              		.loc 1 522 3 is_stmt 1 view .LVU137
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** }
 540              		.loc 1 523 1 is_stmt 0 view .LVU138
 541              		@ sp needed
 542 002a 10BD     		pop	{r4, pc}
 543              	.LVL41:
 544              	.L29:
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 545              		.loc 1 520 12 view .LVU139
 546 002c 0120     		movs	r0, #1
 547              	.LVL42:
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 548              		.loc 1 520 12 view .LVU140
 549 002e FCE7     		b	.L28
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 98


 550              	.L31:
 551              		.align	2
 552              	.L30:
 553 0030 C73FFFFF 		.word	-49209
 554              		.cfi_endproc
 555              	.LFE182:
 557              		.section	.text.LL_ADC_StructInit,"ax",%progbits
 558              		.align	1
 559              		.global	LL_ADC_StructInit
 560              		.syntax unified
 561              		.code	16
 562              		.thumb_func
 564              	LL_ADC_StructInit:
 565              	.LVL43:
 566              	.LFB183:
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @brief  Set each @ref LL_ADC_InitTypeDef field to default value.
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADC_InitStruct Pointer to a @ref LL_ADC_InitTypeDef structure
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *                        whose fields will be set to default values.
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @retval None
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** void LL_ADC_StructInit(LL_ADC_InitTypeDef *ADC_InitStruct)
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** {
 567              		.loc 1 532 1 is_stmt 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Set ADC_InitStruct fields to default values */
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Set fields of ADC instance */
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_InitStruct->Clock         = LL_ADC_CLOCK_SYNC_PCLK_DIV2;
 572              		.loc 1 535 3 view .LVU142
 573              		.loc 1 535 33 is_stmt 0 view .LVU143
 574 0000 8023     		movs	r3, #128
 575 0002 DB05     		lsls	r3, r3, #23
 576 0004 0360     		str	r3, [r0]
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_InitStruct->Resolution    = LL_ADC_RESOLUTION_12B;
 577              		.loc 1 536 3 is_stmt 1 view .LVU144
 578              		.loc 1 536 33 is_stmt 0 view .LVU145
 579 0006 0023     		movs	r3, #0
 580 0008 4360     		str	r3, [r0, #4]
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_InitStruct->DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 581              		.loc 1 537 3 is_stmt 1 view .LVU146
 582              		.loc 1 537 33 is_stmt 0 view .LVU147
 583 000a 8360     		str	r3, [r0, #8]
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_InitStruct->LowPowerMode  = LL_ADC_LP_MODE_NONE;
 584              		.loc 1 538 3 is_stmt 1 view .LVU148
 585              		.loc 1 538 33 is_stmt 0 view .LVU149
 586 000c C360     		str	r3, [r0, #12]
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** }
 587              		.loc 1 540 1 view .LVU150
 588              		@ sp needed
 589 000e 7047     		bx	lr
 590              		.cfi_endproc
 591              	.LFE183:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 99


 593              		.section	.text.LL_ADC_REG_Init,"ax",%progbits
 594              		.align	1
 595              		.global	LL_ADC_REG_Init
 596              		.syntax unified
 597              		.code	16
 598              		.thumb_func
 600              	LL_ADC_REG_Init:
 601              	.LVL44:
 602              	.LFB184:
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @brief  Initialize some features of ADC group regular.
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         Refer to corresponding unitary functions into
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         (functions with prefix "REG").
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         is conditioned to ADC state:
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         ADC instance must be disabled.
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         This condition is applied to all ADC features, for efficiency
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         and compatibility over all STM32 families. However, the different
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         features can be set under different ADC state conditions
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         (setting possible with ADC enabled without conversion on going,
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         ADC enabled with conversion on going, ...)
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         Each feature can be updated afterwards with a unitary function
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         and potentially with ADC in a different state than disabled,
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         refer to description of each function for setting
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         conditioned to ADC state.
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @note   After using this function, other features must be configured
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         using LL unitary functions.
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *         The minimum configuration remaining to be done is:
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - Set ADC group regular sequencer:
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *            map channel on rank corresponding to channel number.
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *            Refer to function @ref LL_ADC_REG_SetSequencerChannels();
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - Set ADC channel sampling time
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *            Refer to function LL_ADC_SetChannelSamplingTime();
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADCx ADC instance
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADC_REG_InitStruct Pointer to a @ref LL_ADC_REG_InitTypeDef structure
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - SUCCESS: ADC registers are initialized
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *          - ERROR: ADC registers are not initialized
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** ErrorStatus LL_ADC_REG_Init(ADC_TypeDef *ADCx, LL_ADC_REG_InitTypeDef *ADC_REG_InitStruct)
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** {
 603              		.loc 1 575 1 is_stmt 1 view -0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		.loc 1 575 1 is_stmt 0 view .LVU152
 608 0000 10B5     		push	{r4, lr}
 609              	.LCFI3:
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 4, -8
 612              		.cfi_offset 14, -4
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ErrorStatus status = SUCCESS;
 613              		.loc 1 576 3 is_stmt 1 view .LVU153
 614              	.LVL45:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 100


 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Check the parameters */
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(ADCx));
 615              		.loc 1 579 3 view .LVU154
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_REG_TRIG_SOURCE(ADC_REG_InitStruct->TriggerSource));
 616              		.loc 1 580 3 view .LVU155
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_REG_SEQ_SCAN_DISCONT_MODE(ADC_REG_InitStruct->SequencerDiscont));
 617              		.loc 1 581 3 view .LVU156
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_REG_CONTINUOUS_MODE(ADC_REG_InitStruct->ContinuousMode));
 618              		.loc 1 582 3 view .LVU157
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_REG_DMA_TRANSFER(ADC_REG_InitStruct->DMATransfer));
 619              		.loc 1 583 3 view .LVU158
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param(IS_LL_ADC_REG_OVR_DATA_BEHAVIOR(ADC_REG_InitStruct->Overrun));
 620              		.loc 1 584 3 view .LVU159
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* ADC group regular continuous mode and discontinuous mode                 */
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* can not be enabled simultenaeously                                       */
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   assert_param((ADC_REG_InitStruct->ContinuousMode == LL_ADC_REG_CONV_SINGLE)
 621              		.loc 1 588 3 view .LVU160
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                || (ADC_REG_InitStruct->SequencerDiscont == LL_ADC_REG_SEQ_DISCONT_DISABLE));
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Note: Hardware constraint (refer to description of this function):       */
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /*       ADC instance must be disabled.                                     */
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   if (LL_ADC_IsEnabled(ADCx) == 0U)
 622              		.loc 1 593 3 view .LVU161
 623              	.LBB56:
 624              	.LBI56:
3395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 625              		.loc 3 3395 26 view .LVU162
 626              	.LBB57:
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 627              		.loc 3 3397 3 view .LVU163
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 628              		.loc 3 3397 11 is_stmt 0 view .LVU164
 629 0002 8368     		ldr	r3, [r0, #8]
 630              	.LVL46:
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 631              		.loc 3 3397 11 view .LVU165
 632              	.LBE57:
 633              	.LBE56:
 634              		.loc 1 593 6 view .LVU166
 635 0004 DB07     		lsls	r3, r3, #31
 636 0006 0FD4     		bmi	.L35
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   {
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Configuration of ADC hierarchical scope:                               */
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*  - ADC group regular                                                   */
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    - Set ADC group regular trigger source                              */
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    - Set ADC group regular sequencer discontinuous mode                */
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    - Set ADC group regular continuous mode                             */
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    - Set ADC group regular conversion data transfer: no transfer or    */
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*      transfer by DMA, and DMA requests mode                            */
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*    - Set ADC group regular overrun behavior                            */
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Note: On this STM32 series, ADC trigger edge is set to value 0x0 by     */
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /*       setting of trigger source to SW start.                           */
 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     MODIFY_REG(ADCx->CFGR1,
 637              		.loc 1 605 5 is_stmt 1 view .LVU167
 638 0008 C368     		ldr	r3, [r0, #12]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 101


 639 000a 084A     		ldr	r2, .L36
 640 000c 1A40     		ands	r2, r3
 641 000e 0B68     		ldr	r3, [r1]
 642 0010 4C68     		ldr	r4, [r1, #4]
 643 0012 2343     		orrs	r3, r4
 644 0014 8C68     		ldr	r4, [r1, #8]
 645 0016 2343     		orrs	r3, r4
 646 0018 CC68     		ldr	r4, [r1, #12]
 647 001a 2343     		orrs	r3, r4
 648 001c 0969     		ldr	r1, [r1, #16]
 649              	.LVL47:
 650              		.loc 1 605 5 is_stmt 0 view .LVU168
 651 001e 0B43     		orrs	r3, r1
 652 0020 1343     		orrs	r3, r2
 653 0022 C360     		str	r3, [r0, #12]
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 654              		.loc 1 576 15 view .LVU169
 655 0024 0020     		movs	r0, #0
 656              	.LVL48:
 657              	.L34:
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                ADC_CFGR1_EXTSEL
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_EXTEN
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_DISCEN
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_CONT
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_DMAEN
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_DMACFG
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_CFGR1_OVRMOD
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                ,
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                ADC_REG_InitStruct->TriggerSource
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_REG_InitStruct->SequencerDiscont
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_REG_InitStruct->ContinuousMode
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_REG_InitStruct->DMATransfer
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****                | ADC_REG_InitStruct->Overrun
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****               );
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   else
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   {
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     /* Initialization error: ADC instance is not disabled. */
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****     status = ERROR;
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   return status;
 658              		.loc 1 627 3 is_stmt 1 view .LVU170
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** }
 659              		.loc 1 628 1 is_stmt 0 view .LVU171
 660              		@ sp needed
 661 0026 10BD     		pop	{r4, pc}
 662              	.LVL49:
 663              	.L35:
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 664              		.loc 1 625 12 view .LVU172
 665 0028 0120     		movs	r0, #1
 666              	.LVL50:
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   }
 667              		.loc 1 625 12 view .LVU173
 668 002a FCE7     		b	.L34
 669              	.L37:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 102


 670              		.align	2
 671              	.L36:
 672 002c 3CC2FEFF 		.word	-81348
 673              		.cfi_endproc
 674              	.LFE184:
 676              		.section	.text.LL_ADC_REG_StructInit,"ax",%progbits
 677              		.align	1
 678              		.global	LL_ADC_REG_StructInit
 679              		.syntax unified
 680              		.code	16
 681              		.thumb_func
 683              	LL_ADC_REG_StructInit:
 684              	.LVL51:
 685              	.LFB185:
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** 
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** /**
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @brief  Set each @ref LL_ADC_REG_InitTypeDef field to default value.
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @param  ADC_REG_InitStruct Pointer to a @ref LL_ADC_REG_InitTypeDef structure
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   *                            whose fields will be set to default values.
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   * @retval None
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   */
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** void LL_ADC_REG_StructInit(LL_ADC_REG_InitTypeDef *ADC_REG_InitStruct)
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** {
 686              		.loc 1 637 1 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Set ADC_REG_InitStruct fields to default values */
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Set fields of ADC group regular */
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /* Note: On this STM32 series, ADC trigger edge is set to value 0x0 by       */
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   /*       setting of trigger source to SW start.                             */
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_REG_InitStruct->TriggerSource    = LL_ADC_REG_TRIG_SOFTWARE;
 691              		.loc 1 642 3 view .LVU175
 692              		.loc 1 642 40 is_stmt 0 view .LVU176
 693 0000 0023     		movs	r3, #0
 694 0002 0360     		str	r3, [r0]
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_REG_InitStruct->SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 695              		.loc 1 643 3 is_stmt 1 view .LVU177
 696              		.loc 1 643 40 is_stmt 0 view .LVU178
 697 0004 4360     		str	r3, [r0, #4]
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_REG_InitStruct->ContinuousMode   = LL_ADC_REG_CONV_SINGLE;
 698              		.loc 1 644 3 is_stmt 1 view .LVU179
 699              		.loc 1 644 40 is_stmt 0 view .LVU180
 700 0006 8360     		str	r3, [r0, #8]
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_REG_InitStruct->DMATransfer      = LL_ADC_REG_DMA_TRANSFER_NONE;
 701              		.loc 1 645 3 is_stmt 1 view .LVU181
 702              		.loc 1 645 40 is_stmt 0 view .LVU182
 703 0008 C360     		str	r3, [r0, #12]
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c ****   ADC_REG_InitStruct->Overrun          = LL_ADC_REG_OVR_DATA_OVERWRITTEN;
 704              		.loc 1 646 3 is_stmt 1 view .LVU183
 705              		.loc 1 646 40 is_stmt 0 view .LVU184
 706 000a 8023     		movs	r3, #128
 707 000c 5B01     		lsls	r3, r3, #5
 708 000e 0361     		str	r3, [r0, #16]
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_adc.c **** }
 709              		.loc 1 647 1 view .LVU185
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 103


 710              		@ sp needed
 711 0010 7047     		bx	lr
 712              		.cfi_endproc
 713              	.LFE185:
 715              		.text
 716              	.Letext0:
 717              		.file 4 "c:\\developtools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defau
 718              		.file 5 "c:\\developtools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 719              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 720              		.file 7 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s 			page 104


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_ll_adc.c
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:18     .text.LL_ADC_CommonDeInit:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:24     .text.LL_ADC_CommonDeInit:00000000 LL_ADC_CommonDeInit
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:75     .text.LL_ADC_CommonDeInit:00000018 $d
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:81     .text.LL_ADC_CommonInit:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:87     .text.LL_ADC_CommonInit:00000000 LL_ADC_CommonInit
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:154    .text.LL_ADC_CommonInit:0000001c $d
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:160    .text.LL_ADC_CommonStructInit:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:166    .text.LL_ADC_CommonStructInit:00000000 LL_ADC_CommonStructInit
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:186    .text.LL_ADC_DeInit:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:192    .text.LL_ADC_DeInit:00000000 LL_ADC_DeInit
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:464    .text.LL_ADC_DeInit:000000d0 $d
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:476    .text.LL_ADC_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:482    .text.LL_ADC_Init:00000000 LL_ADC_Init
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:553    .text.LL_ADC_Init:00000030 $d
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:558    .text.LL_ADC_StructInit:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:564    .text.LL_ADC_StructInit:00000000 LL_ADC_StructInit
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:594    .text.LL_ADC_REG_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:600    .text.LL_ADC_REG_Init:00000000 LL_ADC_REG_Init
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:672    .text.LL_ADC_REG_Init:0000002c $d
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:677    .text.LL_ADC_REG_StructInit:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccYkVAiR.s:683    .text.LL_ADC_REG_StructInit:00000000 LL_ADC_REG_StructInit

NO UNDEFINED SYMBOLS
