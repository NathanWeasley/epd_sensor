ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_CRC_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  23              	MX_CRC_Init:
  24              	.LFB936:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "app.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** static void MX_ADC_Init(void);
  52:Core/Src/main.c **** static void MX_CRC_Init(void);
  53:Core/Src/main.c **** static void MX_LPTIM1_Init(void);
  54:Core/Src/main.c **** static void MX_RTC_Init(void);
  55:Core/Src/main.c **** static void MX_SPI1_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_SYSCFG);
  79:Core/Src/main.c ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* SysTick_IRQn interrupt configuration */
  82:Core/Src/main.c ****   NVIC_SetPriority(SysTick_IRQn, 3);
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Configure the system clock */
  89:Core/Src/main.c ****   SystemClock_Config();
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:Core/Src/main.c ****   MX_GPIO_Init();
  97:Core/Src/main.c ****   MX_ADC_Init();
  98:Core/Src/main.c ****   MX_CRC_Init();
  99:Core/Src/main.c ****   MX_LPTIM1_Init();
 100:Core/Src/main.c ****   MX_RTC_Init();
 101:Core/Src/main.c ****   MX_SPI1_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Infinite loop */
 107:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 108:Core/Src/main.c ****   while (1)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     /* USER CODE END WHILE */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c ****   /* USER CODE END 3 */
 115:Core/Src/main.c **** }
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /**
 118:Core/Src/main.c ****   * @brief System Clock Configuration
 119:Core/Src/main.c ****   * @retval None
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c **** void SystemClock_Config(void)
 122:Core/Src/main.c **** {
 123:Core/Src/main.c ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_0);
 124:Core/Src/main.c ****   while(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_0)
 125:Core/Src/main.c ****   {
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c ****   LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE1);
 128:Core/Src/main.c ****   while (LL_PWR_IsActiveFlag_VOS() != 0)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   LL_RCC_HSI_EnableDivider();
 132:Core/Src/main.c ****   LL_RCC_HSI_Enable();
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****    /* Wait till HSI is ready */
 135:Core/Src/main.c ****   while(LL_RCC_HSI_IsReady() != 1)
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   LL_RCC_HSI_SetCalibTrimming(16);
 140:Core/Src/main.c ****   LL_RCC_LSI_Enable();
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****    /* Wait till LSI is ready */
 143:Core/Src/main.c ****   while(LL_RCC_LSI_IsReady() != 1)
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c ****   LL_PWR_EnableBkUpAccess();
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 4


 148:Core/Src/main.c ****   if(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSE)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     LL_RCC_ForceBackupDomainReset();
 151:Core/Src/main.c ****     LL_RCC_ReleaseBackupDomainReset();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c ****   LL_RCC_LSE_SetDriveCapability(LL_RCC_LSEDRIVE_LOW);
 154:Core/Src/main.c ****   LL_RCC_LSE_Enable();
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****    /* Wait till LSE is ready */
 157:Core/Src/main.c ****   while(LL_RCC_LSE_IsReady() != 1)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c ****   if(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSE)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     LL_RCC_SetRTCClockSource(LL_RCC_RTC_CLKSOURCE_LSE);
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c ****   LL_RCC_EnableRTC();
 166:Core/Src/main.c ****   LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI, LL_RCC_PLL_MUL_4, LL_RCC_PLL_DIV_2);
 167:Core/Src/main.c ****   LL_RCC_PLL_Enable();
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****    /* Wait till PLL is ready */
 170:Core/Src/main.c ****   while(LL_RCC_PLL_IsReady() != 1)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 175:Core/Src/main.c ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
 176:Core/Src/main.c ****   LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 177:Core/Src/main.c ****   LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****    /* Wait till System clock is ready */
 180:Core/Src/main.c ****   while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   LL_Init1msTick(8000000);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   LL_SetSystemCoreClock(8000000);
 188:Core/Src/main.c ****   LL_RCC_SetLPTIMClockSource(LL_RCC_LPTIM1_CLKSOURCE_LSI);
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief ADC Initialization Function
 193:Core/Src/main.c ****   * @param None
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** static void MX_ADC_Init(void)
 197:Core/Src/main.c **** {
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 204:Core/Src/main.c ****   LL_ADC_InitTypeDef ADC_InitStruct = {0};
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* Peripheral clock enable */
 209:Core/Src/main.c ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_ADC1);
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 212:Core/Src/main.c ****   /**ADC GPIO Configuration
 213:Core/Src/main.c ****   PA0   ------> ADC_IN0
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c ****   GPIO_InitStruct.Pin = BATT_IN_Pin;
 216:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 217:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 218:Core/Src/main.c ****   LL_GPIO_Init(BATT_IN_GPIO_Port, &GPIO_InitStruct);
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /** Configure Regular Channel
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c ****   LL_ADC_REG_SetSequencerChAdd(ADC1, LL_ADC_CHANNEL_0);
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /** Common config
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
 231:Core/Src/main.c ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 232:Core/Src/main.c ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 233:Core/Src/main.c ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 234:Core/Src/main.c ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 235:Core/Src/main.c ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 236:Core/Src/main.c ****   LL_ADC_SetSamplingTimeCommonChannels(ADC1, LL_ADC_SAMPLINGTIME_1CYCLE_5);
 237:Core/Src/main.c ****   LL_ADC_SetOverSamplingScope(ADC1, LL_ADC_OVS_DISABLE);
 238:Core/Src/main.c ****   LL_ADC_REG_SetSequencerScanDirection(ADC1, LL_ADC_REG_SEQ_SCAN_DIR_FORWARD);
 239:Core/Src/main.c ****   LL_ADC_SetCommonFrequencyMode(__LL_ADC_COMMON_INSTANCE(ADC1), LL_ADC_CLOCK_FREQ_MODE_HIGH);
 240:Core/Src/main.c ****   LL_ADC_DisableIT_EOC(ADC1);
 241:Core/Src/main.c ****   LL_ADC_DisableIT_EOS(ADC1);
 242:Core/Src/main.c ****   ADC_InitStruct.Clock = LL_ADC_CLOCK_SYNC_PCLK_DIV1;
 243:Core/Src/main.c ****   ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 244:Core/Src/main.c ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 245:Core/Src/main.c ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 246:Core/Src/main.c ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* Enable ADC internal voltage regulator */
 249:Core/Src/main.c ****   LL_ADC_EnableInternalRegulator(ADC1);
 250:Core/Src/main.c ****   /* Delay for ADC internal voltage regulator stabilization. */
 251:Core/Src/main.c ****   /* Compute number of CPU cycles to wait for, from delay in us. */
 252:Core/Src/main.c ****   /* Note: Variable divided by 2 to compensate partially */
 253:Core/Src/main.c ****   /* CPU processing cycles (depends on compilation optimization). */
 254:Core/Src/main.c ****   /* Note: If system core clock frequency is below 200kHz, wait time */
 255:Core/Src/main.c ****   /* is only a few CPU processing cycles. */
 256:Core/Src/main.c ****   uint32_t wait_loop_index;
 257:Core/Src/main.c ****   wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US * (SystemCoreClock / (100000 * 2))) / 10)
 258:Core/Src/main.c ****   while(wait_loop_index != 0)
 259:Core/Src/main.c ****   {
 260:Core/Src/main.c ****     wait_loop_index--;
 261:Core/Src/main.c ****   }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 6


 262:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** /**
 269:Core/Src/main.c ****   * @brief CRC Initialization Function
 270:Core/Src/main.c ****   * @param None
 271:Core/Src/main.c ****   * @retval None
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c **** static void MX_CRC_Init(void)
 274:Core/Src/main.c **** {
  26              		.loc 1 274 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* Peripheral clock enable */
 281:Core/Src/main.c ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_CRC);
  34              		.loc 1 281 3 view .LVU1
  35              	.LVL0:
  36              	.LBB160:
  37              	.LBI160:
  38              		.file 2 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @file    stm32l0xx_ll_bus.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @attention
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 7


  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * All rights reserved.
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file in
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * the root directory of this software component.
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifndef __STM32L0xx_LL_BUS_H
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define __STM32L0xx_LL_BUS_H
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifdef __cplusplus
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** extern "C" {
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #include "stm32l0xx.h"
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @addtogroup STM32L0xx_LL_Driver
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RCC)
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN      /*!< DMA1 clock enable */
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_MIF            RCC_AHBENR_MIFEN       /*!< MIF clock enable */
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN  /*!< Sleep Mode SRAM clock enable
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN       /*!< CRC clock enable */
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TSC)
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN       /*!< TSC clock enable */
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*TSC*/
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RNG)
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN       /*!< RNG clock enable */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 8


  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*RNG*/
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(AES)
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_CRYPEN      /*!< CRYP clock enable */
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*AES*/
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN     /*!< TIM2 clock enable */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM3)
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN     /*!< TIM3 clock enable */
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM6)
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN     /*!< TIM6 clock enable */
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM7)
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN     /*!< TIM7 clock enable */
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(LCD)
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR_LCDEN      /*!< LCD clock enable */
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*LCD*/
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN     /*!< WWDG clock enable */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(SPI2)
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN     /*!< SPI2 clock enable */
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN   /*!< USART2 clock enable */
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APB1ENR_LPUART1EN  /*!< LPUART1 clock enable */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART4)
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN   /*!< USART4 clock enable */
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART5)
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN   /*!< USART5 clock enable */
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN     /*!< I2C1 clock enable */
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C2)
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN     /*!< I2C2 clock enable */
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USB)
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN      /*!< USB clock enable */
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*USB*/
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(CRS)
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN      /*!< CRS clock enable */
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*CRS*/
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN      /*!< PWR clock enable */
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(DAC)
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN      /*!< DAC clock enable */
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C3)
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR_I2C3EN     /*!< I2C3 clock enable */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR_LPTIM1EN   /*!< LPTIM1 clock enable */
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 9


 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN  /*!< SYSCFG clock enable */
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM21          RCC_APB2ENR_TIM21EN   /*!< TIM21 clock enable */
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM22)
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM22          RCC_APB2ENR_TIM22EN   /*!< TIM22 clock enable */
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN      /*!< FireWall clock enable */
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN    /*!< ADC1 clock enable */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN    /*!< SPI1 clock enable */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART1)
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN  /*!< USART1 clock enable */
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN  /*!< DBGMCU clock enable */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             0xFFFFFFFFU
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN    /*!< GPIO port A control */
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN    /*!< GPIO port B control */
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN    /*!< GPIO port C control */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOD)
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN    /*!< GPIO port D control */
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOD*/
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOE)
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN    /*!< GPIO port H control */
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOE*/
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOH)
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOH           RCC_IOPENR_GPIOHEN    /*!< GPIO port H control */
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOH*/
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 10


 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_EnableClock\n
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_EnableClock\n
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_EnableClock\n
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_EnableClock\n
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_EnableClock
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
  39              		.loc 2 222 22 view .LVU2
  40              	.LBB161:
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
  41              		.loc 2 224 3 view .LVU3
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
  42              		.loc 2 225 3 view .LVU4
  43 0002 0F4A     		ldr	r2, .L2
  44 0004 116B     		ldr	r1, [r2, #48]
  45 0006 8020     		movs	r0, #128
  46 0008 4001     		lsls	r0, r0, #5
  47 000a 0143     		orrs	r1, r0
  48 000c 1163     		str	r1, [r2, #48]
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
  49              		.loc 2 227 3 view .LVU5
  50              		.loc 2 227 12 is_stmt 0 view .LVU6
  51 000e 136B     		ldr	r3, [r2, #48]
  52 0010 0340     		ands	r3, r0
  53              		.loc 2 227 10 view .LVU7
  54 0012 0193     		str	r3, [sp, #4]
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
  55              		.loc 2 228 3 is_stmt 1 view .LVU8
  56 0014 019B     		ldr	r3, [sp, #4]
  57              	.LVL1:
  58              		.loc 2 228 3 is_stmt 0 view .LVU9
  59              	.LBE161:
  60              	.LBE160:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 11


 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 286:Core/Src/main.c ****   LL_CRC_SetInputDataReverseMode(CRC, LL_CRC_INDATA_REVERSE_NONE);
  61              		.loc 1 286 3 is_stmt 1 view .LVU10
  62              	.LBB162:
  63              	.LBI162:
  64              		.file 3 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @file    stm32l0xx_ll_crc.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief   Header file of CRC LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * in the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #ifndef STM32L0xx_LL_CRC_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define STM32L0xx_LL_CRC_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #ifdef __cplusplus
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** extern "C" {
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #endif
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #include "stm32l0xx.h"
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #if defined(CRC)
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL CRC
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Private macros ------------------------------------------------------------*/
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Exported types ------------------------------------------------------------*/
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Exported constants --------------------------------------------------------*/
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_Exported_Constants CRC Exported Constants
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 12


  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_POLYLENGTH Polynomial length
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_POLYLENGTH_32B              0x00000000U                              /*!< 32 bits Po
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_POLYLENGTH_16B              CRC_CR_POLYSIZE_0                        /*!< 16 bits Po
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_POLYLENGTH_8B               CRC_CR_POLYSIZE_1                        /*!< 8 bits Pol
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_POLYLENGTH_7B               (CRC_CR_POLYSIZE_1 | CRC_CR_POLYSIZE_0)  /*!< 7 bits Pol
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @}
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_INDATA_REVERSE Input Data Reverse
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_INDATA_REVERSE_NONE         0x00000000U                              /*!< Input Data
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_INDATA_REVERSE_BYTE         CRC_CR_REV_IN_0                          /*!< Input Data
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_INDATA_REVERSE_HALFWORD     CRC_CR_REV_IN_1                          /*!< Input Data
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_INDATA_REVERSE_WORD         (CRC_CR_REV_IN_1 | CRC_CR_REV_IN_0)      /*!< Input Data
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @}
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_OUTDATA_REVERSE Output Data Reverse
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_OUTDATA_REVERSE_NONE        0x00000000U                               /*!< Output Da
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_OUTDATA_REVERSE_BIT         CRC_CR_REV_OUT                            /*!< Output Da
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @}
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_Default_Polynomial_Value    Default CRC generating polynomial value
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief    Normal representation of this polynomial value is
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *           X^32 + X^26 + X^23 + X^22 + X^16 + X^12 + X^11 + X^10 +X^8 + X^7 + X^5 + X^4 + X^2 + 
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_DEFAULT_CRC32_POLY          0x04C11DB7U                               /*!< Default C
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @}
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_Default_InitValue    Default CRC computation initialization value
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_DEFAULT_CRC_INITVALUE       0xFFFFFFFFU                               /*!< Default C
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @}
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @}
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Exported macro ------------------------------------------------------------*/
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_Exported_Macros CRC Exported Macros
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 13


 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_EM_WRITE_READ Common Write and read registers Macros
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Write a value in CRC register
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  __INSTANCE__ CRC Instance
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  __REG__ Register to be written
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  __VALUE__ Value to be written in the register
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval None
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, __VALUE_
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Read a value in CRC register
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  __INSTANCE__ CRC Instance
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  __REG__ Register to be read
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval Register value
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** #define LL_CRC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @}
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @}
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /* Exported functions --------------------------------------------------------*/
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_Exported_Functions CRC Exported Functions
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /** @defgroup CRC_LL_EF_Configuration CRC Configuration functions
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @{
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Reset the CRC calculation unit.
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @note   If Programmable Initial CRC value feature
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         is available, also set the Data Register to the value stored in the
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         CRC_INIT register, otherwise, reset Data Register to its default value.
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll CR           RESET         LL_CRC_ResetCRCCalculationUnit
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval None
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_ResetCRCCalculationUnit(CRC_TypeDef *CRCx)
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   SET_BIT(CRCx->CR, CRC_CR_RESET);
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Configure size of the polynomial.
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll CR           POLYSIZE      LL_CRC_SetPolynomialSize
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 14


 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  PolySize This parameter can be one of the following values:
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_32B
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_16B
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_8B
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_7B
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval None
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_SetPolynomialSize(CRC_TypeDef *CRCx, uint32_t PolySize)
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   MODIFY_REG(CRCx->CR, CRC_CR_POLYSIZE, PolySize);
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Return size of the polynomial.
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll CR           POLYSIZE      LL_CRC_GetPolynomialSize
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval Returned value can be one of the following values:
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_32B
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_16B
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_8B
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_7B
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE uint32_t LL_CRC_GetPolynomialSize(CRC_TypeDef *CRCx)
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   return (uint32_t)(READ_BIT(CRCx->CR, CRC_CR_POLYSIZE));
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Configure the reversal of the bit order of the input data
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll CR           REV_IN        LL_CRC_SetInputDataReverseMode
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  ReverseMode This parameter can be one of the following values:
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_NONE
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_BYTE
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_HALFWORD
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_WORD
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval None
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_SetInputDataReverseMode(CRC_TypeDef *CRCx, uint32_t ReverseMode)
  65              		.loc 3 203 22 view .LVU11
  66              	.LBB163:
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   MODIFY_REG(CRCx->CR, CRC_CR_REV_IN, ReverseMode);
  67              		.loc 3 205 3 view .LVU12
  68 0016 0B4B     		ldr	r3, .L2+4
  69 0018 9A68     		ldr	r2, [r3, #8]
  70 001a 6021     		movs	r1, #96
  71 001c 8A43     		bics	r2, r1
  72 001e 9A60     		str	r2, [r3, #8]
  73              	.LVL2:
  74              		.loc 3 205 3 is_stmt 0 view .LVU13
  75              	.LBE163:
  76              	.LBE162:
 287:Core/Src/main.c ****   LL_CRC_SetOutputDataReverseMode(CRC, LL_CRC_OUTDATA_REVERSE_NONE);
  77              		.loc 1 287 3 is_stmt 1 view .LVU14
  78              	.LBB164:
  79              	.LBI164:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 15


 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Return type of reversal for input data bit order
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll CR           REV_IN        LL_CRC_GetInputDataReverseMode
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval Returned value can be one of the following values:
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_NONE
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_BYTE
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_HALFWORD
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_WORD
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE uint32_t LL_CRC_GetInputDataReverseMode(CRC_TypeDef *CRCx)
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   return (uint32_t)(READ_BIT(CRCx->CR, CRC_CR_REV_IN));
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Configure the reversal of the bit order of the Output data
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll CR           REV_OUT       LL_CRC_SetOutputDataReverseMode
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  ReverseMode This parameter can be one of the following values:
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_OUTDATA_REVERSE_NONE
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_OUTDATA_REVERSE_BIT
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval None
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_SetOutputDataReverseMode(CRC_TypeDef *CRCx, uint32_t ReverseMode)
  80              		.loc 3 232 22 view .LVU15
  81              	.LBB165:
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   MODIFY_REG(CRCx->CR, CRC_CR_REV_OUT, ReverseMode);
  82              		.loc 3 234 3 view .LVU16
  83 0020 9A68     		ldr	r2, [r3, #8]
  84 0022 2031     		adds	r1, r1, #32
  85 0024 8A43     		bics	r2, r1
  86 0026 9A60     		str	r2, [r3, #8]
  87              	.LVL3:
  88              		.loc 3 234 3 is_stmt 0 view .LVU17
  89              	.LBE165:
  90              	.LBE164:
 288:Core/Src/main.c ****   LL_CRC_SetPolynomialCoef(CRC, LL_CRC_DEFAULT_CRC32_POLY);
  91              		.loc 1 288 3 is_stmt 1 view .LVU18
  92              	.LBB166:
  93              	.LBI166:
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Return type of reversal of the bit order of the Output data
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll CR           REV_OUT       LL_CRC_GetOutputDataReverseMode
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval Returned value can be one of the following values:
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_OUTDATA_REVERSE_NONE
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         @arg @ref LL_CRC_OUTDATA_REVERSE_BIT
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE uint32_t LL_CRC_GetOutputDataReverseMode(CRC_TypeDef *CRCx)
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   return (uint32_t)(READ_BIT(CRCx->CR, CRC_CR_REV_OUT));
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 16


 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Initialize the Programmable initial CRC value.
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @note   If the CRC size is less than 32 bits, the least significant bits
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         are used to write the correct value
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @note   LL_CRC_DEFAULT_CRC_INITVALUE could be used as value for InitCrc parameter.
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll INIT         INIT          LL_CRC_SetInitialData
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  InitCrc Value to be programmed in Programmable initial CRC value register
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval None
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_SetInitialData(CRC_TypeDef *CRCx, uint32_t InitCrc)
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   WRITE_REG(CRCx->INIT, InitCrc);
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Return current Initial CRC value.
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @note   If the CRC size is less than 32 bits, the least significant bits
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         are used to read the correct value
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll INIT         INIT          LL_CRC_GetInitialData
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval Value programmed in Programmable initial CRC value register
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE uint32_t LL_CRC_GetInitialData(CRC_TypeDef *CRCx)
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   return (uint32_t)(READ_REG(CRCx->INIT));
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** 
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** /**
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @brief  Initialize the Programmable polynomial value
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         (coefficients of the polynomial to be used for CRC calculation).
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @note   LL_CRC_DEFAULT_CRC32_POLY could be used as value for PolynomCoef parameter.
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @note   Please check Reference Manual and existing Errata Sheets,
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         regarding possible limitations for Polynomial values usage.
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   *         For example, for a polynomial of degree 7, X^7 + X^6 + X^5 + X^2 + 1 is written 0x65
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @rmtoll POL          POL           LL_CRC_SetPolynomialCoef
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @param  PolynomCoef Value to be programmed in Programmable Polynomial value register
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   * @retval None
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   */
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_SetPolynomialCoef(CRC_TypeDef *CRCx, uint32_t PolynomCoef)
  94              		.loc 3 290 22 view .LVU19
  95              	.LBB167:
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h ****   WRITE_REG(CRCx->POL, PolynomCoef);
  96              		.loc 3 292 3 view .LVU20
  97 0028 074A     		ldr	r2, .L2+8
  98 002a 5A61     		str	r2, [r3, #20]
  99              	.LVL4:
 100              		.loc 3 292 3 is_stmt 0 view .LVU21
 101              	.LBE167:
 102              	.LBE166:
 289:Core/Src/main.c ****   LL_CRC_SetPolynomialSize(CRC, LL_CRC_POLYLENGTH_32B);
 103              		.loc 1 289 3 is_stmt 1 view .LVU22
 104              	.LBB168:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 17


 105              	.LBI168:
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 106              		.loc 3 172 22 view .LVU23
 107              	.LBB169:
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 108              		.loc 3 174 3 view .LVU24
 109 002c 9A68     		ldr	r2, [r3, #8]
 110 002e 6839     		subs	r1, r1, #104
 111 0030 8A43     		bics	r2, r1
 112 0032 9A60     		str	r2, [r3, #8]
 113              	.LVL5:
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 114              		.loc 3 174 3 is_stmt 0 view .LVU25
 115              	.LBE169:
 116              	.LBE168:
 290:Core/Src/main.c ****   LL_CRC_SetInitialData(CRC, LL_CRC_DEFAULT_CRC_INITVALUE);
 117              		.loc 1 290 3 is_stmt 1 view .LVU26
 118              	.LBB170:
 119              	.LBI170:
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** {
 120              		.loc 3 260 22 view .LVU27
 121              	.LBB171:
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 122              		.loc 3 262 3 view .LVU28
 123 0034 0122     		movs	r2, #1
 124 0036 5242     		rsbs	r2, r2, #0
 125 0038 1A61     		str	r2, [r3, #16]
 126              	.LVL6:
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_crc.h **** }
 127              		.loc 3 262 3 is_stmt 0 view .LVU29
 128              	.LBE171:
 129              	.LBE170:
 291:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** }
 130              		.loc 1 295 1 view .LVU30
 131 003a 02B0     		add	sp, sp, #8
 132              		@ sp needed
 133 003c 7047     		bx	lr
 134              	.L3:
 135 003e C046     		.align	2
 136              	.L2:
 137 0040 00100240 		.word	1073876992
 138 0044 00300240 		.word	1073885184
 139 0048 B71DC104 		.word	79764919
 140              		.cfi_endproc
 141              	.LFE936:
 143              		.section	.text.MX_LPTIM1_Init,"ax",%progbits
 144              		.align	1
 145              		.syntax unified
 146              		.code	16
 147              		.thumb_func
 149              	MX_LPTIM1_Init:
 150              	.LFB937:
 296:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 18


 297:Core/Src/main.c **** /**
 298:Core/Src/main.c ****   * @brief LPTIM1 Initialization Function
 299:Core/Src/main.c ****   * @param None
 300:Core/Src/main.c ****   * @retval None
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c **** static void MX_LPTIM1_Init(void)
 303:Core/Src/main.c **** {
 151              		.loc 1 303 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156 0000 82B0     		sub	sp, sp, #8
 157              	.LCFI1:
 158              		.cfi_def_cfa_offset 8
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE BEGIN LPTIM1_Init 0 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE END LPTIM1_Init 0 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* Peripheral clock enable */
 310:Core/Src/main.c ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_LPTIM1);
 159              		.loc 1 310 3 view .LVU32
 160              	.LVL7:
 161              	.LBB172:
 162              	.LBI172:
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_IsEnabledClock\n
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_IsEnabledClock\n
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_IsEnabledClock\n
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_IsEnabledClock\n
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_IsEnabledClock\n
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_IsEnabledClock
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_DisableClock\n
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_DisableClock\n
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_DisableClock\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 19


 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_DisableClock\n
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_DisableClock\n
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_DisableClock
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ForceReset\n
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ForceReset\n
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset\n
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset\n
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ForceReset
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ReleaseReset\n
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ReleaseReset\n
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset\n
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ReleaseReset
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 20


 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_EnableClockSleep\n
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockSleep\n
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_EnableClockSleep
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_DisableClockSleep\n
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockSleep\n
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_DisableClockSleep
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 21


 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_EnableClock\n
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_EnableClock\n
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_EnableClock\n
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_EnableClock\n
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_EnableClock\n
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_EnableClock\n
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_EnableClock\n
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_EnableClock\n
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_EnableClock\n
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_EnableClock\n
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_EnableClock\n
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_EnableClock\n
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_EnableClock\n
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_EnableClock\n
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_EnableClock\n
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_EnableClock\n
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_EnableClock\n
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_EnableClock\n
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_EnableClock
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 22


 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 163              		.loc 2 438 22 view .LVU33
 164              	.LBB173:
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 165              		.loc 2 440 3 view .LVU34
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 166              		.loc 2 441 3 view .LVU35
 167 0002 184B     		ldr	r3, .L5
 168 0004 996B     		ldr	r1, [r3, #56]
 169 0006 8022     		movs	r2, #128
 170 0008 1206     		lsls	r2, r2, #24
 171 000a 0A43     		orrs	r2, r1
 172 000c 9A63     		str	r2, [r3, #56]
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 173              		.loc 2 443 3 view .LVU36
 174              		.loc 2 443 12 is_stmt 0 view .LVU37
 175 000e 9B6B     		ldr	r3, [r3, #56]
 176 0010 DB0F     		lsrs	r3, r3, #31
 177 0012 DB07     		lsls	r3, r3, #31
 178              		.loc 2 443 10 view .LVU38
 179 0014 0193     		str	r3, [sp, #4]
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 180              		.loc 2 444 3 is_stmt 1 view .LVU39
 181 0016 019B     		ldr	r3, [sp, #4]
 182              	.LVL8:
 183              		.loc 2 444 3 is_stmt 0 view .LVU40
 184              	.LBE173:
 185              	.LBE172:
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* LPTIM1 interrupt Init */
 313:Core/Src/main.c ****   NVIC_SetPriority(LPTIM1_IRQn, 0);
 186              		.loc 1 313 3 is_stmt 1 view .LVU41
 187              	.LBB174:
 188              	.LBI174:
 189              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
   1:Drivers/CMSIS/Include/core_cm0plus.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0plus.h ****  * @file     core_cm0plus.h
   3:Drivers/CMSIS/Include/core_cm0plus.h ****  * @brief    CMSIS Cortex-M0+ Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0plus.h ****  * @version  V5.0.6
   5:Drivers/CMSIS/Include/core_cm0plus.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0plus.h **** /*
   8:Drivers/CMSIS/Include/core_cm0plus.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0plus.h ****  *
  10:Drivers/CMSIS/Include/core_cm0plus.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0plus.h ****  *
  12:Drivers/CMSIS/Include/core_cm0plus.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0plus.h ****  * not use this file except in compliance with the License.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 23


  14:Drivers/CMSIS/Include/core_cm0plus.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0plus.h ****  *
  16:Drivers/CMSIS/Include/core_cm0plus.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm0plus.h ****  *
  18:Drivers/CMSIS/Include/core_cm0plus.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm0plus.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0plus.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0plus.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0plus.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  24:Drivers/CMSIS/Include/core_cm0plus.h **** 
  25:Drivers/CMSIS/Include/core_cm0plus.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0plus.h **** 
  31:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0plus.h **** 
  34:Drivers/CMSIS/Include/core_cm0plus.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0plus.h **** 
  36:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  39:Drivers/CMSIS/Include/core_cm0plus.h **** 
  40:Drivers/CMSIS/Include/core_cm0plus.h **** /**
  41:Drivers/CMSIS/Include/core_cm0plus.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0plus.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm0plus.h **** 
  44:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0plus.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0plus.h **** 
  47:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0plus.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0plus.h **** 
  50:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0plus.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  53:Drivers/CMSIS/Include/core_cm0plus.h **** 
  54:Drivers/CMSIS/Include/core_cm0plus.h **** 
  55:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0plus.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0plus.h **** /**
  59:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup Cortex-M0+
  60:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
  61:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  62:Drivers/CMSIS/Include/core_cm0plus.h **** 
  63:Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0plus.h ****  
  65:Drivers/CMSIS/Include/core_cm0plus.h **** /*  CMSIS CM0+ definitions */
  66:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_MAIN (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [3
  67:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_SUB  (__CM_CMSIS_VERSION_SUB)                   /*!< \deprecated [1
  68:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION      ((__CM0PLUS_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0plus.h ****                                        __CM0PLUS_CMSIS_VERSION_SUB           )  /*!< \deprecated CM
  70:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 24


  71:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORTEX_M                   (0U)                                       /*!< Cortex-M Core 
  72:Drivers/CMSIS/Include/core_cm0plus.h **** 
  73:Drivers/CMSIS/Include/core_cm0plus.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm0plus.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0plus.h **** */
  76:Drivers/CMSIS/Include/core_cm0plus.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0plus.h **** 
  78:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0plus.h **** 
  83:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0plus.h **** 
  88:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0plus.h **** 
  93:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0plus.h **** 
  98:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0plus.h **** 
 103:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0plus.h **** 
 108:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0plus.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0plus.h **** 
 113:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0plus.h **** 
 115:Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0plus.h **** 
 117:Drivers/CMSIS/Include/core_cm0plus.h **** 
 118:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm0plus.h **** }
 120:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0plus.h **** 
 122:Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* __CORE_CM0PLUS_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0plus.h **** 
 124:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0plus.h **** 
 126:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_DEPENDANT
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 25


 128:Drivers/CMSIS/Include/core_cm0plus.h **** 
 129:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0plus.h **** 
 133:Drivers/CMSIS/Include/core_cm0plus.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __CM0PLUS_REV
 136:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __CM0PLUS_REV             0x0000U
 137:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__CM0PLUS_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0plus.h **** 
 140:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __MPU_PRESENT
 141:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __MPU_PRESENT             0U
 142:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0plus.h **** 
 145:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __VTOR_PRESENT
 146:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __VTOR_PRESENT            0U
 147:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0plus.h **** 
 150:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __NVIC_PRIO_BITS
 151:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __NVIC_PRIO_BITS          2U
 152:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 153:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 154:Drivers/CMSIS/Include/core_cm0plus.h **** 
 155:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __Vendor_SysTickConfig
 156:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __Vendor_SysTickConfig    0U
 157:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 158:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 160:Drivers/CMSIS/Include/core_cm0plus.h **** 
 161:Drivers/CMSIS/Include/core_cm0plus.h **** /* IO definitions (access restrictions to peripheral registers) */
 162:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 163:Drivers/CMSIS/Include/core_cm0plus.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 164:Drivers/CMSIS/Include/core_cm0plus.h **** 
 165:Drivers/CMSIS/Include/core_cm0plus.h ****     <strong>IO Type Qualifiers</strong> are used
 166:Drivers/CMSIS/Include/core_cm0plus.h ****     \li to specify the access to peripheral variables.
 167:Drivers/CMSIS/Include/core_cm0plus.h ****     \li for automatic generation of peripheral register debug information.
 168:Drivers/CMSIS/Include/core_cm0plus.h **** */
 169:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 170:Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 171:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 172:Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 173:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 174:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 175:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 176:Drivers/CMSIS/Include/core_cm0plus.h **** 
 177:Drivers/CMSIS/Include/core_cm0plus.h **** /* following defines should be used for structure members */
 178:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 179:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 180:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 181:Drivers/CMSIS/Include/core_cm0plus.h **** 
 182:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group Cortex-M0+ */
 183:Drivers/CMSIS/Include/core_cm0plus.h **** 
 184:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 26


 185:Drivers/CMSIS/Include/core_cm0plus.h **** 
 186:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 187:Drivers/CMSIS/Include/core_cm0plus.h ****  *                 Register Abstraction
 188:Drivers/CMSIS/Include/core_cm0plus.h ****   Core Register contain:
 189:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register
 190:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Register
 191:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SCB Register
 192:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Register
 193:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core MPU Register
 194:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 195:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 196:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 197:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 198:Drivers/CMSIS/Include/core_cm0plus.h **** */
 199:Drivers/CMSIS/Include/core_cm0plus.h **** 
 200:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 201:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 202:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 203:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Core Register type definitions.
 204:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 205:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 206:Drivers/CMSIS/Include/core_cm0plus.h **** 
 207:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 208:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 209:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 210:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 211:Drivers/CMSIS/Include/core_cm0plus.h **** {
 212:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 213:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 214:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 215:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 216:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 217:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 218:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 219:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 220:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 221:Drivers/CMSIS/Include/core_cm0plus.h **** } APSR_Type;
 222:Drivers/CMSIS/Include/core_cm0plus.h **** 
 223:Drivers/CMSIS/Include/core_cm0plus.h **** /* APSR Register Definitions */
 224:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 225:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 226:Drivers/CMSIS/Include/core_cm0plus.h **** 
 227:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 228:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 229:Drivers/CMSIS/Include/core_cm0plus.h **** 
 230:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 231:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 232:Drivers/CMSIS/Include/core_cm0plus.h **** 
 233:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 234:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 235:Drivers/CMSIS/Include/core_cm0plus.h **** 
 236:Drivers/CMSIS/Include/core_cm0plus.h **** 
 237:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 238:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 240:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 241:Drivers/CMSIS/Include/core_cm0plus.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 27


 242:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 243:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 244:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 247:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:Drivers/CMSIS/Include/core_cm0plus.h **** } IPSR_Type;
 249:Drivers/CMSIS/Include/core_cm0plus.h **** 
 250:Drivers/CMSIS/Include/core_cm0plus.h **** /* IPSR Register Definitions */
 251:Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:Drivers/CMSIS/Include/core_cm0plus.h **** 
 254:Drivers/CMSIS/Include/core_cm0plus.h **** 
 255:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 256:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 258:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 259:Drivers/CMSIS/Include/core_cm0plus.h **** {
 260:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 261:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 262:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 264:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 265:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 266:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 267:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 268:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 269:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 270:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 271:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 272:Drivers/CMSIS/Include/core_cm0plus.h **** } xPSR_Type;
 273:Drivers/CMSIS/Include/core_cm0plus.h **** 
 274:Drivers/CMSIS/Include/core_cm0plus.h **** /* xPSR Register Definitions */
 275:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 276:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0plus.h **** 
 278:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 279:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0plus.h **** 
 281:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 282:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 283:Drivers/CMSIS/Include/core_cm0plus.h **** 
 284:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 285:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 286:Drivers/CMSIS/Include/core_cm0plus.h **** 
 287:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 288:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 289:Drivers/CMSIS/Include/core_cm0plus.h **** 
 290:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 291:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 292:Drivers/CMSIS/Include/core_cm0plus.h **** 
 293:Drivers/CMSIS/Include/core_cm0plus.h **** 
 294:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 295:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Control Registers (CONTROL).
 296:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 297:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 298:Drivers/CMSIS/Include/core_cm0plus.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 28


 299:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 300:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 301:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 302:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 303:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 304:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Drivers/CMSIS/Include/core_cm0plus.h **** } CONTROL_Type;
 307:Drivers/CMSIS/Include/core_cm0plus.h **** 
 308:Drivers/CMSIS/Include/core_cm0plus.h **** /* CONTROL Register Definitions */
 309:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 310:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 311:Drivers/CMSIS/Include/core_cm0plus.h **** 
 312:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 313:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 314:Drivers/CMSIS/Include/core_cm0plus.h **** 
 315:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CORE */
 316:Drivers/CMSIS/Include/core_cm0plus.h **** 
 317:Drivers/CMSIS/Include/core_cm0plus.h **** 
 318:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 319:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 320:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 321:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Type definitions for the NVIC Registers
 322:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 323:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 324:Drivers/CMSIS/Include/core_cm0plus.h **** 
 325:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 326:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 327:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 328:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 329:Drivers/CMSIS/Include/core_cm0plus.h **** {
 330:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 331:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0[31U];
 332:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 333:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RSERVED1[31U];
 334:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 335:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED2[31U];
 336:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 337:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED3[31U];
 338:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED4[64U];
 339:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 340:Drivers/CMSIS/Include/core_cm0plus.h **** }  NVIC_Type;
 341:Drivers/CMSIS/Include/core_cm0plus.h **** 
 342:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_NVIC */
 343:Drivers/CMSIS/Include/core_cm0plus.h **** 
 344:Drivers/CMSIS/Include/core_cm0plus.h **** 
 345:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 346:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 347:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 348:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Control Block Registers
 349:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 350:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 351:Drivers/CMSIS/Include/core_cm0plus.h **** 
 352:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 353:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Control Block (SCB).
 354:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 355:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 29


 356:Drivers/CMSIS/Include/core_cm0plus.h **** {
 357:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 358:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 359:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 360:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 361:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 362:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0;
 363:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 364:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 365:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 366:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 367:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED1;
 368:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 369:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 370:Drivers/CMSIS/Include/core_cm0plus.h **** } SCB_Type;
 371:Drivers/CMSIS/Include/core_cm0plus.h **** 
 372:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB CPUID Register Definitions */
 373:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 374:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0plus.h **** 
 376:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 377:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 378:Drivers/CMSIS/Include/core_cm0plus.h **** 
 379:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 380:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 381:Drivers/CMSIS/Include/core_cm0plus.h **** 
 382:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 383:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0plus.h **** 
 385:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 386:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0plus.h **** 
 388:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 389:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0plus.h **** 
 392:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0plus.h **** 
 395:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0plus.h **** 
 398:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 399:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0plus.h **** 
 401:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 402:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 403:Drivers/CMSIS/Include/core_cm0plus.h **** 
 404:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0plus.h **** 
 407:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0plus.h **** 
 410:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 30


 413:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 415:Drivers/CMSIS/Include/core_cm0plus.h **** 
 416:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 417:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 418:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Pos                 8U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Msk                (0xFFFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 421:Drivers/CMSIS/Include/core_cm0plus.h **** 
 422:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 423:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 425:Drivers/CMSIS/Include/core_cm0plus.h **** 
 426:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 428:Drivers/CMSIS/Include/core_cm0plus.h **** 
 429:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 431:Drivers/CMSIS/Include/core_cm0plus.h **** 
 432:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0plus.h **** 
 435:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 437:Drivers/CMSIS/Include/core_cm0plus.h **** 
 438:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Control Register Definitions */
 439:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 440:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm0plus.h **** 
 442:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 443:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm0plus.h **** 
 445:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 446:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 447:Drivers/CMSIS/Include/core_cm0plus.h **** 
 448:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Configuration Control Register Definitions */
 449:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm0plus.h **** 
 452:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm0plus.h **** 
 455:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Handler Control and State Register Definitions */
 456:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 458:Drivers/CMSIS/Include/core_cm0plus.h **** 
 459:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SCB */
 460:Drivers/CMSIS/Include/core_cm0plus.h **** 
 461:Drivers/CMSIS/Include/core_cm0plus.h **** 
 462:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 463:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 464:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 465:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Timer Registers.
 466:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 467:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 468:Drivers/CMSIS/Include/core_cm0plus.h **** 
 469:Drivers/CMSIS/Include/core_cm0plus.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 31


 470:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Timer (SysTick).
 471:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 472:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 473:Drivers/CMSIS/Include/core_cm0plus.h **** {
 474:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 475:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 476:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 477:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 478:Drivers/CMSIS/Include/core_cm0plus.h **** } SysTick_Type;
 479:Drivers/CMSIS/Include/core_cm0plus.h **** 
 480:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Control / Status Register Definitions */
 481:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0plus.h **** 
 484:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0plus.h **** 
 487:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 488:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 489:Drivers/CMSIS/Include/core_cm0plus.h **** 
 490:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 491:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 492:Drivers/CMSIS/Include/core_cm0plus.h **** 
 493:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Reload Register Definitions */
 494:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 495:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 496:Drivers/CMSIS/Include/core_cm0plus.h **** 
 497:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Current Register Definitions */
 498:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 499:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 500:Drivers/CMSIS/Include/core_cm0plus.h **** 
 501:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Calibration Register Definitions */
 502:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 503:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 504:Drivers/CMSIS/Include/core_cm0plus.h **** 
 505:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 506:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 507:Drivers/CMSIS/Include/core_cm0plus.h **** 
 508:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 509:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 510:Drivers/CMSIS/Include/core_cm0plus.h **** 
 511:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SysTick */
 512:Drivers/CMSIS/Include/core_cm0plus.h **** 
 513:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 514:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 515:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 516:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 517:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 518:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 519:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 520:Drivers/CMSIS/Include/core_cm0plus.h **** 
 521:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 522:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 523:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 524:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 525:Drivers/CMSIS/Include/core_cm0plus.h **** {
 526:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 32


 527:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 528:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
 529:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 530:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 531:Drivers/CMSIS/Include/core_cm0plus.h **** } MPU_Type;
 532:Drivers/CMSIS/Include/core_cm0plus.h **** 
 533:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_RALIASES                  1U
 534:Drivers/CMSIS/Include/core_cm0plus.h **** 
 535:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Type Register Definitions */
 536:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 537:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 538:Drivers/CMSIS/Include/core_cm0plus.h **** 
 539:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 540:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 541:Drivers/CMSIS/Include/core_cm0plus.h **** 
 542:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 543:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 544:Drivers/CMSIS/Include/core_cm0plus.h **** 
 545:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Control Register Definitions */
 546:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
 547:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 548:Drivers/CMSIS/Include/core_cm0plus.h **** 
 549:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 550:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 551:Drivers/CMSIS/Include/core_cm0plus.h **** 
 552:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 553:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 554:Drivers/CMSIS/Include/core_cm0plus.h **** 
 555:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Number Register Definitions */
 556:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 557:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 558:Drivers/CMSIS/Include/core_cm0plus.h **** 
 559:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Base Address Register Definitions */
 560:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Pos                   8U                                            /*!< MPU 
 561:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Msk                  (0xFFFFFFUL << MPU_RBAR_ADDR_Pos)              /*!< MPU 
 562:Drivers/CMSIS/Include/core_cm0plus.h **** 
 563:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
 564:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 565:Drivers/CMSIS/Include/core_cm0plus.h **** 
 566:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
 567:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
 568:Drivers/CMSIS/Include/core_cm0plus.h **** 
 569:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Attribute and Size Register Definitions */
 570:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
 571:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 572:Drivers/CMSIS/Include/core_cm0plus.h **** 
 573:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
 574:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 575:Drivers/CMSIS/Include/core_cm0plus.h **** 
 576:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
 577:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
 578:Drivers/CMSIS/Include/core_cm0plus.h **** 
 579:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
 580:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
 581:Drivers/CMSIS/Include/core_cm0plus.h **** 
 582:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
 583:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 33


 584:Drivers/CMSIS/Include/core_cm0plus.h **** 
 585:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
 586:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 587:Drivers/CMSIS/Include/core_cm0plus.h **** 
 588:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
 589:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 590:Drivers/CMSIS/Include/core_cm0plus.h **** 
 591:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
 592:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 593:Drivers/CMSIS/Include/core_cm0plus.h **** 
 594:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
 595:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 596:Drivers/CMSIS/Include/core_cm0plus.h **** 
 597:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
 598:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
 599:Drivers/CMSIS/Include/core_cm0plus.h **** 
 600:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_MPU */
 601:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 602:Drivers/CMSIS/Include/core_cm0plus.h **** 
 603:Drivers/CMSIS/Include/core_cm0plus.h **** 
 604:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 605:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 606:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 607:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Cortex-M0+ Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ov
 608:Drivers/CMSIS/Include/core_cm0plus.h ****             Therefore they are not covered by the Cortex-M0+ header file.
 609:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 610:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 611:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CoreDebug */
 612:Drivers/CMSIS/Include/core_cm0plus.h **** 
 613:Drivers/CMSIS/Include/core_cm0plus.h **** 
 614:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 615:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 616:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 617:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 618:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 619:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 620:Drivers/CMSIS/Include/core_cm0plus.h **** 
 621:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 622:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 623:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 624:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 625:Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted value.
 626:Drivers/CMSIS/Include/core_cm0plus.h **** */
 627:Drivers/CMSIS/Include/core_cm0plus.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 628:Drivers/CMSIS/Include/core_cm0plus.h **** 
 629:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 630:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 631:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 632:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 633:Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted bit field value.
 634:Drivers/CMSIS/Include/core_cm0plus.h **** */
 635:Drivers/CMSIS/Include/core_cm0plus.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 636:Drivers/CMSIS/Include/core_cm0plus.h **** 
 637:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_core_bitfield */
 638:Drivers/CMSIS/Include/core_cm0plus.h **** 
 639:Drivers/CMSIS/Include/core_cm0plus.h **** 
 640:Drivers/CMSIS/Include/core_cm0plus.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 34


 641:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 642:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_base     Core Definitions
 643:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Definitions for base addresses, unions, and structures.
 644:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 645:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 646:Drivers/CMSIS/Include/core_cm0plus.h **** 
 647:Drivers/CMSIS/Include/core_cm0plus.h **** /* Memory mapping of Core Hardware */
 648:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 649:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 650:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 651:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 652:Drivers/CMSIS/Include/core_cm0plus.h **** 
 653:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 654:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 655:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 656:Drivers/CMSIS/Include/core_cm0plus.h **** 
 657:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 658:Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
 659:Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
 660:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 661:Drivers/CMSIS/Include/core_cm0plus.h **** 
 662:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} */
 663:Drivers/CMSIS/Include/core_cm0plus.h **** 
 664:Drivers/CMSIS/Include/core_cm0plus.h **** 
 665:Drivers/CMSIS/Include/core_cm0plus.h **** 
 666:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 667:Drivers/CMSIS/Include/core_cm0plus.h ****  *                Hardware Abstraction Layer
 668:Drivers/CMSIS/Include/core_cm0plus.h ****   Core Function Interface contains:
 669:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Functions
 670:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Functions
 671:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register Access Functions
 672:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 673:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 674:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 675:Drivers/CMSIS/Include/core_cm0plus.h **** */
 676:Drivers/CMSIS/Include/core_cm0plus.h **** 
 677:Drivers/CMSIS/Include/core_cm0plus.h **** 
 678:Drivers/CMSIS/Include/core_cm0plus.h **** 
 679:Drivers/CMSIS/Include/core_cm0plus.h **** /* ##########################   NVIC functions  #################################### */
 680:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 681:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 682:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 683:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 684:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 685:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 686:Drivers/CMSIS/Include/core_cm0plus.h **** 
 687:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_NVIC_VIRTUAL
 688:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 689:Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 690:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 691:Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 692:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 693:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 694:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 695:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 696:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 697:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 35


 698:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 699:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 700:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 701:Drivers/CMSIS/Include/core_cm0plus.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0+ */
 702:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 703:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 704:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 705:Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 706:Drivers/CMSIS/Include/core_cm0plus.h **** 
 707:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 708:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 709:Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 710:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 711:Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 712:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 713:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetVector              __NVIC_SetVector
 714:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetVector              __NVIC_GetVector
 715:Drivers/CMSIS/Include/core_cm0plus.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 716:Drivers/CMSIS/Include/core_cm0plus.h **** 
 717:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_USER_IRQ_OFFSET          16
 718:Drivers/CMSIS/Include/core_cm0plus.h **** 
 719:Drivers/CMSIS/Include/core_cm0plus.h **** 
 720:Drivers/CMSIS/Include/core_cm0plus.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 721:Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 722:Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 723:Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 724:Drivers/CMSIS/Include/core_cm0plus.h **** 
 725:Drivers/CMSIS/Include/core_cm0plus.h **** 
 726:Drivers/CMSIS/Include/core_cm0plus.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 727:Drivers/CMSIS/Include/core_cm0plus.h **** /* The following MACROS handle generation of the register offset and byte masks */
 728:Drivers/CMSIS/Include/core_cm0plus.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 729:Drivers/CMSIS/Include/core_cm0plus.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 730:Drivers/CMSIS/Include/core_cm0plus.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 731:Drivers/CMSIS/Include/core_cm0plus.h **** 
 732:Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 733:Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 734:Drivers/CMSIS/Include/core_cm0plus.h **** 
 735:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 736:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Enable Interrupt
 737:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 738:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 739:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 740:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 741:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 742:Drivers/CMSIS/Include/core_cm0plus.h **** {
 743:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 744:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 745:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 746:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 747:Drivers/CMSIS/Include/core_cm0plus.h **** }
 748:Drivers/CMSIS/Include/core_cm0plus.h **** 
 749:Drivers/CMSIS/Include/core_cm0plus.h **** 
 750:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 751:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Interrupt Enable status
 752:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 753:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 754:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt is not enabled.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 36


 755:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt is enabled.
 756:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 757:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 758:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 759:Drivers/CMSIS/Include/core_cm0plus.h **** {
 760:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 761:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 762:Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 763:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 764:Drivers/CMSIS/Include/core_cm0plus.h ****   else
 765:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 766:Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 767:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 768:Drivers/CMSIS/Include/core_cm0plus.h **** }
 769:Drivers/CMSIS/Include/core_cm0plus.h **** 
 770:Drivers/CMSIS/Include/core_cm0plus.h **** 
 771:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 772:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Disable Interrupt
 773:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 774:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 775:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 776:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 777:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 778:Drivers/CMSIS/Include/core_cm0plus.h **** {
 779:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 780:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 781:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 782:Drivers/CMSIS/Include/core_cm0plus.h ****     __DSB();
 783:Drivers/CMSIS/Include/core_cm0plus.h ****     __ISB();
 784:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 785:Drivers/CMSIS/Include/core_cm0plus.h **** }
 786:Drivers/CMSIS/Include/core_cm0plus.h **** 
 787:Drivers/CMSIS/Include/core_cm0plus.h **** 
 788:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 789:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Pending Interrupt
 790:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 791:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 792:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt status is not pending.
 793:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt status is pending.
 794:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 795:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 796:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 797:Drivers/CMSIS/Include/core_cm0plus.h **** {
 798:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 799:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 800:Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 801:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 802:Drivers/CMSIS/Include/core_cm0plus.h ****   else
 803:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 804:Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 805:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 806:Drivers/CMSIS/Include/core_cm0plus.h **** }
 807:Drivers/CMSIS/Include/core_cm0plus.h **** 
 808:Drivers/CMSIS/Include/core_cm0plus.h **** 
 809:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 810:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Pending Interrupt
 811:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 37


 812:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 813:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 814:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 815:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 816:Drivers/CMSIS/Include/core_cm0plus.h **** {
 817:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 818:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 819:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 820:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 821:Drivers/CMSIS/Include/core_cm0plus.h **** }
 822:Drivers/CMSIS/Include/core_cm0plus.h **** 
 823:Drivers/CMSIS/Include/core_cm0plus.h **** 
 824:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 825:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Clear Pending Interrupt
 826:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 827:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 828:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 829:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 830:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 831:Drivers/CMSIS/Include/core_cm0plus.h **** {
 832:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 833:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 834:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 835:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 836:Drivers/CMSIS/Include/core_cm0plus.h **** }
 837:Drivers/CMSIS/Include/core_cm0plus.h **** 
 838:Drivers/CMSIS/Include/core_cm0plus.h **** 
 839:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 840:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Interrupt Priority
 841:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 842:Drivers/CMSIS/Include/core_cm0plus.h ****            The interrupt number can be positive to specify a device specific interrupt,
 843:Drivers/CMSIS/Include/core_cm0plus.h ****            or negative to specify a processor exception.
 844:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 845:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]  priority  Priority to set.
 846:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    The priority cannot be set for every processor exception.
 847:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 848:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 190              		.loc 4 848 22 view .LVU42
 191              	.LBB175:
 849:Drivers/CMSIS/Include/core_cm0plus.h **** {
 850:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 192              		.loc 4 850 3 view .LVU43
 851:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 852:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 193              		.loc 4 852 5 view .LVU44
 194              		.loc 4 852 52 is_stmt 0 view .LVU45
 195 0018 134B     		ldr	r3, .L5+4
 196 001a C321     		movs	r1, #195
 197 001c 8900     		lsls	r1, r1, #2
 198 001e 5A58     		ldr	r2, [r3, r1]
 199              		.loc 4 852 33 view .LVU46
 200 0020 1248     		ldr	r0, .L5+8
 201 0022 0240     		ands	r2, r0
 202              		.loc 4 852 30 view .LVU47
 203 0024 5A50     		str	r2, [r3, r1]
 204              	.LVL9:
 205              		.loc 4 852 30 view .LVU48
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 38


 206              	.LBE175:
 207              	.LBE174:
 314:Core/Src/main.c ****   NVIC_EnableIRQ(LPTIM1_IRQn);
 208              		.loc 1 314 3 is_stmt 1 view .LVU49
 209              	.LBB176:
 210              	.LBI176:
 741:Drivers/CMSIS/Include/core_cm0plus.h **** {
 211              		.loc 4 741 22 view .LVU50
 212              	.LBB177:
 743:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 213              		.loc 4 743 3 view .LVU51
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 214              		.loc 4 745 5 view .LVU52
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 215              		.loc 4 745 20 is_stmt 0 view .LVU53
 216 0026 8022     		movs	r2, #128
 217 0028 9201     		lsls	r2, r2, #6
 218 002a 1A60     		str	r2, [r3]
 219              	.LVL10:
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 220              		.loc 4 745 20 view .LVU54
 221              	.LBE177:
 222              	.LBE176:
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE BEGIN LPTIM1_Init 1 */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE END LPTIM1_Init 1 */
 319:Core/Src/main.c ****   LL_LPTIM_SetClockSource(LPTIM1, LL_LPTIM_CLK_SOURCE_INTERNAL);
 223              		.loc 1 319 3 is_stmt 1 view .LVU55
 224              	.LBB178:
 225              	.LBI178:
 226              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @file    stm32l0xx_ll_lptim.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief   Header file of LPTIM LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * in the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #ifndef STM32L0xx_LL_LPTIM_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define STM32L0xx_LL_LPTIM_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #ifdef __cplusplus
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** extern "C" {
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #endif
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 39


  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #include "stm32l0xx.h"
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #if defined (LPTIM1)
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL LPTIM
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Private macros ------------------------------------------------------------*/
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #if defined(USE_FULL_LL_DRIVER)
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_Private_Macros LPTIM Private Macros
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #endif /*USE_FULL_LL_DRIVER*/
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Exported types ------------------------------------------------------------*/
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #if defined(USE_FULL_LL_DRIVER)
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_ES_INIT LPTIM Exported Init structure
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  LPTIM Init structure definition
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** typedef struct
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   uint32_t ClockSource;    /*!< Specifies the source of the clock used by the LPTIM instance.
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 This parameter can be a value of @ref LPTIM_LL_EC_CLK_SOURCE.
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 This feature can be modified afterwards using unitary
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 function @ref LL_LPTIM_SetClockSource().*/
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   uint32_t Prescaler;      /*!< Specifies the prescaler division ratio.
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 This parameter can be a value of @ref LPTIM_LL_EC_PRESCALER.
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 This feature can be modified afterwards using using unitary
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 function @ref LL_LPTIM_SetPrescaler().*/
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   uint32_t Waveform;       /*!< Specifies the waveform shape.
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 This parameter can be a value of @ref LPTIM_LL_EC_OUTPUT_WAVEFORM.
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 This feature can be modified afterwards using unitary
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 function @ref LL_LPTIM_ConfigOutput().*/
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 40


  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   uint32_t Polarity;       /*!< Specifies waveform polarity.
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 This parameter can be a value of @ref LPTIM_LL_EC_OUTPUT_POLARITY.
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 This feature can be modified afterwards using unitary
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****                                 function @ref LL_LPTIM_ConfigOutput().*/
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** } LL_LPTIM_InitTypeDef;
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #endif /* USE_FULL_LL_DRIVER */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Exported constants --------------------------------------------------------*/
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_Exported_Constants LPTIM Exported Constants
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_GET_FLAG Get Flags Defines
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief    Flags defines which can be used with LL_LPTIM_ReadReg function
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ISR_CMPM                     LPTIM_ISR_CMPM     /*!< Compare match */
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ISR_CMPOK                    LPTIM_ISR_CMPOK    /*!< Compare register update OK */
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ISR_ARRM                     LPTIM_ISR_ARRM     /*!< Autoreload match */
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ISR_EXTTRIG                  LPTIM_ISR_EXTTRIG  /*!< External trigger edge event *
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ISR_ARROK                    LPTIM_ISR_ARROK    /*!< Autoreload register update OK
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ISR_UP                       LPTIM_ISR_UP       /*!< Counter direction change down
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ISR_DOWN                     LPTIM_ISR_DOWN     /*!< Counter direction change up t
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_IT IT Defines
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief    IT defines which can be used with LL_LPTIM_ReadReg and  LL_LPTIM_WriteReg functions
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_IER_CMPMIE                   LPTIM_IER_CMPMIE     /*!< Compare match */
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_IER_CMPOKIE                  LPTIM_IER_CMPOKIE    /*!< Compare register update OK 
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_IER_ARRMIE                   LPTIM_IER_ARRMIE     /*!< Autoreload match */
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_IER_EXTTRIGIE                LPTIM_IER_EXTTRIGIE  /*!< External trigger edge event
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_IER_ARROKIE                  LPTIM_IER_ARROKIE    /*!< Autoreload register update 
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_IER_UPIE                     LPTIM_IER_UPIE       /*!< Counter direction change do
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_IER_DOWNIE                   LPTIM_IER_DOWNIE     /*!< Counter direction change up
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_OPERATING_MODE Operating Mode
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_OPERATING_MODE_CONTINUOUS    LPTIM_CR_CNTSTRT /*!<LP Timer starts in continuous mo
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_OPERATING_MODE_ONESHOT       LPTIM_CR_SNGSTRT /*!<LP Tilmer starts in single mode*
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 41


 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_UPDATE_MODE Update Mode
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_UPDATE_MODE_IMMEDIATE        0x00000000U        /*!<Preload is disabled: registers
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_UPDATE_MODE_ENDOFPERIOD      LPTIM_CFGR_PRELOAD /*!<preload is enabled: registers 
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_COUNTER_MODE Counter Mode
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_COUNTER_MODE_INTERNAL        0x00000000U          /*!<The counter is incremented f
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_COUNTER_MODE_EXTERNAL        LPTIM_CFGR_COUNTMODE /*!<The counter is incremented f
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_OUTPUT_WAVEFORM Output Waveform Type
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_OUTPUT_WAVEFORM_PWM          0x00000000U     /*!<LPTIM  generates either a PWM wav
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_OUTPUT_WAVEFORM_SETONCE      LPTIM_CFGR_WAVE /*!<LPTIM  generates a Set Once wavef
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_OUTPUT_POLARITY Output Polarity
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_OUTPUT_POLARITY_REGULAR      0x00000000U             /*!<The LPTIM output reflects
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_OUTPUT_POLARITY_INVERSE      LPTIM_CFGR_WAVPOL       /*!<The LPTIM output reflects
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_PRESCALER Prescaler Value
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_PRESCALER_DIV1               0x00000000U                               /*!<Prescal
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_PRESCALER_DIV2               LPTIM_CFGR_PRESC_0                        /*!<Prescal
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_PRESCALER_DIV4               LPTIM_CFGR_PRESC_1                        /*!<Prescal
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_PRESCALER_DIV8               (LPTIM_CFGR_PRESC_1 | LPTIM_CFGR_PRESC_0) /*!<Prescal
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_PRESCALER_DIV16              LPTIM_CFGR_PRESC_2                        /*!<Prescal
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_PRESCALER_DIV32              (LPTIM_CFGR_PRESC_2 | LPTIM_CFGR_PRESC_0) /*!<Prescal
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_PRESCALER_DIV64              (LPTIM_CFGR_PRESC_2 | LPTIM_CFGR_PRESC_1) /*!<Prescal
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_PRESCALER_DIV128             LPTIM_CFGR_PRESC                          /*!<Prescal
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_TRIG_SOURCE Trigger Source
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_SOURCE_GPIO             0x00000000U                                          
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_SOURCE_RTCALARMA        LPTIM_CFGR_TRIGSEL_0                                 
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_SOURCE_RTCALARMB        LPTIM_CFGR_TRIGSEL_1                                 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 42


 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #if defined(RTC_TAMPER1_SUPPORT)
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_SOURCE_RTCTAMP1         (LPTIM_CFGR_TRIGSEL_1 | LPTIM_CFGR_TRIGSEL_0)        
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #endif /* RTC_TAMPER1_SUPPORT */
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_SOURCE_RTCTAMP2         LPTIM_CFGR_TRIGSEL_2                                 
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #if defined(RTC_TAMPER3_SUPPORT)
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_SOURCE_RTCTAMP3         (LPTIM_CFGR_TRIGSEL_2 | LPTIM_CFGR_TRIGSEL_0)        
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #endif /* RTC_TAMPER3_SUPPORT */
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_SOURCE_COMP1            (LPTIM_CFGR_TRIGSEL_2 | LPTIM_CFGR_TRIGSEL_1)        
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_SOURCE_COMP2            LPTIM_CFGR_TRIGSEL                                   
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_TRIG_FILTER Trigger Filter
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_FILTER_NONE             0x00000000U         /*!<Any trigger active level chan
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_FILTER_2                LPTIM_CFGR_TRGFLT_0 /*!<Trigger active level change m
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_FILTER_4                LPTIM_CFGR_TRGFLT_1 /*!<Trigger active level change m
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_FILTER_8                LPTIM_CFGR_TRGFLT   /*!<Trigger active level change m
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_TRIG_POLARITY Trigger Polarity
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_POLARITY_RISING         LPTIM_CFGR_TRIGEN_0 /*!<LPTIM counter starts when a r
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_POLARITY_FALLING        LPTIM_CFGR_TRIGEN_1 /*!<LPTIM counter starts when a f
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_TRIG_POLARITY_RISING_FALLING LPTIM_CFGR_TRIGEN   /*!<LPTIM counter starts when a r
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_CLK_SOURCE Clock Source
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_CLK_SOURCE_INTERNAL          0x00000000U      /*!<LPTIM is clocked by internal clo
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_CLK_SOURCE_EXTERNAL          LPTIM_CFGR_CKSEL /*!<LPTIM is clocked by an external 
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_CLK_FILTER Clock Filter
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_CLK_FILTER_NONE              0x00000000U        /*!<Any external clock signal leve
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_CLK_FILTER_2                 LPTIM_CFGR_CKFLT_0 /*!<External clock signal level ch
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_CLK_FILTER_4                 LPTIM_CFGR_CKFLT_1 /*!<External clock signal level ch
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_CLK_FILTER_8                 LPTIM_CFGR_CKFLT   /*!<External clock signal level ch
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_CLK_POLARITY Clock Polarity
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 43


 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_CLK_POLARITY_RISING          0x00000000U        /*!< The rising edge is the active
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_CLK_POLARITY_FALLING         LPTIM_CFGR_CKPOL_0 /*!< The falling edge is the activ
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_CLK_POLARITY_RISING_FALLING  LPTIM_CFGR_CKPOL_1 /*!< Both edges are active edges*/
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EC_ENCODER_MODE Encoder Mode
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ENCODER_MODE_RISING          0x00000000U        /*!< The rising edge is the active
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ENCODER_MODE_FALLING         LPTIM_CFGR_CKPOL_0 /*!< The falling edge is the activ
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ENCODER_MODE_RISING_FALLING  LPTIM_CFGR_CKPOL_1 /*!< Both edges are active edges*/
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Exported macro ------------------------------------------------------------*/
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_Exported_Macros LPTIM Exported Macros
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EM_WRITE_READ Common Write and read registers Macros
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Write a value in LPTIM register
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  __INSTANCE__ LPTIM Instance
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  __REG__ Register to be written
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  __VALUE__ Value to be written in the register
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__V
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Read a value in LPTIM register
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  __INSTANCE__ LPTIM Instance
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  __REG__ Register to be read
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Register value
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /* Exported functions --------------------------------------------------------*/
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_Exported_Functions LPTIM Exported Functions
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 44


 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** Legacy definitions for compatibility purpose
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** @cond 0
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ClearFLAG_CMPM  LL_LPTIM_ClearFlag_CMPM
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ClearFLAG_CC1   LL_LPTIM_ClearFlag_CC1
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ClearFLAG_CC2   LL_LPTIM_ClearFlag_CC2
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ClearFLAG_CC1O  LL_LPTIM_ClearFlag_CC1O
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ClearFLAG_CC2O  LL_LPTIM_ClearFlag_CC2O
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #define LL_LPTIM_ClearFLAG_ARRM  LL_LPTIM_ClearFlag_ARRM
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** @endcond
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #if defined(USE_FULL_LL_DRIVER)
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EF_Init Initialisation and deinitialisation functions
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** ErrorStatus LL_LPTIM_DeInit(const LPTIM_TypeDef *LPTIMx);
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** void LL_LPTIM_StructInit(LL_LPTIM_InitTypeDef *LPTIM_InitStruct);
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** ErrorStatus LL_LPTIM_Init(LPTIM_TypeDef *LPTIMx, const LL_LPTIM_InitTypeDef *LPTIM_InitStruct);
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** void LL_LPTIM_Disable(LPTIM_TypeDef *LPTIMx);
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** #endif /* USE_FULL_LL_DRIVER */
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EF_LPTIM_Configuration LPTIM Configuration
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Enable the LPTIM instance
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note After setting the ENABLE bit, a delay of two counter clock is needed
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       before the LPTIM instance is actually enabled.
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CR           ENABLE        LL_LPTIM_Enable
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_Enable(LPTIM_TypeDef *LPTIMx)
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   SET_BIT(LPTIMx->CR, LPTIM_CR_ENABLE);
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Indicates whether the LPTIM instance is enabled.
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CR           ENABLE        LL_LPTIM_IsEnabled
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval State of bit (1 or 0).
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_IsEnabled(const LPTIM_TypeDef *LPTIMx)
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (((READ_BIT(LPTIMx->CR, LPTIM_CR_ENABLE) == LPTIM_CR_ENABLE) ? 1UL : 0UL));
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 45


 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Starts the LPTIM counter in the desired mode.
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note LPTIM instance must be enabled before starting the counter.
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note It is possible to change on the fly from One Shot mode to
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       Continuous mode.
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CR           CNTSTRT       LL_LPTIM_StartCounter\n
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         CR           SNGSTRT       LL_LPTIM_StartCounter
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  OperatingMode This parameter can be one of the following values:
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OPERATING_MODE_CONTINUOUS
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OPERATING_MODE_ONESHOT
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_StartCounter(LPTIM_TypeDef *LPTIMx, uint32_t OperatingMode)
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CR, LPTIM_CR_CNTSTRT | LPTIM_CR_SNGSTRT, OperatingMode);
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Set the LPTIM registers update mode (enable/disable register preload)
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note This function must be called when the LPTIM instance is disabled.
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         PRELOAD       LL_LPTIM_SetUpdateMode
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  UpdateMode This parameter can be one of the following values:
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_UPDATE_MODE_IMMEDIATE
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_UPDATE_MODE_ENDOFPERIOD
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_SetUpdateMode(LPTIM_TypeDef *LPTIMx, uint32_t UpdateMode)
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CFGR, LPTIM_CFGR_PRELOAD, UpdateMode);
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get the LPTIM registers update mode
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         PRELOAD       LL_LPTIM_GetUpdateMode
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Returned value can be one of the following values:
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_UPDATE_MODE_IMMEDIATE
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_UPDATE_MODE_ENDOFPERIOD
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetUpdateMode(const LPTIM_TypeDef *LPTIMx)
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CFGR, LPTIM_CFGR_PRELOAD));
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Set the auto reload value
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note The LPTIMx_ARR register content must only be modified when the LPTIM is enabled
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note After a write to the LPTIMx_ARR register a new write operation to the
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       same register can only be performed when the previous write operation
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       is completed. Any successive write before  the ARROK flag is set, will
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       lead to unpredictable results.
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note autoreload value be strictly greater than the compare value.
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll ARR          ARR           LL_LPTIM_SetAutoReload
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  AutoReload Value between Min_Data=0x0001 and Max_Data=0xFFFF
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 46


 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_SetAutoReload(LPTIM_TypeDef *LPTIMx, uint32_t AutoReload)
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->ARR, LPTIM_ARR_ARR, AutoReload);
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get actual auto reload value
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll ARR          ARR           LL_LPTIM_GetAutoReload
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval AutoReload Value between Min_Data=0x0001 and Max_Data=0xFFFF
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetAutoReload(const LPTIM_TypeDef *LPTIMx)
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->ARR, LPTIM_ARR_ARR));
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Set the compare value
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note After a write to the LPTIMx_CMP register a new write operation to the
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       same register can only be performed when the previous write operation
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       is completed. Any successive write before the CMPOK flag is set, will
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       lead to unpredictable results.
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CMP          CMP           LL_LPTIM_SetCompare
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  CompareValue Value between Min_Data=0x00 and Max_Data=0xFFFF
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_SetCompare(LPTIM_TypeDef *LPTIMx, uint32_t CompareValue)
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CMP, LPTIM_CMP_CMP, CompareValue);
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get actual compare value
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CMP          CMP           LL_LPTIM_GetCompare
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval CompareValue Value between Min_Data=0x00 and Max_Data=0xFFFF
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetCompare(const LPTIM_TypeDef *LPTIMx)
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CMP, LPTIM_CMP_CMP));
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get actual counter value
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note When the LPTIM instance is running with an asynchronous clock, reading
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       the LPTIMx_CNT register may return unreliable values. So in this case
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       it is necessary to perform two consecutive read accesses and verify
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       that the two returned values are identical.
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CNT          CNT           LL_LPTIM_GetCounter
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Counter value
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetCounter(const LPTIM_TypeDef *LPTIMx)
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 47


 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CNT, LPTIM_CNT_CNT));
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Set the counter mode (selection of the LPTIM counter clock source).
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note The counter mode can be set only when the LPTIM instance is disabled.
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         COUNTMODE     LL_LPTIM_SetCounterMode
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  CounterMode This parameter can be one of the following values:
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_COUNTER_MODE_INTERNAL
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_COUNTER_MODE_EXTERNAL
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_SetCounterMode(LPTIM_TypeDef *LPTIMx, uint32_t CounterMode)
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CFGR, LPTIM_CFGR_COUNTMODE, CounterMode);
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get the counter mode
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         COUNTMODE     LL_LPTIM_GetCounterMode
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Returned value can be one of the following values:
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_COUNTER_MODE_INTERNAL
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_COUNTER_MODE_EXTERNAL
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetCounterMode(const LPTIM_TypeDef *LPTIMx)
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CFGR, LPTIM_CFGR_COUNTMODE));
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Configure the LPTIM instance output (LPTIMx_OUT)
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note This function must be called when the LPTIM instance is disabled.
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note Regarding the LPTIM output polarity the change takes effect
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       immediately, so the output default value will change immediately after
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       the polarity is re-configured, even before the timer is enabled.
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         WAVE          LL_LPTIM_ConfigOutput\n
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         CFGR         WAVPOL        LL_LPTIM_ConfigOutput
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  Waveform This parameter can be one of the following values:
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_WAVEFORM_PWM
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_WAVEFORM_SETONCE
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  Polarity This parameter can be one of the following values:
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_POLARITY_REGULAR
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_POLARITY_INVERSE
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_ConfigOutput(LPTIM_TypeDef *LPTIMx, uint32_t Waveform, uint32_t Polar
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CFGR, LPTIM_CFGR_WAVE | LPTIM_CFGR_WAVPOL, Waveform | Polarity);
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Set  waveform shape
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         WAVE          LL_LPTIM_SetWaveform
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 48


 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  Waveform This parameter can be one of the following values:
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_WAVEFORM_PWM
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_WAVEFORM_SETONCE
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_SetWaveform(LPTIM_TypeDef *LPTIMx, uint32_t Waveform)
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CFGR, LPTIM_CFGR_WAVE, Waveform);
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get actual waveform shape
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         WAVE          LL_LPTIM_GetWaveform
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Returned value can be one of the following values:
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_WAVEFORM_PWM
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_WAVEFORM_SETONCE
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetWaveform(const LPTIM_TypeDef *LPTIMx)
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CFGR, LPTIM_CFGR_WAVE));
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Set  output polarity
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         WAVPOL        LL_LPTIM_SetPolarity
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  Polarity This parameter can be one of the following values:
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_POLARITY_REGULAR
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_POLARITY_INVERSE
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_SetPolarity(LPTIM_TypeDef *LPTIMx, uint32_t Polarity)
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CFGR, LPTIM_CFGR_WAVPOL, Polarity);
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get actual output polarity
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         WAVPOL        LL_LPTIM_GetPolarity
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Returned value can be one of the following values:
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_POLARITY_REGULAR
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_OUTPUT_POLARITY_INVERSE
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetPolarity(const LPTIM_TypeDef *LPTIMx)
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CFGR, LPTIM_CFGR_WAVPOL));
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Set actual prescaler division ratio.
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note This function must be called when the LPTIM instance is disabled.
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note When the LPTIM is configured to be clocked by an internal clock source
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       and the LPTIM counter is configured to be updated by active edges
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       detected on the LPTIM external Input1, the internal clock provided to
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       the LPTIM must be not be prescaled.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 49


 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         PRESC         LL_LPTIM_SetPrescaler
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  Prescaler This parameter can be one of the following values:
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV1
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV2
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV4
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV8
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV16
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV32
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV64
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV128
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_SetPrescaler(LPTIM_TypeDef *LPTIMx, uint32_t Prescaler)
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CFGR, LPTIM_CFGR_PRESC, Prescaler);
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get actual prescaler division ratio.
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         PRESC         LL_LPTIM_GetPrescaler
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Returned value can be one of the following values:
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV1
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV2
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV4
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV8
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV16
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV32
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV64
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_PRESCALER_DIV128
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetPrescaler(const LPTIM_TypeDef *LPTIMx)
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CFGR, LPTIM_CFGR_PRESC));
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EF_Trigger_Configuration Trigger Configuration
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Enable the timeout function
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note This function must be called when the LPTIM instance is disabled.
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note The first trigger event will start the timer, any successive trigger
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       event will reset the counter and the timer will restart.
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note The timeout value corresponds to the compare value; if no trigger
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       occurs within the expected time frame, the MCU is waked-up by the
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       compare match event.
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         TIMOUT        LL_LPTIM_EnableTimeout
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 50


 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_EnableTimeout(LPTIM_TypeDef *LPTIMx)
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   SET_BIT(LPTIMx->CFGR, LPTIM_CFGR_TIMOUT);
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Disable the timeout function
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note This function must be called when the LPTIM instance is disabled.
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note A trigger event arriving when the timer is already started will be
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       ignored.
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         TIMOUT        LL_LPTIM_DisableTimeout
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_DisableTimeout(LPTIM_TypeDef *LPTIMx)
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   CLEAR_BIT(LPTIMx->CFGR, LPTIM_CFGR_TIMOUT);
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Indicate whether the timeout function is enabled.
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         TIMOUT        LL_LPTIM_IsEnabledTimeout
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval State of bit (1 or 0).
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_IsEnabledTimeout(const LPTIM_TypeDef *LPTIMx)
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (((READ_BIT(LPTIMx->CFGR, LPTIM_CFGR_TIMOUT) == LPTIM_CFGR_TIMOUT) ? 1UL : 0UL));
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Start the LPTIM counter
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note This function must be called when the LPTIM instance is disabled.
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         TRIGEN        LL_LPTIM_TrigSw
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_TrigSw(LPTIM_TypeDef *LPTIMx)
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   CLEAR_BIT(LPTIMx->CFGR, LPTIM_CFGR_TRIGEN);
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Configure the external trigger used as a trigger event for the LPTIM.
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note This function must be called when the LPTIM instance is disabled.
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note An internal clock source must be present when a digital filter is
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *       required for the trigger.
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         TRIGSEL       LL_LPTIM_ConfigTrigger\n
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         CFGR         TRGFLT        LL_LPTIM_ConfigTrigger\n
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         CFGR         TRIGEN        LL_LPTIM_ConfigTrigger
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  Source This parameter can be one of the following values:
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_GPIO
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCALARMA
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCALARMB
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCTAMP1 (*)
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCTAMP2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 51


 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCTAMP3 (*)
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_COMP1
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_COMP2
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         (*)  Value not defined in all devices. \n
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  Filter This parameter can be one of the following values:
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_FILTER_NONE
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_FILTER_2
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_FILTER_4
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_FILTER_8
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  Polarity This parameter can be one of the following values:
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_POLARITY_RISING
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_POLARITY_FALLING
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_POLARITY_RISING_FALLING
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_ConfigTrigger(LPTIM_TypeDef *LPTIMx, uint32_t Source, uint32_t Filter
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CFGR, LPTIM_CFGR_TRIGSEL | LPTIM_CFGR_TRGFLT | LPTIM_CFGR_TRIGEN, Source | Fil
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get actual external trigger source.
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         TRIGSEL       LL_LPTIM_GetTriggerSource
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Returned value can be one of the following values:
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_GPIO
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCALARMA
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCALARMB
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCTAMP1 (*)
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCTAMP2
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_RTCTAMP3 (*)
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_COMP1
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_SOURCE_COMP2
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         (*)  Value not defined in all devices. \n
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetTriggerSource(const LPTIM_TypeDef *LPTIMx)
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CFGR, LPTIM_CFGR_TRIGSEL));
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get actual external trigger filter.
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         TRGFLT        LL_LPTIM_GetTriggerFilter
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Returned value can be one of the following values:
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_FILTER_NONE
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_FILTER_2
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_FILTER_4
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_FILTER_8
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetTriggerFilter(const LPTIM_TypeDef *LPTIMx)
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CFGR, LPTIM_CFGR_TRGFLT));
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 52


 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Get actual external trigger polarity.
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         TRIGEN        LL_LPTIM_GetTriggerPolarity
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval Returned value can be one of the following values:
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_POLARITY_RISING
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_POLARITY_FALLING
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_TRIG_POLARITY_RISING_FALLING
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE uint32_t LL_LPTIM_GetTriggerPolarity(const LPTIM_TypeDef *LPTIMx)
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   return (uint32_t)(READ_BIT(LPTIMx->CFGR, LPTIM_CFGR_TRIGEN));
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @}
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /** @defgroup LPTIM_LL_EF_Clock_Configuration Clock Configuration
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @{
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** 
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** /**
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @brief  Set the source of the clock used by the LPTIM instance.
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @note This function must be called when the LPTIM instance is disabled.
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @rmtoll CFGR         CKSEL         LL_LPTIM_SetClockSource
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  LPTIMx Low-Power Timer instance
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @param  ClockSource This parameter can be one of the following values:
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_CLK_SOURCE_INTERNAL
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   *         @arg @ref LL_LPTIM_CLK_SOURCE_EXTERNAL
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   * @retval None
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   */
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** __STATIC_INLINE void LL_LPTIM_SetClockSource(LPTIM_TypeDef *LPTIMx, uint32_t ClockSource)
 227              		.loc 5 801 22 view .LVU56
 228              	.LBB179:
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h ****   MODIFY_REG(LPTIMx->CFGR, LPTIM_CFGR_CKSEL, ClockSource);
 229              		.loc 5 803 3 view .LVU57
 230 002c 104B     		ldr	r3, .L5+12
 231 002e DA68     		ldr	r2, [r3, #12]
 232 0030 0121     		movs	r1, #1
 233 0032 8A43     		bics	r2, r1
 234 0034 DA60     		str	r2, [r3, #12]
 235              	.LVL11:
 236              		.loc 5 803 3 is_stmt 0 view .LVU58
 237              	.LBE179:
 238              	.LBE178:
 320:Core/Src/main.c ****   LL_LPTIM_SetPrescaler(LPTIM1, LL_LPTIM_PRESCALER_DIV1);
 239              		.loc 1 320 3 is_stmt 1 view .LVU59
 240              	.LBB180:
 241              	.LBI180:
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 242              		.loc 5 609 22 view .LVU60
 243              	.LBB181:
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 53


 244              		.loc 5 611 3 view .LVU61
 245 0036 DA68     		ldr	r2, [r3, #12]
 246 0038 0E49     		ldr	r1, .L5+16
 247 003a 0A40     		ands	r2, r1
 248 003c DA60     		str	r2, [r3, #12]
 249              	.LVL12:
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 250              		.loc 5 611 3 is_stmt 0 view .LVU62
 251              	.LBE181:
 252              	.LBE180:
 321:Core/Src/main.c ****   LL_LPTIM_SetPolarity(LPTIM1, LL_LPTIM_OUTPUT_POLARITY_REGULAR);
 253              		.loc 1 321 3 is_stmt 1 view .LVU63
 254              	.LBB182:
 255              	.LBI182:
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 256              		.loc 5 571 22 view .LVU64
 257              	.LBB183:
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 258              		.loc 5 573 3 view .LVU65
 259 003e DA68     		ldr	r2, [r3, #12]
 260 0040 0D49     		ldr	r1, .L5+20
 261 0042 0A40     		ands	r2, r1
 262 0044 DA60     		str	r2, [r3, #12]
 263              	.LVL13:
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 264              		.loc 5 573 3 is_stmt 0 view .LVU66
 265              	.LBE183:
 266              	.LBE182:
 322:Core/Src/main.c ****   LL_LPTIM_SetUpdateMode(LPTIM1, LL_LPTIM_UPDATE_MODE_IMMEDIATE);
 267              		.loc 1 322 3 is_stmt 1 view .LVU67
 268              	.LBB184:
 269              	.LBI184:
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 270              		.loc 5 396 22 view .LVU68
 271              	.LBB185:
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 272              		.loc 5 398 3 view .LVU69
 273 0046 DA68     		ldr	r2, [r3, #12]
 274 0048 0C49     		ldr	r1, .L5+24
 275 004a 0A40     		ands	r2, r1
 276 004c DA60     		str	r2, [r3, #12]
 277              	.LVL14:
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 278              		.loc 5 398 3 is_stmt 0 view .LVU70
 279              	.LBE185:
 280              	.LBE184:
 323:Core/Src/main.c ****   LL_LPTIM_SetCounterMode(LPTIM1, LL_LPTIM_COUNTER_MODE_INTERNAL);
 281              		.loc 1 323 3 is_stmt 1 view .LVU71
 282              	.LBB186:
 283              	.LBI186:
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 284              		.loc 5 495 22 view .LVU72
 285              	.LBB187:
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 286              		.loc 5 497 3 view .LVU73
 287 004e DA68     		ldr	r2, [r3, #12]
 288 0050 0B49     		ldr	r1, .L5+28
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 54


 289 0052 0A40     		ands	r2, r1
 290 0054 DA60     		str	r2, [r3, #12]
 291              	.LVL15:
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 292              		.loc 5 497 3 is_stmt 0 view .LVU74
 293              	.LBE187:
 294              	.LBE186:
 324:Core/Src/main.c ****   LL_LPTIM_TrigSw(LPTIM1);
 295              		.loc 1 324 3 is_stmt 1 view .LVU75
 296              	.LBB188:
 297              	.LBI188:
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** {
 298              		.loc 5 690 22 view .LVU76
 299              	.LBB189:
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 300              		.loc 5 692 3 view .LVU77
 301 0056 DA68     		ldr	r2, [r3, #12]
 302 0058 0A49     		ldr	r1, .L5+32
 303 005a 0A40     		ands	r2, r1
 304 005c DA60     		str	r2, [r3, #12]
 305              	.LVL16:
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lptim.h **** }
 306              		.loc 5 692 3 is_stmt 0 view .LVU78
 307              	.LBE189:
 308              	.LBE188:
 325:Core/Src/main.c ****   /* USER CODE BEGIN LPTIM1_Init 2 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE END LPTIM1_Init 2 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** }
 309              		.loc 1 329 1 view .LVU79
 310 005e 02B0     		add	sp, sp, #8
 311              		@ sp needed
 312 0060 7047     		bx	lr
 313              	.L6:
 314 0062 C046     		.align	2
 315              	.L5:
 316 0064 00100240 		.word	1073876992
 317 0068 00E100E0 		.word	-536813312
 318 006c FF00FFFF 		.word	-65281
 319 0070 007C0040 		.word	1073773568
 320 0074 FFF1FFFF 		.word	-3585
 321 0078 FFFFDFFF 		.word	-2097153
 322 007c FFFFBFFF 		.word	-4194305
 323 0080 FFFF7FFF 		.word	-8388609
 324 0084 FFFFF9FF 		.word	-393217
 325              		.cfi_endproc
 326              	.LFE937:
 328              		.section	.text.MX_GPIO_Init,"ax",%progbits
 329              		.align	1
 330              		.syntax unified
 331              		.code	16
 332              		.thumb_func
 334              	MX_GPIO_Init:
 335              	.LFB940:
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 55


 332:Core/Src/main.c ****   * @brief RTC Initialization Function
 333:Core/Src/main.c ****   * @param None
 334:Core/Src/main.c ****   * @retval None
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c **** static void MX_RTC_Init(void)
 337:Core/Src/main.c **** {
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   LL_RTC_InitTypeDef RTC_InitStruct = {0};
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* Peripheral clock enable */
 346:Core/Src/main.c ****   LL_RCC_EnableRTC();
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* RTC interrupt Init */
 349:Core/Src/main.c ****   NVIC_SetPriority(RTC_IRQn, 0);
 350:Core/Src/main.c ****   NVIC_EnableIRQ(RTC_IRQn);
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 357:Core/Src/main.c ****   */
 358:Core/Src/main.c ****   RTC_InitStruct.HourFormat = LL_RTC_HOURFORMAT_24HOUR;
 359:Core/Src/main.c ****   RTC_InitStruct.AsynchPrescaler = 127;
 360:Core/Src/main.c ****   RTC_InitStruct.SynchPrescaler = 255;
 361:Core/Src/main.c ****   LL_RTC_Init(RTC, &RTC_InitStruct);
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 364:Core/Src/main.c ****   */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /** Enable the WakeUp
 367:Core/Src/main.c ****   */
 368:Core/Src/main.c ****   LL_RTC_WAKEUP_SetClock(RTC, LL_RTC_WAKEUPCLOCK_CKSPRE);
 369:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** }
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** /**
 376:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 377:Core/Src/main.c ****   * @param None
 378:Core/Src/main.c ****   * @retval None
 379:Core/Src/main.c ****   */
 380:Core/Src/main.c **** static void MX_SPI1_Init(void)
 381:Core/Src/main.c **** {
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   LL_SPI_InitTypeDef SPI_InitStruct = {0};
 388:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 56


 389:Core/Src/main.c ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* Peripheral clock enable */
 392:Core/Src/main.c ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_SPI1);
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 395:Core/Src/main.c ****   /**SPI1 GPIO Configuration
 396:Core/Src/main.c ****   PA5   ------> SPI1_SCK
 397:Core/Src/main.c ****   PA7   ------> SPI1_MOSI
 398:Core/Src/main.c ****   */
 399:Core/Src/main.c ****   GPIO_InitStruct.Pin = EPD_CLK_Pin;
 400:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 401:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 402:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 403:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 404:Core/Src/main.c ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 405:Core/Src/main.c ****   LL_GPIO_Init(EPD_CLK_GPIO_Port, &GPIO_InitStruct);
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   GPIO_InitStruct.Pin = EPD_DIN_Pin;
 408:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 409:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 410:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 411:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 412:Core/Src/main.c ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 413:Core/Src/main.c ****   LL_GPIO_Init(EPD_DIN_GPIO_Port, &GPIO_InitStruct);
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 418:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 419:Core/Src/main.c ****   SPI_InitStruct.TransferDirection = LL_SPI_FULL_DUPLEX;
 420:Core/Src/main.c ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 421:Core/Src/main.c ****   SPI_InitStruct.DataWidth = LL_SPI_DATAWIDTH_8BIT;
 422:Core/Src/main.c ****   SPI_InitStruct.ClockPolarity = LL_SPI_POLARITY_LOW;
 423:Core/Src/main.c ****   SPI_InitStruct.ClockPhase = LL_SPI_PHASE_1EDGE;
 424:Core/Src/main.c ****   SPI_InitStruct.NSS = LL_SPI_NSS_SOFT;
 425:Core/Src/main.c ****   SPI_InitStruct.BaudRate = LL_SPI_BAUDRATEPRESCALER_DIV2;
 426:Core/Src/main.c ****   SPI_InitStruct.BitOrder = LL_SPI_MSB_FIRST;
 427:Core/Src/main.c ****   SPI_InitStruct.CRCCalculation = LL_SPI_CRCCALCULATION_DISABLE;
 428:Core/Src/main.c ****   SPI_InitStruct.CRCPoly = 7;
 429:Core/Src/main.c ****   LL_SPI_Init(SPI1, &SPI_InitStruct);
 430:Core/Src/main.c ****   LL_SPI_SetStandard(SPI1, LL_SPI_PROTOCOL_MOTOROLA);
 431:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** }
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** /**
 438:Core/Src/main.c ****   * @brief GPIO Initialization Function
 439:Core/Src/main.c ****   * @param None
 440:Core/Src/main.c ****   * @retval None
 441:Core/Src/main.c ****   */
 442:Core/Src/main.c **** static void MX_GPIO_Init(void)
 443:Core/Src/main.c **** {
 336              		.loc 1 443 1 is_stmt 1 view -0
 337              		.cfi_startproc
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 57


 338              		@ args = 0, pretend = 0, frame = 48
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 341              	.LCFI2:
 342              		.cfi_def_cfa_offset 20
 343              		.cfi_offset 4, -20
 344              		.cfi_offset 5, -16
 345              		.cfi_offset 6, -12
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 DE46     		mov	lr, fp
 349 0004 5746     		mov	r7, r10
 350 0006 4E46     		mov	r6, r9
 351 0008 4546     		mov	r5, r8
 352 000a E0B5     		push	{r5, r6, r7, lr}
 353              	.LCFI3:
 354              		.cfi_def_cfa_offset 36
 355              		.cfi_offset 8, -36
 356              		.cfi_offset 9, -32
 357              		.cfi_offset 10, -28
 358              		.cfi_offset 11, -24
 359 000c 8DB0     		sub	sp, sp, #52
 360              	.LCFI4:
 361              		.cfi_def_cfa_offset 88
 444:Core/Src/main.c ****   LL_EXTI_InitTypeDef EXTI_InitStruct = {0};
 362              		.loc 1 444 3 view .LVU81
 363              		.loc 1 444 23 is_stmt 0 view .LVU82
 364 000e 0AAF     		add	r7, sp, #40
 365 0010 0826     		movs	r6, #8
 366 0012 0822     		movs	r2, #8
 367 0014 0021     		movs	r1, #0
 368 0016 3800     		movs	r0, r7
 369 0018 FFF7FEFF 		bl	memset
 370              	.LVL17:
 445:Core/Src/main.c ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 371              		.loc 1 445 3 is_stmt 1 view .LVU83
 372              		.loc 1 445 23 is_stmt 0 view .LVU84
 373 001c 1822     		movs	r2, #24
 374 001e 0021     		movs	r1, #0
 375 0020 04A8     		add	r0, sp, #16
 376 0022 FFF7FEFF 		bl	memset
 377              	.LVL18:
 446:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 447:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 450:Core/Src/main.c ****   LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOC);
 378              		.loc 1 450 3 is_stmt 1 view .LVU85
 379              	.LBB190:
 380              	.LBI190:
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 58


 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_IsEnabledClock\n
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_IsEnabledClock\n
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_IsEnabledClock\n
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_IsEnabledClock\n
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_DisableClock\n
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_DisableClock\n
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_DisableClock\n
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_DisableClock\n
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_DisableClock\n
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_DisableClock\n
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_DisableClock\n
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_DisableClock\n
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_DisableClock\n
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_DisableClock\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 59


 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_DisableClock\n
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_DisableClock\n
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_DisableClock\n
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_DisableClock\n
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_DisableClock\n
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_DisableClock\n
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_DisableClock\n
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_DisableClock\n
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_DisableClock
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ForceReset\n
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ForceReset\n
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ForceReset\n
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ForceReset\n
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ForceReset\n
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ForceReset\n
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ForceReset\n
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ForceReset\n
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ForceReset\n
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ForceReset\n
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ForceReset\n
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ForceReset\n
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ForceReset\n
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ForceReset\n
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ForceReset\n
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ForceReset\n
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ForceReset\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 60


 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ForceReset\n
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ForceReset
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ReleaseReset\n
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ReleaseReset\n
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ReleaseReset\n
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ReleaseReset\n
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ReleaseReset\n
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ReleaseReset\n
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ReleaseReset\n
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ReleaseReset\n
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ReleaseReset\n
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ReleaseReset\n
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ReleaseReset
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 61


 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_EnableClockSleep\n
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_EnableClockSleep\n
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_EnableClockSleep\n
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_EnableClockSleep\n
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_EnableClockSleep\n
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_EnableClockSleep\n
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_EnableClockSleep\n
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_EnableClockSleep\n
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_EnableClockSleep\n
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_EnableClockSleep\n
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_EnableClockSleep\n
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_EnableClockSleep\n
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_EnableClockSleep\n
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_EnableClockSleep
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 62


 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockSleep(uint32_t Periphs)
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR, Periphs);
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR, Periphs);
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_DisableClockSleep\n
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_DisableClockSleep\n
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_DisableClockSleep\n
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_DisableClockSleep\n
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_DisableClockSleep\n
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_DisableClockSleep\n
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_DisableClockSleep\n
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_DisableClockSleep\n
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_DisableClockSleep\n
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_DisableClockSleep\n
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_DisableClockSleep\n
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_DisableClockSleep\n
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_DisableClockSleep\n
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_DisableClockSleep
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 63


 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockSleep(uint32_t Periphs)
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR, Periphs);
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_EnableClock\n
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_EnableClock\n
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_EnableClock\n
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_EnableClock\n
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_EnableClock
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 64


 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_IsEnabledClock\n
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_IsEnabledClock\n
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_IsEnabledClock\n
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_IsEnabledClock\n
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_IsEnabledClock\n
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_IsEnabledClock
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_DisableClock\n
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_DisableClock\n
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_DisableClock\n
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_DisableClock\n
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_DisableClock\n
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_DisableClock\n
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_DisableClock\n
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_DisableClock
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 65


 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ForceReset\n
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ForceReset\n
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ForceReset\n
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ForceReset\n
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ForceReset\n
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ForceReset\n
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ForceReset
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ReleaseReset\n
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ReleaseReset\n
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ReleaseReset\n
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ReleaseReset\n
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ReleaseReset\n
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ReleaseReset
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock during Low Power (Sleep) mode.
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_EnableClockSleep\n
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_EnableClockSleep\n
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_EnableClockSleep\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 66


 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_EnableClockSleep\n
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_EnableClockSleep\n
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_EnableClockSleep\n
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_EnableClockSleep
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClockSleep(uint32_t Periphs)
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2SMENR, Periphs);
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2SMENR, Periphs);
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock during Low Power (Sleep) mode.
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_DisableClockSleep\n
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_DisableClockSleep\n
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_DisableClockSleep\n
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_DisableClockSleep\n
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_DisableClockSleep\n
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_DisableClockSleep\n
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_DisableClockSleep
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClockSleep(uint32_t Periphs)
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2SMENR, Periphs);
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_IOP IOP
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 67


 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable IOP peripherals clock.
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll IOPENR       GPIOAEN       LL_IOP_GRP1_EnableClock\n
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOBEN       LL_IOP_GRP1_EnableClock\n
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOCEN       LL_IOP_GRP1_EnableClock\n
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIODEN       LL_IOP_GRP1_EnableClock\n
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOEEN       LL_IOP_GRP1_EnableClock\n
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOHEN       LL_IOP_GRP1_EnableClock
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOA
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOB
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOC
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOD (*)
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOE (*)
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOH (*)
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
 381              		.loc 2 985 22 view .LVU86
 382              	.LBB191:
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 383              		.loc 2 987 3 view .LVU87
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 384              		.loc 2 988 3 view .LVU88
 385 0026 4F4B     		ldr	r3, .L8
 386 0028 D96A     		ldr	r1, [r3, #44]
 387 002a 0422     		movs	r2, #4
 388 002c 1143     		orrs	r1, r2
 389 002e D962     		str	r1, [r3, #44]
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 390              		.loc 2 990 3 view .LVU89
 391              		.loc 2 990 12 is_stmt 0 view .LVU90
 392 0030 D96A     		ldr	r1, [r3, #44]
 393 0032 0A40     		ands	r2, r1
 394              		.loc 2 990 10 view .LVU91
 395 0034 0392     		str	r2, [sp, #12]
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 396              		.loc 2 991 3 is_stmt 1 view .LVU92
 397 0036 039A     		ldr	r2, [sp, #12]
 398              	.LVL19:
 399              		.loc 2 991 3 is_stmt 0 view .LVU93
 400              	.LBE191:
 401              	.LBE190:
 451:Core/Src/main.c ****   LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 402              		.loc 1 451 3 is_stmt 1 view .LVU94
 403              	.LBB192:
 404              	.LBI192:
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 405              		.loc 2 985 22 view .LVU95
 406              	.LBB193:
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 407              		.loc 2 987 3 view .LVU96
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 68


 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 408              		.loc 2 988 3 view .LVU97
 409 0038 DA6A     		ldr	r2, [r3, #44]
 410 003a 0124     		movs	r4, #1
 411 003c 2243     		orrs	r2, r4
 412 003e DA62     		str	r2, [r3, #44]
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 413              		.loc 2 990 3 view .LVU98
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 414              		.loc 2 990 12 is_stmt 0 view .LVU99
 415 0040 DA6A     		ldr	r2, [r3, #44]
 416 0042 2240     		ands	r2, r4
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 417              		.loc 2 990 10 view .LVU100
 418 0044 0292     		str	r2, [sp, #8]
 419              		.loc 2 991 3 is_stmt 1 view .LVU101
 420 0046 029A     		ldr	r2, [sp, #8]
 421              	.LVL20:
 422              		.loc 2 991 3 is_stmt 0 view .LVU102
 423              	.LBE193:
 424              	.LBE192:
 452:Core/Src/main.c ****   LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOB);
 425              		.loc 1 452 3 is_stmt 1 view .LVU103
 426              	.LBB194:
 427              	.LBI194:
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 428              		.loc 2 985 22 view .LVU104
 429              	.LBB195:
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 430              		.loc 2 987 3 view .LVU105
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 431              		.loc 2 988 3 view .LVU106
 432 0048 DA6A     		ldr	r2, [r3, #44]
 433 004a 0221     		movs	r1, #2
 434 004c 8946     		mov	r9, r1
 435 004e 0A43     		orrs	r2, r1
 436 0050 DA62     		str	r2, [r3, #44]
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 437              		.loc 2 990 3 view .LVU107
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 438              		.loc 2 990 12 is_stmt 0 view .LVU108
 439 0052 DB6A     		ldr	r3, [r3, #44]
 440 0054 0B40     		ands	r3, r1
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 441              		.loc 2 990 10 view .LVU109
 442 0056 0193     		str	r3, [sp, #4]
 443              		.loc 2 991 3 is_stmt 1 view .LVU110
 444 0058 019B     		ldr	r3, [sp, #4]
 445              	.LVL21:
 446              		.loc 2 991 3 is_stmt 0 view .LVU111
 447              	.LBE195:
 448              	.LBE194:
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* EPD nRST */
 455:Core/Src/main.c ****   LL_GPIO_SetOutputPin(EPD_RST_GPIO_Port, EPD_RST_Pin);
 449              		.loc 1 455 3 is_stmt 1 view .LVU112
 450              	.LBB196:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 69


 451              	.LBI196:
 452              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @file    stm32l0xx_ll_gpio.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #ifndef __STM32L0xx_LL_GPIO_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define __STM32L0xx_LL_GPIO_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #endif
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #include "stm32l0xx.h"
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 70


  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** typedef struct
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS_0 /*!< Select pin 0 */
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS_1 /*!< Select pin 1 */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS_2 /*!< Select pin 2 */
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS_3 /*!< Select pin 3 */
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS_4 /*!< Select pin 4 */
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS_5 /*!< Select pin 5 */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 71


 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS_6 /*!< Select pin 6 */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS_7 /*!< Select pin 7 */
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS_8 /*!< Select pin 8 */
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS_9 /*!< Select pin 9 */
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS_10 /*!< Select pin 10 */
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS_11 /*!< Select pin 11 */
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS_12 /*!< Select pin 12 */
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS_13 /*!< Select pin 13 */
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS_14 /*!< Select pin 14 */
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS_15 /*!< Select pin 15 */
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS_0 | GPIO_BSRR_BS_1  | GPIO_BSRR_BS_2  | \
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_3  | GPIO_BSRR_BS_4  | GPIO_BSRR_BS_5  | \
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_6  | GPIO_BSRR_BS_7  | GPIO_BSRR_BS_8  | \
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_9  | GPIO_BSRR_BS_10 | GPIO_BSRR_BS_11 | \
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_12 | GPIO_BSRR_BS_13 | GPIO_BSRR_BS_14 | \
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_15) /*!< Select all pins */
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U)       /*!< Select input mode */
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U)    /*!< Select push-pull as output type */
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT_0 /*!< Select open-drain as output type *
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U)           /*!< Select I/O low output speed
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDER_OSPEED0_0 /*!< Select I/O medium output sp
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDER_OSPEED0_1 /*!< Select I/O fast output spee
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDER_OSPEED0   /*!< Select I/O high output spee
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 72


 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U)      /*!< Select I/O no pull */
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Register value
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 73


 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, ((Pin * Pin) * GPIO_MODER_MODE0), ((Pin * Pin) * Mode));
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 74


 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER, ((Pin * Pin) * GPIO_MODER_MODE0)) / (Pin * Pin));
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 75


 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) / Pin);
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 76


 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDER_OSPEED0), ((Pin * Pin) * Speed));
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDER_OSPEED0)) / (Pin * Pin));
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 77


 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, ((Pin * Pin) * GPIO_PUPDR_PUPD0), ((Pin * Pin) * Pull));
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR, ((Pin * Pin) * GPIO_PUPDR_PUPD0)) / (Pin * Pin));
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 78


 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], ((((Pin * Pin) * Pin) * Pin) * GPIO_AFRL_AFSEL0),
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****              ((((Pin * Pin) * Pin) * Pin) * Alternate));
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 79


 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                              ((((Pin * Pin) * Pin) * Pin) * GPIO_AFRL_AFSEL0)) / (((Pin * Pin) * Pi
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * GPIO_AFR
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****              (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * Alternate));
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 80


 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                              (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * GPIO_AF
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                  (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)));
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         next reset.
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         (control and alternate function registers).
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   __IO uint32_t temp;
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   (void) temp;
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 81


 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, PinMask) == (PinMask));
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK));
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Input data register value of port
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 82


 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->IDR, PinMask) == (PinMask));
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Output data register value of port
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 83


 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, PinMask) == (PinMask));
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 453              		.loc 6 843 22 view .LVU113
 454              	.LBB197:
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, PinMask);
 455              		.loc 6 845 3 view .LVU114
 456 005a A025     		movs	r5, #160
 457 005c ED05     		lsls	r5, r5, #23
 458 005e AE61     		str	r6, [r5, #24]
 459              	.LVL22:
 460              		.loc 6 845 3 is_stmt 0 view .LVU115
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 84


 461              	.LBE197:
 462              	.LBE196:
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* EPD nCS Pin */
 458:Core/Src/main.c ****   LL_GPIO_SetOutputPin(EPD_CS_GPIO_Port, EPD_CS_Pin);
 463              		.loc 1 458 3 is_stmt 1 view .LVU116
 464              	.LBB198:
 465              	.LBI198:
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 466              		.loc 6 843 22 view .LVU117
 467              	.LBB199:
 468              		.loc 6 845 3 view .LVU118
 469 0060 1023     		movs	r3, #16
 470 0062 9B46     		mov	fp, r3
 471 0064 AB61     		str	r3, [r5, #24]
 472              	.LVL23:
 473              		.loc 6 845 3 is_stmt 0 view .LVU119
 474              	.LBE199:
 475              	.LBE198:
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* EPD DC# Pin */
 461:Core/Src/main.c ****   LL_GPIO_SetOutputPin(EPD_DC_GPIO_Port, EPD_DC_Pin);
 476              		.loc 1 461 3 is_stmt 1 view .LVU120
 477              	.LBB200:
 478              	.LBI200:
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 479              		.loc 6 843 22 view .LVU121
 480              	.LBB201:
 481              		.loc 6 845 3 view .LVU122
 482 0066 3033     		adds	r3, r3, #48
 483 0068 9A46     		mov	r10, r3
 484 006a AB61     		str	r3, [r5, #24]
 485              	.LVL24:
 486              		.loc 6 845 3 is_stmt 0 view .LVU123
 487              	.LBE201:
 488              	.LBE200:
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /**/
 464:Core/Src/main.c ****   LL_GPIO_SetOutputPin(SHTC3_SCL_GPIO_Port, SHTC3_SCL_Pin);
 489              		.loc 1 464 3 is_stmt 1 view .LVU124
 490              	.LBB202:
 491              	.LBI202:
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 492              		.loc 6 843 22 view .LVU125
 493              	.LBB203:
 494              		.loc 6 845 3 view .LVU126
 495 006c 3E4B     		ldr	r3, .L8+4
 496 006e 9846     		mov	r8, r3
 497 0070 5246     		mov	r2, r10
 498 0072 9A61     		str	r2, [r3, #24]
 499              	.LVL25:
 500              		.loc 6 845 3 is_stmt 0 view .LVU127
 501              	.LBE203:
 502              	.LBE202:
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****   /**/
 467:Core/Src/main.c ****   LL_GPIO_SetOutputPin(SHTC3_SDA_GPIO_Port, SHTC3_SDA_Pin);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 85


 503              		.loc 1 467 3 is_stmt 1 view .LVU128
 504              	.LBB204:
 505              	.LBI204:
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 506              		.loc 6 843 22 view .LVU129
 507              	.LBB205:
 508              		.loc 6 845 3 view .LVU130
 509 0074 1A00     		movs	r2, r3
 510 0076 8023     		movs	r3, #128
 511 0078 9361     		str	r3, [r2, #24]
 512              	.LVL26:
 513              		.loc 6 845 3 is_stmt 0 view .LVU131
 514              	.LBE205:
 515              	.LBE204:
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /**/
 470:Core/Src/main.c ****   GPIO_InitStruct.Pin = EPD_PWR_Pin;
 516              		.loc 1 470 3 is_stmt 1 view .LVU132
 517              		.loc 1 470 23 is_stmt 0 view .LVU133
 518 007a 8023     		movs	r3, #128
 519 007c DB00     		lsls	r3, r3, #3
 520 007e 0493     		str	r3, [sp, #16]
 471:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 521              		.loc 1 471 3 is_stmt 1 view .LVU134
 522              		.loc 1 471 24 is_stmt 0 view .LVU135
 523 0080 0594     		str	r4, [sp, #20]
 472:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 524              		.loc 1 472 3 is_stmt 1 view .LVU136
 473:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 525              		.loc 1 473 3 view .LVU137
 474:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 526              		.loc 1 474 3 view .LVU138
 475:Core/Src/main.c ****   LL_GPIO_Init(EPD_PWR_GPIO_Port, &GPIO_InitStruct);
 527              		.loc 1 475 3 view .LVU139
 528 0082 04A9     		add	r1, sp, #16
 529 0084 2800     		movs	r0, r5
 530 0086 FFF7FEFF 		bl	LL_GPIO_Init
 531              	.LVL27:
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /**/
 478:Core/Src/main.c ****   GPIO_InitStruct.Pin = EPD_RST_Pin;
 532              		.loc 1 478 3 view .LVU140
 533              		.loc 1 478 23 is_stmt 0 view .LVU141
 534 008a 0496     		str	r6, [sp, #16]
 479:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 535              		.loc 1 479 3 is_stmt 1 view .LVU142
 536              		.loc 1 479 24 is_stmt 0 view .LVU143
 537 008c 0594     		str	r4, [sp, #20]
 480:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 538              		.loc 1 480 3 is_stmt 1 view .LVU144
 539              		.loc 1 480 25 is_stmt 0 view .LVU145
 540 008e 0026     		movs	r6, #0
 541 0090 0696     		str	r6, [sp, #24]
 481:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 542              		.loc 1 481 3 is_stmt 1 view .LVU146
 543              		.loc 1 481 30 is_stmt 0 view .LVU147
 544 0092 0796     		str	r6, [sp, #28]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 86


 482:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 545              		.loc 1 482 3 is_stmt 1 view .LVU148
 546              		.loc 1 482 24 is_stmt 0 view .LVU149
 547 0094 0896     		str	r6, [sp, #32]
 483:Core/Src/main.c ****   LL_GPIO_Init(EPD_RST_GPIO_Port, &GPIO_InitStruct);
 548              		.loc 1 483 3 is_stmt 1 view .LVU150
 549 0096 04A9     		add	r1, sp, #16
 550 0098 2800     		movs	r0, r5
 551 009a FFF7FEFF 		bl	LL_GPIO_Init
 552              	.LVL28:
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /**/
 486:Core/Src/main.c ****   GPIO_InitStruct.Pin = EPD_CS_Pin;
 553              		.loc 1 486 3 view .LVU151
 554              		.loc 1 486 23 is_stmt 0 view .LVU152
 555 009e 5A46     		mov	r2, fp
 556 00a0 0492     		str	r2, [sp, #16]
 487:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 557              		.loc 1 487 3 is_stmt 1 view .LVU153
 558              		.loc 1 487 24 is_stmt 0 view .LVU154
 559 00a2 0594     		str	r4, [sp, #20]
 488:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 560              		.loc 1 488 3 is_stmt 1 view .LVU155
 561              		.loc 1 488 25 is_stmt 0 view .LVU156
 562 00a4 0696     		str	r6, [sp, #24]
 489:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 563              		.loc 1 489 3 is_stmt 1 view .LVU157
 564              		.loc 1 489 30 is_stmt 0 view .LVU158
 565 00a6 0796     		str	r6, [sp, #28]
 490:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 566              		.loc 1 490 3 is_stmt 1 view .LVU159
 567              		.loc 1 490 24 is_stmt 0 view .LVU160
 568 00a8 0896     		str	r6, [sp, #32]
 491:Core/Src/main.c ****   LL_GPIO_Init(EPD_CS_GPIO_Port, &GPIO_InitStruct);
 569              		.loc 1 491 3 is_stmt 1 view .LVU161
 570 00aa 04A9     		add	r1, sp, #16
 571 00ac 2800     		movs	r0, r5
 572 00ae FFF7FEFF 		bl	LL_GPIO_Init
 573              	.LVL29:
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /**/
 494:Core/Src/main.c ****   GPIO_InitStruct.Pin = EPD_DC_Pin;
 574              		.loc 1 494 3 view .LVU162
 575              		.loc 1 494 23 is_stmt 0 view .LVU163
 576 00b2 5246     		mov	r2, r10
 577 00b4 0492     		str	r2, [sp, #16]
 495:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 578              		.loc 1 495 3 is_stmt 1 view .LVU164
 579              		.loc 1 495 24 is_stmt 0 view .LVU165
 580 00b6 0594     		str	r4, [sp, #20]
 496:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 581              		.loc 1 496 3 is_stmt 1 view .LVU166
 582              		.loc 1 496 25 is_stmt 0 view .LVU167
 583 00b8 0696     		str	r6, [sp, #24]
 497:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 584              		.loc 1 497 3 is_stmt 1 view .LVU168
 585              		.loc 1 497 30 is_stmt 0 view .LVU169
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 87


 586 00ba 0796     		str	r6, [sp, #28]
 498:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 587              		.loc 1 498 3 is_stmt 1 view .LVU170
 588              		.loc 1 498 24 is_stmt 0 view .LVU171
 589 00bc 0896     		str	r6, [sp, #32]
 499:Core/Src/main.c ****   LL_GPIO_Init(EPD_DC_GPIO_Port, &GPIO_InitStruct);
 590              		.loc 1 499 3 is_stmt 1 view .LVU172
 591 00be 04A9     		add	r1, sp, #16
 592 00c0 2800     		movs	r0, r5
 593 00c2 FFF7FEFF 		bl	LL_GPIO_Init
 594              	.LVL30:
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /**/
 502:Core/Src/main.c ****   GPIO_InitStruct.Pin = EPD_BUSY_Pin;
 595              		.loc 1 502 3 view .LVU173
 596              		.loc 1 502 23 is_stmt 0 view .LVU174
 597 00c6 0494     		str	r4, [sp, #16]
 503:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_INPUT;
 598              		.loc 1 503 3 is_stmt 1 view .LVU175
 599              		.loc 1 503 24 is_stmt 0 view .LVU176
 600 00c8 0596     		str	r6, [sp, #20]
 504:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 601              		.loc 1 504 3 is_stmt 1 view .LVU177
 602              		.loc 1 504 24 is_stmt 0 view .LVU178
 603 00ca 0896     		str	r6, [sp, #32]
 505:Core/Src/main.c ****   LL_GPIO_Init(EPD_BUSY_GPIO_Port, &GPIO_InitStruct);
 604              		.loc 1 505 3 is_stmt 1 view .LVU179
 605 00cc 04A9     		add	r1, sp, #16
 606 00ce 4046     		mov	r0, r8
 607 00d0 FFF7FEFF 		bl	LL_GPIO_Init
 608              	.LVL31:
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /**/
 508:Core/Src/main.c ****   GPIO_InitStruct.Pin = SHTC3_SCL_Pin;
 609              		.loc 1 508 3 view .LVU180
 610              		.loc 1 508 23 is_stmt 0 view .LVU181
 611 00d4 5246     		mov	r2, r10
 612 00d6 0492     		str	r2, [sp, #16]
 509:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 613              		.loc 1 509 3 is_stmt 1 view .LVU182
 614              		.loc 1 509 24 is_stmt 0 view .LVU183
 615 00d8 0594     		str	r4, [sp, #20]
 510:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 616              		.loc 1 510 3 is_stmt 1 view .LVU184
 617              		.loc 1 510 25 is_stmt 0 view .LVU185
 618 00da 0694     		str	r4, [sp, #24]
 511:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
 619              		.loc 1 511 3 is_stmt 1 view .LVU186
 620              		.loc 1 511 30 is_stmt 0 view .LVU187
 621 00dc 0794     		str	r4, [sp, #28]
 512:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 622              		.loc 1 512 3 is_stmt 1 view .LVU188
 623              		.loc 1 512 24 is_stmt 0 view .LVU189
 624 00de 0894     		str	r4, [sp, #32]
 513:Core/Src/main.c ****   LL_GPIO_Init(SHTC3_SCL_GPIO_Port, &GPIO_InitStruct);
 625              		.loc 1 513 3 is_stmt 1 view .LVU190
 626 00e0 04A9     		add	r1, sp, #16
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 88


 627 00e2 4046     		mov	r0, r8
 628 00e4 FFF7FEFF 		bl	LL_GPIO_Init
 629              	.LVL32:
 514:Core/Src/main.c **** 
 515:Core/Src/main.c ****   /**/
 516:Core/Src/main.c ****   GPIO_InitStruct.Pin = SHTC3_SDA_Pin;
 630              		.loc 1 516 3 view .LVU191
 631              		.loc 1 516 23 is_stmt 0 view .LVU192
 632 00e8 8023     		movs	r3, #128
 633 00ea 0493     		str	r3, [sp, #16]
 517:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 634              		.loc 1 517 3 is_stmt 1 view .LVU193
 635              		.loc 1 517 24 is_stmt 0 view .LVU194
 636 00ec 0594     		str	r4, [sp, #20]
 518:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 637              		.loc 1 518 3 is_stmt 1 view .LVU195
 638              		.loc 1 518 25 is_stmt 0 view .LVU196
 639 00ee 0694     		str	r4, [sp, #24]
 519:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
 640              		.loc 1 519 3 is_stmt 1 view .LVU197
 641              		.loc 1 519 30 is_stmt 0 view .LVU198
 642 00f0 0794     		str	r4, [sp, #28]
 520:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 643              		.loc 1 520 3 is_stmt 1 view .LVU199
 644              		.loc 1 520 24 is_stmt 0 view .LVU200
 645 00f2 0894     		str	r4, [sp, #32]
 521:Core/Src/main.c ****   LL_GPIO_Init(SHTC3_SDA_GPIO_Port, &GPIO_InitStruct);
 646              		.loc 1 521 3 is_stmt 1 view .LVU201
 647 00f4 04A9     		add	r1, sp, #16
 648 00f6 4046     		mov	r0, r8
 649 00f8 FFF7FEFF 		bl	LL_GPIO_Init
 650              	.LVL33:
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****   /**/
 524:Core/Src/main.c ****   LL_SYSCFG_SetEXTISource(LL_SYSCFG_EXTI_PORTA, LL_SYSCFG_EXTI_LINE8);
 651              		.loc 1 524 3 view .LVU202
 652              	.LBB206:
 653              	.LBI206:
 654              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @file    stm32l0xx_ll_system.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ******************************************************************************
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @attention
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * Copyright (c) 2016 STMicroelectronics.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * All rights reserved.
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * in the root directory of this software component.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ******************************************************************************
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   @verbatim
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 89


  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ==============================================================================
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                      ##### How to use this driver #####
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ==============================================================================
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****     [..]
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****     used by user:
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****       (+) Access to DBGCMU registers
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****       (+) Access to SYSCFG registers
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   @endverbatim
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ******************************************************************************
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #ifndef __STM32L0xx_LL_SYSTEM_H
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define __STM32L0xx_LL_SYSTEM_H
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #ifdef __cplusplus
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** extern "C" {
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #include "stm32l0xx.h"
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @addtogroup STM32L0xx_LL_Driver
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined (FLASH) || defined (SYSCFG) || defined (DBGMCU)
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****  * @brief Power-down in Run mode Flash key
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****  */
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define FLASH_PDKEY1                  (0x04152637U) /*!< Flash power down key1 */
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define FLASH_PDKEY2                  (0xFAFBFCFDU) /*!< Flash power down key2: used with FLASH_PDK
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                    to unlock the RUN_PD bit in FLAS
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 90


  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_REMAP SYSCFG Memory Remap
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** * @{
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** */
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_REMAP_FLASH              0x00000000U                                           /*
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_REMAP_SYSTEMFLASH        SYSCFG_CFGR1_MEM_MODE_0                               /*
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_REMAP_SRAM               (SYSCFG_CFGR1_MEM_MODE_1 | SYSCFG_CFGR1_MEM_MODE_0)   /*
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_UFB)
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_BANKMODE SYSCFG Bank Mode
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK1           0x00000000U               /*!< Flash Bank1 mapped at 0x0
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Flash Bank2 mapped at 0x0
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Data EEPROM Bank1 mapped 
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Data EEPROM Bank2 mapped 
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK2           SYSCFG_CFGR1_UFB          /*!< Flash Bank2 mapped at 0x0
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Flash Bank1 mapped at 0x0
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Data EEPROM Bank2 mapped 
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Data EEPROM Bank1 mapped 
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_UFB */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_BOOTMODE SYSCFG Boot Mode
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** * @{
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** */
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BOOTMODE_FLASH           0x00000000U                                           /*
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BOOTMODE_SYSTEMFLASH     SYSCFG_CFGR1_BOOT_MODE_0                              /*
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BOOTMODE_SRAM            (SYSCFG_CFGR1_BOOT_MODE_1 | SYSCFG_CFGR1_BOOT_MODE_0) /*
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_CAPA)
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_CFGR2 SYSCFG VLCD Rail Connection
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD2_PB2           SYSCFG_CFGR2_CAPA_0       /*!< Connect PB2  pin to LCD_V
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD1_PB12          SYSCFG_CFGR2_CAPA_1       /*!< Connect PB12 pin to LCD_V
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD3_PB0           SYSCFG_CFGR2_CAPA_2       /*!< Connect PB0  pin to LCD_V
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined (SYSCFG_CFGR2_CAPA_3)
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD1_PE11          SYSCFG_CFGR2_CAPA_3       /*!< Connect PE11 pin to LCD_V
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_CAPA_3 */
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined (SYSCFG_CFGR2_CAPA_4)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 91


 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD3_PE12          SYSCFG_CFGR2_CAPA_4       /*!< Connect PE12 pin to LCD_V
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_CAPA_4 */
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_CAPA */
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_I2C_FASTMODEPLUS SYSCFG I2C FASTMODEPLUS
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB6     SYSCFG_CFGR2_I2C_PB6_FMP  /*!< Enable Fast Mode Plus on 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB7     SYSCFG_CFGR2_I2C_PB7_FMP  /*!< Enable Fast Mode Plus on 
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB8     SYSCFG_CFGR2_I2C_PB8_FMP  /*!< Enable Fast Mode Plus on 
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB9     SYSCFG_CFGR2_I2C_PB9_FMP  /*!< Enable Fast Mode Plus on 
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C1    SYSCFG_CFGR2_I2C1_FMP     /*!< Enable Fast Mode Plus on 
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_I2C2_FMP)
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C2    SYSCFG_CFGR2_I2C2_FMP     /*!< Enable Fast Mode Plus on 
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_I2C2_FMP */
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_I2C3_FMP)
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C3    SYSCFG_CFGR2_I2C3_FMP     /*!< Enable Fast Mode Plus on 
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_I2C3_FMP */
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_VREFINT_CONTROL SYSCFG VREFINT Control
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_VREFINT_CONNECT_NONE        0x00000000U                       /*!< No pad connect
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_VREFINT_CONNECT_IO1         SYSCFG_CFGR3_VREF_OUT_0           /*!< PB0 connected 
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_VREFINT_CONNECT_IO2         SYSCFG_CFGR3_VREF_OUT_1           /*!< PB1 connected 
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_VREFINT_CONNECT_IO1_IO2     (SYSCFG_CFGR3_VREF_OUT_0 | SYSCFG_CFGR3_VREF_OUT_1)  
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_PORT SYSCFG EXTI Port
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTA               0U              /*!< EXTI PORT A */
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTB               1U              /*!< EXTI PORT B */
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTC               2U              /*!< EXTI PORT C */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(GPIOD_BASE)
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTD               3U              /*!< EXTI PORT D */
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*GPIOD_BASE*/
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(GPIOE_BASE)
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTE               4U              /*!< EXTI PORT E */
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*GPIOE_BASE*/
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(GPIOH_BASE)
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTH               5U              /*!< EXTI PORT H */
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*GPIOH_BASE*/
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_LINE SYSCFG EXTI Line
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 92


 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE0               (uint32_t)(0U  << 16U | 0U)  /*!< EXTI_POSITION_0  | EXT
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE1               (uint32_t)(4U  << 16U | 0U)  /*!< EXTI_POSITION_4  | EXT
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE2               (uint32_t)(8U  << 16U | 0U)  /*!< EXTI_POSITION_8  | EXT
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE3               (uint32_t)(12U << 16U | 0U)  /*!< EXTI_POSITION_12 | EXT
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE4               (uint32_t)(0U  << 16U | 1U)  /*!< EXTI_POSITION_0  | EXT
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE5               (uint32_t)(4U  << 16U | 1U)  /*!< EXTI_POSITION_4  | EXT
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE6               (uint32_t)(8U  << 16U | 1U)  /*!< EXTI_POSITION_8  | EXT
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE7               (uint32_t)(12U << 16U | 1U)  /*!< EXTI_POSITION_12 | EXT
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE8               (uint32_t)(0U  << 16U | 2U)  /*!< EXTI_POSITION_0  | EXT
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE9               (uint32_t)(4U  << 16U | 2U)  /*!< EXTI_POSITION_4  | EXT
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE10              (uint32_t)(8U  << 16U | 2U)  /*!< EXTI_POSITION_8  | EXT
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE11              (uint32_t)(12U << 16U | 2U)  /*!< EXTI_POSITION_12 | EXT
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE12              (uint32_t)(0U  << 16U | 3U)  /*!< EXTI_POSITION_0  | EXT
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE13              (uint32_t)(4U  << 16U | 3U)  /*!< EXTI_POSITION_4  | EXT
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE14              (uint32_t)(8U  << 16U | 3U)  /*!< EXTI_POSITION_8  | EXT
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE15              (uint32_t)(12U << 16U | 3U)  /*!< EXTI_POSITION_12 | EXT
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP DBGMCU APB1 GRP1 STOP IP
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_APB1_FZ_DBG_TIM2_STOP    /*!< TIM2 counter stoppe
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(TIM3)
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_APB1_FZ_DBG_TIM3_STOP    /*!< TIM3 counter stoppe
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*TIM3*/
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(TIM6)
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_APB1_FZ_DBG_TIM6_STOP    /*!< TIM6 counter stoppe
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*TIM6*/
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(TIM7)
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_APB1_FZ_DBG_TIM7_STOP    /*!< TIM7 counter stoppe
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*TIM7*/
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_RTC_STOP       DBGMCU_APB1_FZ_DBG_RTC_STOP     /*!< RTC Calendar frozen
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_APB1_FZ_DBG_WWDG_STOP    /*!< Debug Window Watchd
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_APB1_FZ_DBG_IWDG_STOP    /*!< Debug Independent W
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_APB1_FZ_DBG_I2C1_STOP    /*!< I2C1 SMBUS timeout 
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(I2C2)
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C2_STOP      DBGMCU_APB1_FZ_DBG_I2C2_STOP    /*!< I2C2 SMBUS timeout 
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*I2C2*/
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(I2C3)
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C3_STOP      DBGMCU_APB1_FZ_DBG_I2C3_STOP    /*!< I2C3 SMBUS timeout 
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*I2C3*/
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_LPTIM1_STOP    DBGMCU_APB1_FZ_DBG_LPTIMER_STOP /*!< LPTIM1 counter stop
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB2_GRP1_STOP_IP DBGMCU APB2 GRP1 STOP IP
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(TIM22)
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM22_STOP     DBGMCU_APB2_FZ_DBG_TIM22_STOP /*!< TIM22 counter stopped
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*TIM22*/
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 93


 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM21_STOP     DBGMCU_APB2_FZ_DBG_TIM21_STOP /*!< TIM21 counter stopped
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 (0x00000000U)           /*!< FLASH Zero Latency cycle */
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY       /*!< FLASH One Latency cycle */
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_SYSCFG SYSCFG
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Set memory mapping at address 0x00000000
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 MEM_MODE      LL_SYSCFG_SetRemapMemory
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Memory This parameter can be one of the following values:
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapMemory(uint32_t Memory)
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_MEM_MODE, Memory);
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get memory mapping at address 0x00000000
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 MEM_MODE      LL_SYSCFG_GetRemapMemory
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetRemapMemory(void)
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_MEM_MODE));
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_UFB)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 94


 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Select Flash bank mode (Bank flashed at 0x08000000)
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 UFB           LL_SYSCFG_SetFlashBankMode
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Bank This parameter can be one of the following values:
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetFlashBankMode(uint32_t Bank)
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_UFB, Bank);
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get Flash bank mode (Bank flashed at 0x08000000)
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 UFB           LL_SYSCFG_GetFlashBankMode
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetFlashBankMode(void)
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_UFB));
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_UFB */
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get Boot mode selected by the boot pins status bits
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   It indicates the boot mode selected by the boot pins. Bit 9
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         corresponds to the complement of nBOOT1 bit in the FLASH_OPTR register.
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         Its value is defined in the option bytes. Bit 8 corresponds to the
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         value sampled on the BOOT0 pin.
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 BOOT_MODE      LL_SYSCFG_GetBootMode
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BOOTMODE_FLASH
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BOOTMODE_SYSTEMFLASH
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BOOTMODE_SRAM
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetBootMode(void)
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOT_MODE));
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Firewall protection enabled
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 FWDIS         LL_SYSCFG_EnableFirewall
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFirewall(void)
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_FWDISEN);
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Check if Firewall protection is enabled or not
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 FWDIS         LL_SYSCFG_IsEnabledFirewall
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 95


 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledFirewall(void)
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return !(READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_FWDISEN) == SYSCFG_CFGR2_FWDISEN);
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_CAPA)
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Set VLCD rail connection to optional external capacitor
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   One to three external capacitors can be connected to pads to do
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         VLCD biasing.
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD1 rail can be connected to PB12 or PE11(*),
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD2 rail can be connected to PB2,
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD3 rail can be connected to PB0 or PE12(*)
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 CAPA      LL_SYSCFG_SetVLCDRailConnection
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  IoPinConnect This parameter can be a combination of the following values:
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD1_PB12
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD1_PE11(*)
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD2_PB2
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD3_PB0
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD3_PE12(*)
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetVLCDRailConnection(uint32_t IoPinConnect)
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR2, SYSCFG_CFGR2_CAPA, IoPinConnect);
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get VLCD rail connection configuration
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   One to three external capacitors can be connected to pads to do
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         VLCD biasing.
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD1 rail can be connected to PB12 or PE11(*),
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD2 rail can be connected to PB2,
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD3 rail can be connected to PB0 or PE12(*)
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 CAPA      LL_SYSCFG_GetVLCDRailConnection
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be a combination of the following values:
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD1_PB12
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD1_PE11(*)
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD2_PB2
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD3_PB0
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD3_PE12(*)
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetVLCDRailConnection(void)
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_CAPA));
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Enable the I2C fast mode plus driving capability.
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 I2C_PBx_FMP   LL_SYSCFG_EnableFastModePlus\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 96


 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_CFGR2 I2Cx_FMP      LL_SYSCFG_EnableFastModePlus
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3 (*)
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFastModePlus(uint32_t ConfigFastModePlus)
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR2, ConfigFastModePlus);
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Disable the I2C fast mode plus driving capability.
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 I2C_PBx_FMP   LL_SYSCFG_DisableFastModePlus\n
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_CFGR2 I2Cx_FMP      LL_SYSCFG_DisableFastModePlus
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3 (*)
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableFastModePlus(uint32_t ConfigFastModePlus)
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR2, ConfigFastModePlus);
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Select which pad is connected to VREFINT_ADC
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 SEL_VREF_OUT  LL_SYSCFG_VREFINT_SetConnection
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  IoPinConnect This parameter can be one of the following values:
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_NONE
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO1
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO2
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO1_IO2
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_SetConnection(uint32_t IoPinConnect)
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR3, SYSCFG_CFGR3_VREF_OUT, IoPinConnect);
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get pad connection to VREFINT_ADC
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 SEL_VREF_OUT  LL_SYSCFG_VREFINT_GetConnection
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 97


 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_NONE
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO1
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO2
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO1_IO2
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_VREFINT_GetConnection(void)
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_VREF_OUT));
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for ADC enable
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   The VrefInit buffer to ADC through internal path is also
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         enabled using function LL_ADC_SetCommonPathInternalCh()
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         with parameter LL_ADC_PATH_INTERNAL_VREFINT
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_VREFINT_ADC   LL_SYSCFG_VREFINT_EnableADC
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_EnableADC(void)
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUF_VREFINT_ADC);
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for ADC disable
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_VREFINT_ADC   LL_SYSCFG_VREFINT_DisableADC
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_DisableADC(void)
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUF_VREFINT_ADC);
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate temperature sensor reference for ADC enable
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_SENSOR_ADC    LL_SYSCFG_TEMPSENSOR_Enable
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_TEMPSENSOR_Enable(void)
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUF_SENSOR_ADC);
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate temperature sensor reference for ADC disable
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_SENSOR_ADC    LL_SYSCFG_TEMPSENSOR_Disable
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_TEMPSENSOR_Disable(void)
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUF_SENSOR_ADC);
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for comparator enable
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_VREFINT_COMP  LL_SYSCFG_VREFINT_EnableCOMP
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 98


 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_EnableCOMP(void)
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP);
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for comparator disable
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_VREFINT_COMP  LL_SYSCFG_VREFINT_DisableCOMP
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_DisableCOMP(void)
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP);
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined (RCC_HSI48_SUPPORT)
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for HSI48 oscillator enable
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENREF_HSI48         LL_SYSCFG_VREFINT_EnableHSI48
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_EnableHSI48(void)
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENREF_HSI48);
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for HSI48 oscillator disable
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENREF_HSI48         LL_SYSCFG_VREFINT_DisableHSI48
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_DisableHSI48(void)
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENREF_HSI48);
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Check if VREFINT is ready or not
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   When set, it indicates that VREFINT is available for BOR, PVD and LCD
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 VREFINT_RDYF        LL_SYSCFG_VREFINT_IsReady
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_VREFINT_IsReady(void)
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (READ_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_VREFINT_RDYF) == SYSCFG_CFGR3_VREFINT_RDYF);
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Lock the whole content of SYSCFG_CFGR3 register
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   After SYSCFG_CFGR3 register lock, only read access available.
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         Only system hardware reset unlocks SYSCFG_CFGR3 register.
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 REF_LOCK            LL_SYSCFG_VREFINT_Lock
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 99


 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_Lock(void)
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Check if SYSCFG_CFGR3 register is locked (only read access) or not
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   When set, it indicates that SYSCFG_CFGR3 register is locked, only read access available
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 REF_LOCK              LL_SYSCFG_VREFINT_IsLocked
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_VREFINT_IsLocked(void)
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (READ_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK) == SYSCFG_CFGR3_REF_LOCK);
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Configure source input for the EXTI external interrupt.
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTI0         LL_SYSCFG_SetEXTISource\n
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI1         LL_SYSCFG_SetEXTISource\n
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI2         LL_SYSCFG_SetEXTISource\n
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI3         LL_SYSCFG_SetEXTISource\n
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI4         LL_SYSCFG_SetEXTISource\n
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI5         LL_SYSCFG_SetEXTISource\n
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI6         LL_SYSCFG_SetEXTISource\n
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI7         LL_SYSCFG_SetEXTISource\n
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI8         LL_SYSCFG_SetEXTISource\n
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI9         LL_SYSCFG_SetEXTISource\n
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI10        LL_SYSCFG_SetEXTISource\n
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI11        LL_SYSCFG_SetEXTISource\n
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI12        LL_SYSCFG_SetEXTISource\n
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI13        LL_SYSCFG_SetEXTISource\n
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI14        LL_SYSCFG_SetEXTISource\n
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI15        LL_SYSCFG_SetEXTISource
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Port This parameter can be one of the following values:
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD (*)
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE (*)
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTH (*)
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 100


 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetEXTISource(uint32_t Port, uint32_t Line)
 655              		.loc 7 651 22 view .LVU203
 656              	.LBB207:
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->EXTICR[Line & 0xFFU], SYSCFG_EXTICR1_EXTI0 << (Line >> 16U), Port << (Line >> 
 657              		.loc 7 653 3 view .LVU204
 658 00fc 1B4B     		ldr	r3, .L8+8
 659 00fe 1A69     		ldr	r2, [r3, #16]
 660 0100 0F21     		movs	r1, #15
 661 0102 8A43     		bics	r2, r1
 662 0104 1A61     		str	r2, [r3, #16]
 663              	.LVL34:
 664              		.loc 7 653 3 is_stmt 0 view .LVU205
 665              	.LBE207:
 666              	.LBE206:
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   /**/
 527:Core/Src/main.c ****   LL_SYSCFG_SetEXTISource(LL_SYSCFG_EXTI_PORTA, LL_SYSCFG_EXTI_LINE9);
 667              		.loc 1 527 3 is_stmt 1 view .LVU206
 668              	.LBB208:
 669              	.LBI208:
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 670              		.loc 7 651 22 view .LVU207
 671              	.LBB209:
 672              		.loc 7 653 3 view .LVU208
 673 0106 1A69     		ldr	r2, [r3, #16]
 674 0108 E131     		adds	r1, r1, #225
 675 010a 8A43     		bics	r2, r1
 676 010c 1A61     		str	r2, [r3, #16]
 677              	.LVL35:
 678              		.loc 7 653 3 is_stmt 0 view .LVU209
 679              	.LBE209:
 680              	.LBE208:
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   /**/
 530:Core/Src/main.c ****   LL_GPIO_SetPinPull(KEY_B_GPIO_Port, KEY_B_Pin, LL_GPIO_PULL_NO);
 681              		.loc 1 530 3 is_stmt 1 view .LVU210
 682              	.LBB210:
 683              	.LBI210:
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 684              		.loc 6 477 22 view .LVU211
 685              	.LBB211:
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 686              		.loc 6 479 3 view .LVU212
 687 010e EB68     		ldr	r3, [r5, #12]
 688 0110 174A     		ldr	r2, .L8+12
 689 0112 9446     		mov	ip, r2
 690 0114 1340     		ands	r3, r2
 691 0116 EB60     		str	r3, [r5, #12]
 692              	.LVL36:
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 693              		.loc 6 479 3 is_stmt 0 view .LVU213
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 101


 694              	.LBE211:
 695              	.LBE210:
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /**/
 533:Core/Src/main.c ****   LL_GPIO_SetPinPull(KEY_A_GPIO_Port, KEY_A_Pin, LL_GPIO_PULL_NO);
 696              		.loc 1 533 3 is_stmt 1 view .LVU214
 697              	.LBB212:
 698              	.LBI212:
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 699              		.loc 6 477 22 view .LVU215
 700              	.LBB213:
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 701              		.loc 6 479 3 view .LVU216
 702 0118 E968     		ldr	r1, [r5, #12]
 703 011a 1648     		ldr	r0, .L8+16
 704 011c 0140     		ands	r1, r0
 705 011e E960     		str	r1, [r5, #12]
 706              	.LVL37:
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 707              		.loc 6 479 3 is_stmt 0 view .LVU217
 708              	.LBE213:
 709              	.LBE212:
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   /**/
 536:Core/Src/main.c ****   LL_GPIO_SetPinMode(KEY_B_GPIO_Port, KEY_B_Pin, LL_GPIO_MODE_INPUT);
 710              		.loc 1 536 3 is_stmt 1 view .LVU218
 711              	.LBB214:
 712              	.LBI214:
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 713              		.loc 6 269 22 view .LVU219
 714              	.LBB215:
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 715              		.loc 6 271 3 view .LVU220
 716 0120 2A68     		ldr	r2, [r5]
 717 0122 6346     		mov	r3, ip
 718 0124 1A40     		ands	r2, r3
 719 0126 2A60     		str	r2, [r5]
 720              	.LVL38:
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 721              		.loc 6 271 3 is_stmt 0 view .LVU221
 722              	.LBE215:
 723              	.LBE214:
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /**/
 539:Core/Src/main.c ****   LL_GPIO_SetPinMode(KEY_A_GPIO_Port, KEY_A_Pin, LL_GPIO_MODE_INPUT);
 724              		.loc 1 539 3 is_stmt 1 view .LVU222
 725              	.LBB216:
 726              	.LBI216:
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 727              		.loc 6 269 22 view .LVU223
 728              	.LBB217:
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 729              		.loc 6 271 3 view .LVU224
 730 0128 2B68     		ldr	r3, [r5]
 731 012a 0340     		ands	r3, r0
 732 012c 2B60     		str	r3, [r5]
 733              	.LVL39:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 102


 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 734              		.loc 6 271 3 is_stmt 0 view .LVU225
 735              	.LBE217:
 736              	.LBE216:
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   /**/
 542:Core/Src/main.c ****   EXTI_InitStruct.Line_0_31 = LL_EXTI_LINE_8;
 737              		.loc 1 542 3 is_stmt 1 view .LVU226
 738              		.loc 1 542 29 is_stmt 0 view .LVU227
 739 012e 8023     		movs	r3, #128
 740 0130 5B00     		lsls	r3, r3, #1
 741 0132 0A93     		str	r3, [sp, #40]
 543:Core/Src/main.c ****   EXTI_InitStruct.LineCommand = ENABLE;
 742              		.loc 1 543 3 is_stmt 1 view .LVU228
 743              		.loc 1 543 31 is_stmt 0 view .LVU229
 744 0134 3C71     		strb	r4, [r7, #4]
 544:Core/Src/main.c ****   EXTI_InitStruct.Mode = LL_EXTI_MODE_IT;
 745              		.loc 1 544 3 is_stmt 1 view .LVU230
 746              		.loc 1 544 24 is_stmt 0 view .LVU231
 747 0136 7E71     		strb	r6, [r7, #5]
 545:Core/Src/main.c ****   EXTI_InitStruct.Trigger = LL_EXTI_TRIGGER_FALLING;
 748              		.loc 1 545 3 is_stmt 1 view .LVU232
 749              		.loc 1 545 27 is_stmt 0 view .LVU233
 750 0138 4B46     		mov	r3, r9
 751 013a BB71     		strb	r3, [r7, #6]
 546:Core/Src/main.c ****   LL_EXTI_Init(&EXTI_InitStruct);
 752              		.loc 1 546 3 is_stmt 1 view .LVU234
 753 013c 3800     		movs	r0, r7
 754 013e FFF7FEFF 		bl	LL_EXTI_Init
 755              	.LVL40:
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****   /**/
 549:Core/Src/main.c ****   EXTI_InitStruct.Line_0_31 = LL_EXTI_LINE_9;
 756              		.loc 1 549 3 view .LVU235
 757              		.loc 1 549 29 is_stmt 0 view .LVU236
 758 0142 8023     		movs	r3, #128
 759 0144 9B00     		lsls	r3, r3, #2
 760 0146 0A93     		str	r3, [sp, #40]
 550:Core/Src/main.c ****   EXTI_InitStruct.LineCommand = ENABLE;
 761              		.loc 1 550 3 is_stmt 1 view .LVU237
 762              		.loc 1 550 31 is_stmt 0 view .LVU238
 763 0148 3C71     		strb	r4, [r7, #4]
 551:Core/Src/main.c ****   EXTI_InitStruct.Mode = LL_EXTI_MODE_IT;
 764              		.loc 1 551 3 is_stmt 1 view .LVU239
 765              		.loc 1 551 24 is_stmt 0 view .LVU240
 766 014a 7E71     		strb	r6, [r7, #5]
 552:Core/Src/main.c ****   EXTI_InitStruct.Trigger = LL_EXTI_TRIGGER_FALLING;
 767              		.loc 1 552 3 is_stmt 1 view .LVU241
 768              		.loc 1 552 27 is_stmt 0 view .LVU242
 769 014c 4B46     		mov	r3, r9
 770 014e BB71     		strb	r3, [r7, #6]
 553:Core/Src/main.c ****   LL_EXTI_Init(&EXTI_InitStruct);
 771              		.loc 1 553 3 is_stmt 1 view .LVU243
 772 0150 3800     		movs	r0, r7
 773 0152 FFF7FEFF 		bl	LL_EXTI_Init
 774              	.LVL41:
 554:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 103


 555:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 556:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 557:Core/Src/main.c **** }
 775              		.loc 1 557 1 is_stmt 0 view .LVU244
 776 0156 0DB0     		add	sp, sp, #52
 777              		@ sp needed
 778 0158 F0BC     		pop	{r4, r5, r6, r7}
 779 015a BB46     		mov	fp, r7
 780 015c B246     		mov	r10, r6
 781 015e A946     		mov	r9, r5
 782 0160 A046     		mov	r8, r4
 783 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 784              	.L9:
 785              		.align	2
 786              	.L8:
 787 0164 00100240 		.word	1073876992
 788 0168 00040050 		.word	1342178304
 789 016c 00000140 		.word	1073807360
 790 0170 FFFFFCFF 		.word	-196609
 791 0174 FFFFF3FF 		.word	-786433
 792              		.cfi_endproc
 793              	.LFE940:
 795              		.global	__aeabi_uidiv
 796              		.section	.text.MX_ADC_Init,"ax",%progbits
 797              		.align	1
 798              		.syntax unified
 799              		.code	16
 800              		.thumb_func
 802              	MX_ADC_Init:
 803              	.LFB935:
 197:Core/Src/main.c **** 
 804              		.loc 1 197 1 is_stmt 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 72
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808 0000 70B5     		push	{r4, r5, r6, lr}
 809              	.LCFI5:
 810              		.cfi_def_cfa_offset 16
 811              		.cfi_offset 4, -16
 812              		.cfi_offset 5, -12
 813              		.cfi_offset 6, -8
 814              		.cfi_offset 14, -4
 815 0002 92B0     		sub	sp, sp, #72
 816              	.LCFI6:
 817              		.cfi_def_cfa_offset 88
 203:Core/Src/main.c ****   LL_ADC_InitTypeDef ADC_InitStruct = {0};
 818              		.loc 1 203 3 view .LVU246
 203:Core/Src/main.c ****   LL_ADC_InitTypeDef ADC_InitStruct = {0};
 819              		.loc 1 203 26 is_stmt 0 view .LVU247
 820 0004 1422     		movs	r2, #20
 821 0006 0021     		movs	r1, #0
 822 0008 0DA8     		add	r0, sp, #52
 823 000a FFF7FEFF 		bl	memset
 824              	.LVL42:
 204:Core/Src/main.c **** 
 825              		.loc 1 204 3 is_stmt 1 view .LVU248
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 104


 826              		.loc 1 204 22 is_stmt 0 view .LVU249
 827 000e 1022     		movs	r2, #16
 828 0010 0021     		movs	r1, #0
 829 0012 09A8     		add	r0, sp, #36
 830 0014 FFF7FEFF 		bl	memset
 831              	.LVL43:
 206:Core/Src/main.c **** 
 832              		.loc 1 206 3 is_stmt 1 view .LVU250
 206:Core/Src/main.c **** 
 833              		.loc 1 206 23 is_stmt 0 view .LVU251
 834 0018 1822     		movs	r2, #24
 835 001a 0021     		movs	r1, #0
 836 001c 03A8     		add	r0, sp, #12
 837 001e FFF7FEFF 		bl	memset
 838              	.LVL44:
 209:Core/Src/main.c **** 
 839              		.loc 1 209 3 is_stmt 1 view .LVU252
 840              	.LBB218:
 841              	.LBI218:
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 842              		.loc 2 784 22 view .LVU253
 843              	.LBB219:
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 844              		.loc 2 786 3 view .LVU254
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 845              		.loc 2 787 3 view .LVU255
 846 0022 314B     		ldr	r3, .L13
 847 0024 596B     		ldr	r1, [r3, #52]
 848 0026 8020     		movs	r0, #128
 849 0028 8000     		lsls	r0, r0, #2
 850 002a 0143     		orrs	r1, r0
 851 002c 5963     		str	r1, [r3, #52]
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 852              		.loc 2 789 3 view .LVU256
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 853              		.loc 2 789 12 is_stmt 0 view .LVU257
 854 002e 5A6B     		ldr	r2, [r3, #52]
 855 0030 0240     		ands	r2, r0
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 856              		.loc 2 789 10 view .LVU258
 857 0032 0292     		str	r2, [sp, #8]
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 858              		.loc 2 790 3 is_stmt 1 view .LVU259
 859 0034 029A     		ldr	r2, [sp, #8]
 860              	.LVL45:
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 861              		.loc 2 790 3 is_stmt 0 view .LVU260
 862              	.LBE219:
 863              	.LBE218:
 211:Core/Src/main.c ****   /**ADC GPIO Configuration
 864              		.loc 1 211 3 is_stmt 1 view .LVU261
 865              	.LBB220:
 866              	.LBI220:
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 867              		.loc 2 985 22 view .LVU262
 868              	.LBB221:
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 105


 869              		.loc 2 987 3 view .LVU263
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 870              		.loc 2 988 3 view .LVU264
 871 0036 DA6A     		ldr	r2, [r3, #44]
 872 0038 0126     		movs	r6, #1
 873 003a 3243     		orrs	r2, r6
 874 003c DA62     		str	r2, [r3, #44]
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 875              		.loc 2 990 3 view .LVU265
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 876              		.loc 2 990 12 is_stmt 0 view .LVU266
 877 003e DB6A     		ldr	r3, [r3, #44]
 878 0040 3340     		ands	r3, r6
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 879              		.loc 2 990 10 view .LVU267
 880 0042 0193     		str	r3, [sp, #4]
 881              		.loc 2 991 3 is_stmt 1 view .LVU268
 882 0044 019B     		ldr	r3, [sp, #4]
 883              	.LVL46:
 884              		.loc 2 991 3 is_stmt 0 view .LVU269
 885              	.LBE221:
 886              	.LBE220:
 215:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 887              		.loc 1 215 3 is_stmt 1 view .LVU270
 215:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 888              		.loc 1 215 23 is_stmt 0 view .LVU271
 889 0046 0396     		str	r6, [sp, #12]
 216:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 890              		.loc 1 216 3 is_stmt 1 view .LVU272
 216:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 891              		.loc 1 216 24 is_stmt 0 view .LVU273
 892 0048 0323     		movs	r3, #3
 893 004a 0493     		str	r3, [sp, #16]
 217:Core/Src/main.c ****   LL_GPIO_Init(BATT_IN_GPIO_Port, &GPIO_InitStruct);
 894              		.loc 1 217 3 is_stmt 1 view .LVU274
 218:Core/Src/main.c **** 
 895              		.loc 1 218 3 view .LVU275
 896 004c 6138     		subs	r0, r0, #97
 897 004e FF38     		subs	r0, r0, #255
 898 0050 03A9     		add	r1, sp, #12
 899 0052 C005     		lsls	r0, r0, #23
 900 0054 FFF7FEFF 		bl	LL_GPIO_Init
 901              	.LVL47:
 226:Core/Src/main.c **** 
 902              		.loc 1 226 3 view .LVU276
 903              	.LBB222:
 904              	.LBI222:
 905              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @file    stm32l0xx_ll_adc.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * Copyright (c) 2016 STMicroelectronics.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 106


  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #ifndef __STM32L0xx_LL_ADC_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __STM32L0xx_LL_ADC_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #include "stm32l0xx.h"
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - regular trigger source                                                   */
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 107


  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (6U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTSE
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTE
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWDCH)
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26U)/* Value equivalent to POSITION_VAL(ADC_CHANNEL_ID
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FU) /* Equivalent to shift: (ADC_CHANNEL_NUMBE
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000U) /* Marker of internal channel */
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* channels literals definition.                                              */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000U)
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR1_AWDCH
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR1_AWDCH
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR1_AWDCH
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR1_AWDCH
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* channels literals definition.                                              */
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 108


 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(ADC_CCR_VLCDEN)
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000U)
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET)
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET)
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC registers bits positions */
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        (3U)  /* Value equivalent to POSITION_VAL(ADC_CFGR1_RES)
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_AWDS
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_TR_HT_BITOFFSET_POS            (16U) /* Value equivalent to POSITION_VAL(ADC_TR_HT) */
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    (0U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    (1U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    (2U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    (3U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    (4U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    (5U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    (6U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    (7U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    (8U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    (9U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(ADC_CCR_VLCDEN)
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 109


 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC registers bits groups */
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC internal channels related definitions */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FF80078U)) /* Internal voltage referenc
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3000U)                     /* Analog voltage reference 
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Temperature sensor */
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L011, calibration parameter TS_CAL1 is not available. */
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx)
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FF8007AU)) /* Internal temperature sens
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FF8007EU)) /* Internal temperature sens
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx)
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30U)                       /* Internal temperature sens
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130U)                      /* Internal temperature sens
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000U)                     /* Analog voltage reference 
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(USE_FULL_LL_DRIVER)
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and multimode
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sharing the same ADC common instance):
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 110


 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         disabled.
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC state:
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance must be disabled.
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         refer to description of each function for setting
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         conditioned to ADC state.
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note On this STM32 series, this parameter has some cl
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 111


 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (functions with prefix "REG").
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC state:
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance must be disabled.
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         refer to description of each function for setting
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         conditioned to ADC state.
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (several ADC channels enabled in group regular s
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              data preserved or overwritten.
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 112


 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD        /*!< ADC flag ADC analog watchdog 1 *
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWDIE      /*!< ADC interruption ADC analog watc
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* DMA transfer.                                                              */
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000U) /* ADC group regular conversion data reg
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000U)                               /*!< ADC asy
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 113


 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_FREQ_MODE  ADC common - Clock frequency mode
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_HIGH        (0x00000000U)/*!< ADC clock mode to high frequency. On S
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_LOW         (ADC_CCR_LFMEN)        /*!< ADC clock mode to low freque
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000U)/*!< ADC measurement paths all disabled */
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_TSEN)
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VLCD          (ADC_CCR_VLCDEN)       /*!< ADC measurement path to inte
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000U)                               /*!< ADC asy
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000U)             /*!< ADC resolution 12 bits */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 114


 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000U)/*!< ADC conversion data alignment: right a
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000U)             /*!< No ADC low power mode act
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001U) /*!< ADC group regular (available on all S
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< A
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 115


 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VLCD                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000U)                                           
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM21_CH2      (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM22_TRGO     (ADC_CFGR1_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC group regular external trigger TIM2_CC3 available only on              */
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* STM32L0 devices categories: Cat.1, Cat.2, Cat.5                            */
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (STM32L011xx) || defined (STM32L021xx) || \
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L031xx) || defined (STM32L041xx) || \
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L071xx) || defined (STM32L072xx) || defined (STM32L073xx) || \
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L081xx) || defined (STM32L082xx) || defined (STM32L083xx) || \
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L010x6) || defined (STM32L010x8) || defined (STM32L010xB)
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC group regular external trigger TIM21_TRGO available only on            */
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* STM32L0 devices categories: Cat.2, Cat.3, Cat.5                            */
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (STM32L031xx) || defined (STM32L041xx) || \
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L051xx) || defined (STM32L052xx) || defined (STM32L053xx) || \
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L062xx) || defined (STM32L063xx) || \
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L071xx) || defined (STM32L072xx) || defined (STM32L073xx) || \
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L081xx) || defined (STM32L082xx) || defined (STM32L083xx) || \
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L010x6) || defined (STM32L010x8) || defined (STM32L010xB)
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM21_TRGO     (LL_ADC_REG_TRIG_EXT_TIM22_TRGO)
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 116


 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** * @{
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000U)           /*!< ADC conversions are perform
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000U)                        /*!< ADC conversion
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN) /*!< ADC conversion
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN) /*!< ADC conversion
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** * @{
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000U)          /*!< ADC group regular behavior i
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000U)          /*!< ADC group regular sequencer 
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< ADC group regular sequencer 
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000U)                                           
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000U)                                         /*
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP_0)                                      /*
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP_1)                                      /*
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)                     /*
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP_2)                                      /*
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_0)                     /*
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1)                     /*
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)    /*
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 117


 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000U)                                           
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                    ADC
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)         | ADC
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VLCD_REG             ((LL_ADC_CHANNEL_VLCD       & ADC_CHANNEL_ID_MASK) | ADC
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR_HT            )     /*!< ADC analog watchdog thr
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (            ADC_TR_LT)     /*!< ADC analog watchdog thr
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR_HT | ADC_TR_LT)     /*!< ADC analog watchdog bot
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 118


 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000U)                               /*!< ADC ove
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                          ADC_CFGR2_OVSE)  /*!< ADC ove
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000U)          /*!< ADC oversampling discontinuo
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000U)                                           
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000U)                                           
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not timeout values.
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         above each literal definition.
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not timeout values.                                                  */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 119


 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       STM32 series:                                                         */
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 83/fADC.                    */
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         cycles                                                             */
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         configuration.                                                     */
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "tUP_LDO").                                                      */
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US (10U)              /*!< Delay for ADC stabilization tim
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "TADC_BUF").                                                     */
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: us                                                                   */
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       (10U)              /*!< Delay for internal voltage refer
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: us                                                                   */
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    (10U)              /*!< Delay for temperature sensor sta
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles            */
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (2U)             /*!< Delay required between ADC end o
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 120


 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Write a value in ADC register
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __REG__ Register to be written
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Read a value in ADC register
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __REG__ Register to be read
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Register value
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Example:
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will return decimal number "4".
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number is returned, either defined with number
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 121


 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0U)                                          
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                            
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                            
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                            
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0U) :                         
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         (                                                                                          
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1U) :                       
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           (                                                                                        
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2U) :                     
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             (                                                                                      
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3U) :                   
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               (                                                                                    
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4U) :                 
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 (                                                                                  
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5U) :               
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   (                                                                                
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6U) :             
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     (                                                                              
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7U) :           
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       (                                                                            
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8U) :         
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         (                                                                          
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9U) :       
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           (                                                                        
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10U) :  
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             (                                                                      
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11U) :
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               (                                                                    
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12U)
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 (                                                                  
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   (                                                                
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     (                                                              
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       (                                                            
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL16) == ADC_CHSELR_CHSEL16)
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         (                                                          
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL1
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           (                                                        
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                            (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSE
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                             (0U)                                                   
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           )                                                        
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         )                                                          
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       )                                                            
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     )                                                              
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   )                                                                
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 122


 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 )                                                                  
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               )                                                                    
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             )                                                                      
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           )                                                                        
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         )                                                                          
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       )                                                                            
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     )                                                                              
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   )                                                                                
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 )                                                                                  
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               )                                                                                    
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             )                                                                                      
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           )                                                                                        
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         )                                                                                          
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0U)                                          
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                            
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                            
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                            
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0U) :                         
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         (                                                                                          
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1U) :                       
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           (                                                                                        
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2U) :                     
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             (                                                                                      
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3U) :                   
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               (                                                                                    
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4U) :                 
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 (                                                                                  
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5U) :               
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   (                                                                                
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6U) :             
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     (                                                                              
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7U) :           
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       (                                                                            
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8U) :         
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         (                                                                          
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9U) :       
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           (                                                                        
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10U) :  
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             (                                                                      
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11U) :
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               (                                                                    
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12U)
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 (                                                                  
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   (                                                                
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     (                                                              
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       (                                                            
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL17)
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         (                                                          
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 123


 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSEL1
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           (0U)                                                     
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         )                                                          
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       )                                                            
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     )                                                              
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   )                                                                
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 )                                                                  
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               )                                                                    
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             )                                                                      
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           )                                                                        
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         )                                                                          
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       )                                                                            
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     )                                                                              
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   )                                                                                
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 )                                                                                  
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               )                                                                                    
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             )                                                                                      
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           )                                                                                        
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         )                                                                                          
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from number in decimal format.
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Example:
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)(2)
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 124


1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__))                                     \
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC internal channel:
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         returned from ADC registers,
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         parameters definitions of driver.
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0U)
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 125


1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a value defined from parameter definition of
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC registers.
1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 126


1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         returned from ADC registers,
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         parameters definitions of driver.
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VLCD)                                     \
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)                               \
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example:
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 127


1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
1223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
1224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)(2)
1225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
1239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (1)
1252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
1254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VLCD_REG             (1)
1257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
1262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 128


1264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         different of 12 bits.
1267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            (< ADCx param >,
1273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            );
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         different of 12 bits.
1290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            );
1297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__) \
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 129


1321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__AWD_THRESHOLD_TYPE__) == LL_ADC_AWD_THRESHOLD_LOW)                                 \
1322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                   \
1323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (__AWD_THRESHOLDS__) & LL_ADC_AWD_THRESHOLD_LOW                                    \
1324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                   \
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                   \
1326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                   \
1327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__AWD_THRESHOLDS__) >> ADC_TR_HT_BITOFFSET_POS) & LL_ADC_AWD_THRESHOLD_LOW       \
1328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                   \
1329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC common register instance
1340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (ADC1_COMMON)
1343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC common instance are disabled.
1347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         are disabled.
1358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled.
1360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (refer to reference manual).
1370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 130


1378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((0xFFFU) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))
1379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a resolution to another resolution.
1383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of to the data to be converted
1385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__, __ADC_RESOLUTION_CURRENT__, __ADC_RESOLUTION_TAR
1399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__DATA__)                                                                 \
1400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))   \
1401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U))      \
1402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                       (unit: digital value).
1413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       __ADC_DATA__,\
1422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
1423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         reference VrefInt.
1431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         connected to pin Vref+.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 131


1435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
1454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
1456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
1457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_12B)                  \
1458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L011, calibration parameter TS_CAL1 is not available. */
1461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro __LL_ADC_CALC_TEMPERATURE() is not available.*/
1462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().        */
1463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L010xx, temperature sensor is not available.          */
1464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro related to temperature sensor are            */
1465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not available.                                                       */
1466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx) && !defined(STM32L010xB) && !defined(STM32L010x8) && !defined(STM32L010x6
1467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calculation formula:
1473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  parameters are correct (address and data).
1485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  less accurate than calibrated values),
1488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 132


1492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
1495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor.
1498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                 sensor voltage has been measured.
1505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
1515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L010xx, temperature sensor is not available.          */
1528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro related to temperature sensor are            */
1529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not available.                                                       */
1530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L010xB) && !defined(STM32L010x8) && !defined(STM32L010x6) && !defined(STM32L010x4
1531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (refer to device datasheet).
1536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calculation formula:
1537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   (unit: digital value)
1541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  datasheet typical values.
1548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 133


1549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12bits
1558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                       On STM32L0, refer to device datasheet parameter "Avg_Slop
1562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                       On STM32L0, refer to device datasheet parameter "V130" (c
1564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
1581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((( (                                                                        \
1582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  * 1000)                                                       \
1585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        -                                                                       \
1586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  * 1000)                                                       \
1588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                        \
1589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ) / (__TEMPSENSOR_TYP_AVGSLOPE__)                                          \
1590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ) + (__TEMPSENSOR_CALX_TEMP__)                                              \
1591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 134


1606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example:
1624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC register address
1638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Prevent unused argument compilation warning */
1642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (void)Register;
1643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Retrieve address of register DR */
1645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t) & (ADCx->DR);
1646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 135


1663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
1695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 136


1720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock low frequency mode.
1723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_SetCommonFrequencyMode
1730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CommonFrequencyMode This parameter can be one of the following values:
1733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Commo
1738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_LFMEN, CommonFrequencyMode);
1740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock low frequency mode.
1744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_GetCommonFrequencyMode
1747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON)
1754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_LFMEN));
1756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
1760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
1762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor stabilization time.
1768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
1769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
1771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
1773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a sampling time minimum value is required.
1774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
1775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 137


1777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
1783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      VLCDEN         LL_ADC_SetCommonPathInternalCh
1784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR (2)
1790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VLCD (1)
1791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC_CCR_VLCDEN) && defined (ADC_CCR_TSEN)
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VLCDEN, PathInternal);
1800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #elif defined (ADC_CCR_TSEN)
1801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN, PathInternal);
1802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN, PathInternal);
1804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
1811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      VLCDEN         LL_ADC_GetCommonPathInternalCh
1816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR (2)
1822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VLCD (1)
1823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC_CCR_VLCDEN) && defined (ADC_CCR_TSEN)
1830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VLCDEN));
1831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #elif defined (ADC_CCR_TSEN)
1832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN));
1833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 138


1834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN));
1835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled.
1851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
1860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
1861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             cycle).
1866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             Refer to reference manual.
1867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
1872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
1885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
1886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             cycle).
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 139


1891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             Refer to reference manual.
1892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
1900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
1902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without having to perform a new calibration using
1903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
1904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
1907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on going on group regular.
1908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
1909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
1911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
1914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
1916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
1917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              CalibrationFactor);
1918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
1922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
1924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
1925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
1926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
1928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
1930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
1932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC resolution.
1936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
1943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
1945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 140


1948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
1952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
1954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC resolution.
1958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
1961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
1969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
1971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
1982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
1991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
1998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 141


2005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           in order to reduce power consumption.
2014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           has been retrieved by user software.
2017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           other conversion.
2019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           applications.
2023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           How to use this low power mode:
2024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             IRQ vector sequencer.
2027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC conversion start.
2032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
2034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC channel.
2044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 142


2062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           in order to reduce power consumption.
2069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           has been retrieved by user software.
2072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           other conversion.
2074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           applications.
2078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           How to use this low power mode:
2079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             IRQ vector sequencer.
2082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC conversion start.
2087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
2089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC channel.
2099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Sampling time common to all channels.
2118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 143


2119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         converted:
2121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         setting).
2124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TS_temp, ...).
2126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is required.
2135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
2136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_SetSamplingTimeCommonChannels
2141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTime)
2154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR, ADC_SMPR_SMP, SamplingTime);
2156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Sampling time common to all channels.
2163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this STM32 series.
2167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_GetSamplingTimeCommonChannels
2168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 144


2176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx)
2180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR, ADC_SMPR_SMP));
2182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
2186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
2190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         external interrupt line).
2196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         also set trigger polarity to rising edge
2198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM21_CH2
2215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM22_TRGO
2218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3 (*)
2219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (*) value not defined in all devices
2223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 145


2233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         external interrupt line).
2234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (equivalent to
2238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM21_CH2
2249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM22_TRGO
2252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3 (*)
2253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (*) value not defined in all devices
2257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
2259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
2265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return ((TriggerSource
2269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
2270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
2271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          );
2272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             or external.
2277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN));
2288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 146


2290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the default scan direction is forward.
2330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 147


2347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the default scan direction is forward.
2350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number of ranks.
2365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number of ranks.
2387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
2400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 148


2404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
2423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
2429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
2430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 149


2461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
2478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
2484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
2501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
2502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
2503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
2504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
2505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
2506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
2507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
2508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
2509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
2510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
2511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
2512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
2513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
2514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
2515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
2516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
2517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 150


2518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
2519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
 906              		.loc 8 2547 22 view .LVU277
 907              	.LBB223:
2548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
 908              		.loc 8 2551 3 view .LVU278
 909 0058 244C     		ldr	r4, .L13+4
 910 005a A36A     		ldr	r3, [r4, #40]
 911 005c 3343     		orrs	r3, r6
 912 005e A362     		str	r3, [r4, #40]
 913              	.LVL48:
 914              		.loc 8 2551 3 is_stmt 0 view .LVU279
 915              	.LBE223:
 916              	.LBE222:
 230:Core/Src/main.c ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 917              		.loc 1 230 3 is_stmt 1 view .LVU280
 230:Core/Src/main.c ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 918              		.loc 1 230 36 is_stmt 0 view .LVU281
 919 0060 0025     		movs	r5, #0
 920 0062 0D95     		str	r5, [sp, #52]
 231:Core/Src/main.c ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 921              		.loc 1 231 3 is_stmt 1 view .LVU282
 231:Core/Src/main.c ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 922              		.loc 1 231 39 is_stmt 0 view .LVU283
 923 0064 0E95     		str	r5, [sp, #56]
 232:Core/Src/main.c ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 151


 924              		.loc 1 232 3 is_stmt 1 view .LVU284
 232:Core/Src/main.c ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 925              		.loc 1 232 37 is_stmt 0 view .LVU285
 926 0066 0F95     		str	r5, [sp, #60]
 233:Core/Src/main.c ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 927              		.loc 1 233 3 is_stmt 1 view .LVU286
 233:Core/Src/main.c ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 928              		.loc 1 233 34 is_stmt 0 view .LVU287
 929 0068 1095     		str	r5, [sp, #64]
 234:Core/Src/main.c ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 930              		.loc 1 234 3 is_stmt 1 view .LVU288
 234:Core/Src/main.c ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 931              		.loc 1 234 30 is_stmt 0 view .LVU289
 932 006a 1195     		str	r5, [sp, #68]
 235:Core/Src/main.c ****   LL_ADC_SetSamplingTimeCommonChannels(ADC1, LL_ADC_SAMPLINGTIME_1CYCLE_5);
 933              		.loc 1 235 3 is_stmt 1 view .LVU290
 934 006c 0DA9     		add	r1, sp, #52
 935 006e 2000     		movs	r0, r4
 936 0070 FFF7FEFF 		bl	LL_ADC_REG_Init
 937              	.LVL49:
 236:Core/Src/main.c ****   LL_ADC_SetOverSamplingScope(ADC1, LL_ADC_OVS_DISABLE);
 938              		.loc 1 236 3 view .LVU291
 939              	.LBB224:
 940              	.LBI224:
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 941              		.loc 8 2153 22 view .LVU292
 942              	.LBB225:
2155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 943              		.loc 8 2155 3 view .LVU293
 944 0074 6369     		ldr	r3, [r4, #20]
 945 0076 0722     		movs	r2, #7
 946 0078 9343     		bics	r3, r2
 947 007a 6361     		str	r3, [r4, #20]
 948              	.LVL50:
2155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 949              		.loc 8 2155 3 is_stmt 0 view .LVU294
 950              	.LBE225:
 951              	.LBE224:
 237:Core/Src/main.c ****   LL_ADC_REG_SetSequencerScanDirection(ADC1, LL_ADC_REG_SEQ_SCAN_DIR_FORWARD);
 952              		.loc 1 237 3 is_stmt 1 view .LVU295
 953              	.LBB226:
 954              	.LBI226:
2552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
2556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
2562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 152


2567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
2579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
2580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
2581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
2582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
2583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
2584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
2585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
2586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
2587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
2588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
2589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
2590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
2591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
2592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
2593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
2594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
2595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
2596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
2597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 153


2624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
2626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
2634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
2637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
2653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
2655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
2656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
2657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
2658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
2659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
2660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
2661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
2662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
2663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
2664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
2665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
2666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
2667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
2668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
2669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
2670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
2671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
2672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
2673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 154


2681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
2701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ChannelsBitfield = READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
2703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return ((((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CHA
2705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_C
2706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_C
2707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_C
2708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_C
2709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_C
2710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_C
2711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_C
2712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_C
2713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_C
2714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_ADC
2715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_ADC
2716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_ADC
2717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_ADC
2718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_ADC
2719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_ADC
2720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
2721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_ADC
2722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
2723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_ADC
2724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_ADC
2725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          );
2726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
2729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           conversions launched successively automatically.
2733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 155


2738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
2740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
2742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
2747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
2749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
2753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           conversions launched successively automatically.
2757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
2758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
2764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
2766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
2770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode:
2773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions) is reached.
2776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions).
2780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode non-circular:
2783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
2786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
2793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
2794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 156


2795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
2796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
2798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
2802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
2804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
2808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode:
2811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions) is reached.
2814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions).
2818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode non-circular:
2821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
2824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
2827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
2828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
2832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
2835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
2837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
2841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         data preserved or overwritten.
2842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
2843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         other devices without this feature have a behavior
2844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         equivalent to data overwritten.
2845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
2846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
2847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
2848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 157


2852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
2853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
2855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
2860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
2862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
2866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         data preserved or overwritten.
2867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
2868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
2874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
2876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
2880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
2884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
2885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
2889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a single channel or all channels,
2890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on ADC group regular.
2891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
2892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled.
2893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
2894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
2895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
2896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
2897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
2898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
2903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_SetAnalogWDMonitChannels\n
2908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_SetAnalogWDMonitChannels\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 158


2909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_SetAnalogWDMonitChannels
2910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
2912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
2915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
2916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
2917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
2918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
2919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
2920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
2921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
2922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
2923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
2924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (1)
2931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
2933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
2934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
2935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VLCD_REG             (1)
2936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDChannelGroup)
2941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1,
2943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_AWDEN),
2944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (AWDChannelGroup & ADC_AWD_CR_ALL_CHANNEL_MASK));
2945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
2949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           as parameter for another function.
2957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           process the returned value with the helper macro
2959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
2961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           one channel.
2962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
2963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
2964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 159


2966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
2969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_GetAnalogWDMonitChannels\n
2974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_GetAnalogWDMonitChannels\n
2975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_GetAnalogWDMonitChannels
2976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
2981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
2982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
2983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
2984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
2985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
2986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
2987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
2988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
2989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
2990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
2997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
2999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx)
3001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelGroup = READ_BIT(ADCx->CFGR1, (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_
3003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Set variable according to channel definition including channel ID  */
3005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       with bitfield.                                                     */
3006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelSingle = ((AWDChannelGroup & ADC_CFGR1_AWDSGL) >> ADC_CFGR1_AWDSGL_BITOFFSET_P
3007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelBitField = (ADC_CHANNEL_0_BITFIELD << ((AWDChannelGroup & ADC_CHANNEL_ID_NUMBE
3008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (AWDChannelGroup | (AWDChannelBitField * AWDChannelSingle));
3010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
3014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         high and low.
3015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
3016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
3017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
3021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
3022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 160


3023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
3027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_ConfigAnalogWDThresholds\n
3032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_ConfigAnalogWDThresholds
3033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
3035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
3036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdHighVa
3039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
3041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_TR_HT | ADC_TR_LT,
3042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR_HT_BITOFFSET_POS) | AWDThresholdLowValue);
3043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         high or low.
3048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
3049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
3050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
3054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
3055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
3060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_SetAnalogWDThresholds\n
3065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_SetAnalogWDThresholds
3066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
3071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHighLow,
3074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
3076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
3077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low),      */
3078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* data is not shifted.                                                     */
3079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 161


3080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              AWDThresholdsHighLow,
3081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow >> ADC_TR_HT_BITOFFSET_POS) & ((uint32_t)0
3082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
3086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
3087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         concatenated.
3088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
3089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
3090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         using helper macro:
3091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
3092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_GetAnalogWDThresholds\n
3096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_GetAnalogWDThresholds
3097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
3102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHigh
3105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
3107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
3108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low or     */
3109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* both thresholds), data is not shifted.                                   */
3110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR,
3111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR_LT))
3112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     >> ((~AWDThresholdsHighLow) & (0x00000010U))
3113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    );
3114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
3121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
3126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
3131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
3133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 162


3137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
 955              		.loc 8 3137 22 view .LVU296
 956              	.LBB227:
3138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
 957              		.loc 8 3139 3 view .LVU297
 958 007c 2369     		ldr	r3, [r4, #16]
 959 007e B343     		bics	r3, r6
 960 0080 2361     		str	r3, [r4, #16]
 961              	.LVL51:
 962              		.loc 8 3139 3 is_stmt 0 view .LVU298
 963              	.LBE227:
 964              	.LBE226:
 238:Core/Src/main.c ****   LL_ADC_SetCommonFrequencyMode(__LL_ADC_COMMON_INSTANCE(ADC1), LL_ADC_CLOCK_FREQ_MODE_HIGH);
 965              		.loc 1 238 3 is_stmt 1 view .LVU299
 966              	.LBB228:
 967              	.LBI228:
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 968              		.loc 8 2341 22 view .LVU300
 969              	.LBB229:
2343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 970              		.loc 8 2343 3 view .LVU301
 971 0082 E368     		ldr	r3, [r4, #12]
 972 0084 033A     		subs	r2, r2, #3
 973 0086 9343     		bics	r3, r2
 974 0088 E360     		str	r3, [r4, #12]
 975              	.LVL52:
2343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 976              		.loc 8 2343 3 is_stmt 0 view .LVU302
 977              	.LBE229:
 978              	.LBE228:
 239:Core/Src/main.c ****   LL_ADC_DisableIT_EOC(ADC1);
 979              		.loc 1 239 3 is_stmt 1 view .LVU303
 980              	.LBB230:
 981              	.LBI230:
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 982              		.loc 8 1737 22 view .LVU304
 983              	.LBB231:
1739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 984              		.loc 8 1739 3 view .LVU305
 985 008a 1949     		ldr	r1, .L13+8
 986 008c 0B68     		ldr	r3, [r1]
 987 008e 1948     		ldr	r0, .L13+12
 988 0090 0340     		ands	r3, r0
 989 0092 0B60     		str	r3, [r1]
 990              	.LVL53:
1739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 991              		.loc 8 1739 3 is_stmt 0 view .LVU306
 992              	.LBE231:
 993              	.LBE230:
 240:Core/Src/main.c ****   LL_ADC_DisableIT_EOS(ADC1);
 994              		.loc 1 240 3 is_stmt 1 view .LVU307
 995              	.LBB232:
 996              	.LBI232:
3140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 163


3143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
3144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
3145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
3151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
3153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
3157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on the selected ADC group.
3158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           are done from 1 trigger)
3161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           needs a trigger)
3163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
3168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
3170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
3171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
3172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
3175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
3177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
3181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on the selected ADC group.
3182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           are done from 1 trigger)
3185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           needs a trigger)
3187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
3188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
3191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
3192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
3194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
3196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 164


3200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
3201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ratio
3202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - shift
3203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
3208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
3209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
3211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
3212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
3213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
3214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
3215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
3216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
3217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
3218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
3219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
3220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
3221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
3222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
3223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
3224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
3225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
3226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
3227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
3228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
3229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
3232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
3234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
3238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
3239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
3241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
3242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
3243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
3244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
3245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
3246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
3247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
3248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
3249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
3251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
3253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 165


3257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
3258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
3260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
3261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
3262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
3263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
3264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
3265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
3266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
3267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
3268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
3269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
3271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
3273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
3280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
3285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
3286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the voltage regulator:
3287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by enabling it manually
3288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
3289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by launching a calibration
3290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
3291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by enabling the ADC
3292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
3293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
3294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
3295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
3296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tUP_LDO".
3297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
3298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
3302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
3306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
3313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 166


3314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
3317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
3321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
3325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
3327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
3331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
3332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
3334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
3336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN));
3338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
3342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
3343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
3344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion start.
3345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
3346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
3352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
3353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
3357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADEN);
3364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
3368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 167


3371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
3373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
3377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADDIS);
3384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
3388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
3392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
3394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
3396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN));
3398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
3402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
3403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
3405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
3407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS));
3409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
3413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
3415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
3416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
3417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
3418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
3419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         during calibration:
3420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Calibration factor is available in data register
3421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and also transferred by DMA.
3422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
3423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
3424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         calibration.
3425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
3426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
3427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 168


3428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
3429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
3433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
3437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADCAL);
3444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
3448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
3449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
3451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
3453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL));
3455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
3462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
3467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
3468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
3469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
3470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           starts immediately.
3471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
3472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
3473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           following the ADC start conversion command.
3474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
3477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
3478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without ADC disable command on going.
3479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
3480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
3484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 169


3485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADSTART);
3491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
3495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
3498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without ADC disable command on going.
3499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
3500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
3504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADSTP);
3511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
3515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
3516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
3518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
3520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART));
3522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
3526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
3527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
3529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
3531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP));
3533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
3538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         all oversampling increased data width (for devices
3539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with feature oversampling).
3540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
3541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 170


3542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
3543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
3545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 12 bits.
3552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
3556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
3560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 10 bits.
3567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
3571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
3573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
3575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 8 bits.
3582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
3586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
3588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
3590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 6 bits.
3597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 171


3599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
3601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
3603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
3605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
3614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC ready.
3619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
3623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
3627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY));
3629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
3633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
3634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
3638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC));
3640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
3644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSEQ          LL_ADC_IsActiveFlag_EOS
3645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
3649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS));
3651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
3655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 172


3656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
3660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR));
3662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
3666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
3667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
3671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP));
3673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
3677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      AWD            LL_ADC_IsActiveFlag_AWD1
3678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
3682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1));
3684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
3688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
3689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(ADC_TypeDef *ADCx)
3693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL));
3695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
3699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
3703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
3707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
3709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 173


3713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
3714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
3718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
3720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
3724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSEQ          LL_ADC_ClearFlag_EOS
3725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
3729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
3731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
3735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
3736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
3740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
3742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
3746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
3747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
3751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
3753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
3757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      AWD            LL_ADC_ClearFlag_AWD1
3758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
3762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
3764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
3768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
3769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 174


3770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
3773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
3775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
3782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC ready.
3787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
3788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
3792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
3794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
3798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
3799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
3803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
3805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
3809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOSEQIE        LL_ADC_EnableIT_EOS
3810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
3814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
3816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
3820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
3821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
3825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 175


3827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
3831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
3832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
3836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
3838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
3842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      AWDIE          LL_ADC_EnableIT_AWD1
3843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
3847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
3849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
3853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
3854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
3858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
3860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
3864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
3865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
3869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
3871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
3875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
3876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
 997              		.loc 8 3879 22 view .LVU308
 998              	.LBB233:
3880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 176


 999              		.loc 8 3881 3 view .LVU309
 1000 0094 6368     		ldr	r3, [r4, #4]
 1001 0096 9343     		bics	r3, r2
 1002 0098 6360     		str	r3, [r4, #4]
 1003              	.LVL54:
 1004              		.loc 8 3881 3 is_stmt 0 view .LVU310
 1005              	.LBE233:
 1006              	.LBE232:
 241:Core/Src/main.c ****   ADC_InitStruct.Clock = LL_ADC_CLOCK_SYNC_PCLK_DIV1;
 1007              		.loc 1 241 3 is_stmt 1 view .LVU311
 1008              	.LBB234:
 1009              	.LBI234:
3882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
3886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOSEQIE        LL_ADC_DisableIT_EOS
3887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
 1010              		.loc 8 3890 22 view .LVU312
 1011              	.LBB235:
3891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
 1012              		.loc 8 3892 3 view .LVU313
 1013 009a 6368     		ldr	r3, [r4, #4]
 1014 009c 0432     		adds	r2, r2, #4
 1015 009e 9343     		bics	r3, r2
 1016 00a0 6360     		str	r3, [r4, #4]
 1017              	.LVL55:
 1018              		.loc 8 3892 3 is_stmt 0 view .LVU314
 1019              	.LBE235:
 1020              	.LBE234:
 242:Core/Src/main.c ****   ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 1021              		.loc 1 242 3 is_stmt 1 view .LVU315
 242:Core/Src/main.c ****   ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 1022              		.loc 1 242 24 is_stmt 0 view .LVU316
 1023 00a2 C023     		movs	r3, #192
 1024 00a4 1B06     		lsls	r3, r3, #24
 1025 00a6 0993     		str	r3, [sp, #36]
 243:Core/Src/main.c ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 1026              		.loc 1 243 3 is_stmt 1 view .LVU317
 243:Core/Src/main.c ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 1027              		.loc 1 243 29 is_stmt 0 view .LVU318
 1028 00a8 0A95     		str	r5, [sp, #40]
 244:Core/Src/main.c ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 1029              		.loc 1 244 3 is_stmt 1 view .LVU319
 244:Core/Src/main.c ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 1030              		.loc 1 244 32 is_stmt 0 view .LVU320
 1031 00aa 0B95     		str	r5, [sp, #44]
 245:Core/Src/main.c ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 1032              		.loc 1 245 3 is_stmt 1 view .LVU321
 245:Core/Src/main.c ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 1033              		.loc 1 245 31 is_stmt 0 view .LVU322
 1034 00ac 0C95     		str	r5, [sp, #48]
 246:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 177


 1035              		.loc 1 246 3 is_stmt 1 view .LVU323
 1036 00ae 09A9     		add	r1, sp, #36
 1037 00b0 2000     		movs	r0, r4
 1038 00b2 FFF7FEFF 		bl	LL_ADC_Init
 1039              	.LVL56:
 249:Core/Src/main.c ****   /* Delay for ADC internal voltage regulator stabilization. */
 1040              		.loc 1 249 3 view .LVU324
 1041              	.LBB236:
 1042              	.LBI236:
3305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 1043              		.loc 8 3305 22 view .LVU325
 1044              	.LBB237:
3310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1045              		.loc 8 3310 3 view .LVU326
 1046 00b6 A368     		ldr	r3, [r4, #8]
 1047 00b8 0F4A     		ldr	r2, .L13+16
 1048 00ba 1A40     		ands	r2, r3
 1049 00bc 8023     		movs	r3, #128
 1050 00be 5B05     		lsls	r3, r3, #21
 1051 00c0 1343     		orrs	r3, r2
 1052 00c2 A360     		str	r3, [r4, #8]
 1053              	.LVL57:
3310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1054              		.loc 8 3310 3 is_stmt 0 view .LVU327
 1055              	.LBE237:
 1056              	.LBE236:
 256:Core/Src/main.c ****   wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US * (SystemCoreClock / (100000 * 2))) / 10)
 1057              		.loc 1 256 3 is_stmt 1 view .LVU328
 257:Core/Src/main.c ****   while(wait_loop_index != 0)
 1058              		.loc 1 257 3 view .LVU329
 257:Core/Src/main.c ****   while(wait_loop_index != 0)
 1059              		.loc 1 257 78 is_stmt 0 view .LVU330
 1060 00c4 0D4B     		ldr	r3, .L13+20
 1061 00c6 1868     		ldr	r0, [r3]
 1062 00c8 0D49     		ldr	r1, .L13+24
 1063 00ca FFF7FEFF 		bl	__aeabi_uidiv
 1064              	.LVL58:
 1065 00ce 0300     		movs	r3, r0
 257:Core/Src/main.c ****   while(wait_loop_index != 0)
 1066              		.loc 1 257 59 view .LVU331
 1067 00d0 8000     		lsls	r0, r0, #2
 1068 00d2 C018     		adds	r0, r0, r3
 1069 00d4 4000     		lsls	r0, r0, #1
 257:Core/Src/main.c ****   while(wait_loop_index != 0)
 1070              		.loc 1 257 19 view .LVU332
 1071 00d6 0A21     		movs	r1, #10
 1072 00d8 FFF7FEFF 		bl	__aeabi_uidiv
 1073              	.LVL59:
 258:Core/Src/main.c ****   {
 1074              		.loc 1 258 3 is_stmt 1 view .LVU333
 258:Core/Src/main.c ****   {
 1075              		.loc 1 258 8 is_stmt 0 view .LVU334
 1076 00dc 00E0     		b	.L11
 1077              	.L12:
 260:Core/Src/main.c ****   }
 1078              		.loc 1 260 5 is_stmt 1 view .LVU335
 260:Core/Src/main.c ****   }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 178


 1079              		.loc 1 260 20 is_stmt 0 view .LVU336
 1080 00de 0138     		subs	r0, r0, #1
 1081              	.LVL60:
 1082              	.L11:
 258:Core/Src/main.c ****   {
 1083              		.loc 1 258 8 is_stmt 1 view .LVU337
 1084 00e0 0028     		cmp	r0, #0
 1085 00e2 FCD1     		bne	.L12
 266:Core/Src/main.c **** 
 1086              		.loc 1 266 1 is_stmt 0 view .LVU338
 1087 00e4 12B0     		add	sp, sp, #72
 1088              		@ sp needed
 1089 00e6 70BD     		pop	{r4, r5, r6, pc}
 1090              	.L14:
 1091              		.align	2
 1092              	.L13:
 1093 00e8 00100240 		.word	1073876992
 1094 00ec 00240140 		.word	1073816576
 1095 00f0 08270140 		.word	1073817352
 1096 00f4 FFFFFFFD 		.word	-33554433
 1097 00f8 E8FFFF6F 		.word	1879048168
 1098 00fc 00000000 		.word	SystemCoreClock
 1099 0100 400D0300 		.word	200000
 1100              		.cfi_endproc
 1101              	.LFE935:
 1103              		.section	.text.MX_RTC_Init,"ax",%progbits
 1104              		.align	1
 1105              		.syntax unified
 1106              		.code	16
 1107              		.thumb_func
 1109              	MX_RTC_Init:
 1110              	.LFB938:
 337:Core/Src/main.c **** 
 1111              		.loc 1 337 1 is_stmt 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 16
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115 0000 30B5     		push	{r4, r5, lr}
 1116              	.LCFI7:
 1117              		.cfi_def_cfa_offset 12
 1118              		.cfi_offset 4, -12
 1119              		.cfi_offset 5, -8
 1120              		.cfi_offset 14, -4
 1121 0002 85B0     		sub	sp, sp, #20
 1122              	.LCFI8:
 1123              		.cfi_def_cfa_offset 32
 343:Core/Src/main.c **** 
 1124              		.loc 1 343 3 view .LVU340
 343:Core/Src/main.c **** 
 1125              		.loc 1 343 22 is_stmt 0 view .LVU341
 1126 0004 0C22     		movs	r2, #12
 1127 0006 0021     		movs	r1, #0
 1128 0008 01A8     		add	r0, sp, #4
 1129 000a FFF7FEFF 		bl	memset
 1130              	.LVL61:
 346:Core/Src/main.c **** 
 1131              		.loc 1 346 3 is_stmt 1 view .LVU342
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 179


 1132              	.LBB238:
 1133              	.LBI238:
 1134              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @file    stm32l0xx_ll_rcc.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * This software is licensed under terms that can be found in the LICENSE file in
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   ******************************************************************************
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #ifndef __STM32L0xx_LL_RCC_H
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __STM32L0xx_LL_RCC_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #ifdef __cplusplus
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** extern "C" {
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #include "stm32l0xx.h"
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @addtogroup STM32L0xx_LL_Driver
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC)
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Variables RCC Private Variables
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Constants RCC Private Constants
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 180


  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** typedef struct
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   uint32_t PCLK2_Frequency;         /*!< PCLK2 clock frequency */
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *           HW set-up.
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define HSE_VALUE    (8000000U)  /*!< Value of the HSE oscillator in Hz */
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* HSE_VALUE */
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 181


 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define HSI_VALUE    (16000000U) /*!< Value of the HSI oscillator in Hz */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* HSI_VALUE */
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LSE_VALUE    (32768U)    /*!< Value of the LSE oscillator in Hz */
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* LSE_VALUE */
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LSI_VALUE    (37000U)    /*!< Value of the LSI oscillator in Hz */
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* LSI_VALUE */
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (HSI48_VALUE)
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define HSI48_VALUE  (48000000U) /*!< Value of the HSI48 oscillator in Hz */
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* HSI48_VALUE */
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_LSIRDYC                RCC_CICR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_LSERDYC                RCC_CICR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_HSIRDYC                RCC_CICR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_HSERDYC                RCC_CICR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_PLLRDYC                RCC_CICR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_MSIRDYC                RCC_CICR_MSIRDYC     /*!< MSI Ready Interrupt Clear */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_HSI48RDYC               RCC_CICR_HSI48RDYC  /*!< HSI48 Ready Interrupt Clear */
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_LSECSSC                RCC_CICR_LSECSSC     /*!< LSE Clock Security System Inte
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_CSSC                   RCC_CICR_CSSC        /*!< Clock Security System Interrup
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_LSIRDYF                RCC_CIFR_LSIRDYF     /*!< LSI Ready Interrupt flag */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_LSERDYF                RCC_CIFR_LSERDYF     /*!< LSE Ready Interrupt flag */
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_HSIRDYF                RCC_CIFR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_HSERDYF                RCC_CIFR_HSERDYF     /*!< HSE Ready Interrupt flag */
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_PLLRDYF                RCC_CIFR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_MSIRDYF                RCC_CIFR_MSIRDYF     /*!< MSI Ready Interrupt flag */
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_HSI48RDYF               RCC_CIFR_HSI48RDYF  /*!< HSI48 Ready Interrupt flag */
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_LSECSSF                RCC_CIFR_LSECSSF    /*!< LSE Clock Security System Inter
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_CSSF                   RCC_CIFR_CSSF       /*!< Clock Security System Interrupt
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_FWRSTF                 RCC_CSR_FWRSTF          /*!< Firewall reset flag */
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_OBLRSTF                RCC_CSR_OBLRSTF         /*!< OBL reset flag */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 182


 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                RCC_CSR_PINRSTF         /*!< PIN reset flag */
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_PORRSTF                RCC_CSR_PORRSTF         /*!< POR/PDR reset flag */
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                RCC_CSR_SFTRSTF         /*!< Software Reset flag */
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF               RCC_CSR_IWDGRSTF        /*!< Independent Watchdog reset f
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF               RCC_CSR_WWDGRSTF        /*!< Window watchdog reset flag *
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF               RCC_CSR_LPWRRSTF        /*!< Low-Power reset flag */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_LSIRDYIE               RCC_CIER_LSIRDYIE      /*!< LSI Ready Interrupt Enable *
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_LSERDYIE               RCC_CIER_LSERDYIE      /*!< LSE Ready Interrupt Enable *
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_HSIRDYIE               RCC_CIER_HSIRDYIE      /*!< HSI Ready Interrupt Enable *
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_HSERDYIE               RCC_CIER_HSERDYIE      /*!< HSE Ready Interrupt Enable *
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_PLLRDYIE               RCC_CIER_PLLRDYIE      /*!< PLL Ready Interrupt Enable *
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_MSIRDYIE               RCC_CIER_MSIRDYIE      /*!< MSI Ready Interrupt Enable *
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_HSI48RDYIE              RCC_CIER_HSI48RDYIE   /*!< HSI48 Ready Interrupt Enable
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_LSECSSIE               RCC_CIER_LSECSSIE      /*!< LSE CSS Interrupt Enable */
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSEDRIVE  LSE oscillator drive capability
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_LOW                (0x00000000U) /*!< Xtal mode lower driving capability */
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMLOW          RCC_CSR_LSEDRV_0 /*!< Xtal mode medium low driving capab
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMHIGH         RCC_CSR_LSEDRV_1 /*!< Xtal mode medium high driving capa
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_HIGH               RCC_CSR_LSEDRV   /*!< Xtal mode higher driving capabilit
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_HSE_DIV RTC HSE Prescaler
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_2               0x00000000U          /*!< HSE is divided by 2 for RTC cl
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_4               RCC_CR_RTCPRE_0      /*!< HSE is divided by 4 for RTC cl
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_8               RCC_CR_RTCPRE_1      /*!< HSE is divided by 8 for RTC cl
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_16              RCC_CR_RTCPRE        /*!< HSE is divided by 16 for RTC c
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MSIRANGE  MSI clock ranges
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_0                  RCC_ICSCR_MSIRANGE_0  /*!< MSI = 65.536 KHz */
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_1                  RCC_ICSCR_MSIRANGE_1  /*!< MSI = 131.072 KHz*/
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_2                  RCC_ICSCR_MSIRANGE_2  /*!< MSI = 262.144 KHz */
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_3                  RCC_ICSCR_MSIRANGE_3  /*!< MSI = 524.288 KHz */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 183


 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_4                  RCC_ICSCR_MSIRANGE_4  /*!< MSI = 1.048 MHz */
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_5                  RCC_ICSCR_MSIRANGE_5  /*!< MSI = 2.097 MHz */
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_6                  RCC_ICSCR_MSIRANGE_6  /*!< MSI = 4.194 MHz */
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_MSI           RCC_CFGR_SW_MSI    /*!< MSI selection as system clock */
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_MSI    RCC_CFGR_SWS_MSI   /*!< MSI used as system clock */
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE1_DIV1  /*!< HCLK not divided */
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE1_DIV2  /*!< HCLK divided by 2 */
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE1_DIV4  /*!< HCLK divided by 4 */
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE1_DIV8  /*!< HCLK divided by 8 */
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE1_DIV16 /*!< HCLK divided by 16 */
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 184


 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB2_DIV  APB high-speed prescaler (APB2)
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_1                  RCC_CFGR_PPRE2_DIV1  /*!< HCLK not divided */
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_2                  RCC_CFGR_PPRE2_DIV2  /*!< HCLK divided by 2 */
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_4                  RCC_CFGR_PPRE2_DIV4  /*!< HCLK divided by 4 */
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_8                  RCC_CFGR_PPRE2_DIV8  /*!< HCLK divided by 8 */
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_16                 RCC_CFGR_PPRE2_DIV16 /*!< HCLK divided by 16 */
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_STOP_WAKEUPCLOCK  Wakeup from Stop and CSS backup clock selection
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_STOP_WAKEUPCLOCK_MSI        (0x00000000U) /*!< MSI selection after wake-up from STOP
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_STOP_WAKEUPCLOCK_HSI        RCC_CFGR_STOPWUCK       /*!< HSI selection after wake-up
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1SOURCE  MCO1 SOURCE selection
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_NOCLOCK          RCC_CFGR_MCOSEL_NOCLOCK      /*!< MCO output disabled, n
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_SYSCLK           RCC_CFGR_MCOSEL_SYSCLK       /*!< SYSCLK selection as MC
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              RCC_CFGR_MCOSEL_HSI          /*!< HSI selection as MCO s
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_MSI              RCC_CFGR_MCOSEL_MSI          /*!< MSI selection as MCO s
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              RCC_CFGR_MCOSEL_HSE          /*!< HSE selection as MCO s
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSI              RCC_CFGR_MCOSEL_LSI          /*!< LSI selection as MCO s
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSE              RCC_CFGR_MCOSEL_LSE          /*!< LSE selection as MCO s
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOSEL_HSI48)
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI48            RCC_CFGR_MCOSEL_HSI48        /*!< HSI48 selection as MCO
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOSEL_HSI48 */
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK           RCC_CFGR_MCOSEL_PLL          /*!< PLLCLK selection as MC
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1_DIV  MCO1 prescaler
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_1                  RCC_CFGR_MCOPRE_DIV1  /*!< MCO Clock divided by 1  */
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_2                  RCC_CFGR_MCOPRE_DIV2  /*!< MCO Clock divided by 2  */
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_4                  RCC_CFGR_MCOPRE_DIV4  /*!< MCO Clock divided by 4  */
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_8                  RCC_CFGR_MCOPRE_DIV8  /*!< MCO Clock divided by 8  */
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_16                 RCC_CFGR_MCOPRE_DIV16 /*!< MCO Clock divided by 16 */
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         0x00000000U      /*!< No clock enabled for the periphera
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         0xFFFFFFFFU      /*!< Frequency cannot be provided as ex
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 185


 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1_CLKSOURCE  Peripheral USART clock source selection
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_USART1SEL)
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_PCLK2      (uint32_t)((RCC_CCIPR_USART1SEL << 16U) | 0x00000000U)  
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_SYSCLK     (uint32_t)((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USAR
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_HSI        (uint32_t)((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USAR
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_LSE        (uint32_t)((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USAR
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_USART1SEL */
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_PCLK1      (uint32_t)((RCC_CCIPR_USART2SEL << 16U) | 0x00000000U)  
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_SYSCLK     (uint32_t)((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USAR
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_HSI        (uint32_t)((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USAR
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_LSE        (uint32_t)((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USAR
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPUART1_CLKSOURCE  Peripheral LPUART clock source selection
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_PCLK1     0x00000000U   /*!< PCLK1 selected as LPUART1 clock */
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_SYSCLK    RCC_CCIPR_LPUART1SEL_0  /*!< SYSCLK selected as LPUART1 
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_HSI       RCC_CCIPR_LPUART1SEL_1  /*!< HSI selected as LPUART1 clo
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_LSE       RCC_CCIPR_LPUART1SEL    /*!< LSE selected as LPUART1 clo
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1_CLKSOURCE  Peripheral I2C clock source selection
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_PCLK1        (uint32_t)((RCC_CCIPR_I2C1SEL << 4U) | (0x00000000U >> 4
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_SYSCLK       (uint32_t)((RCC_CCIPR_I2C1SEL << 4U) | (RCC_CCIPR_I2C1SE
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_HSI          (uint32_t)((RCC_CCIPR_I2C1SEL << 4U) | (RCC_CCIPR_I2C1SE
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_I2C3SEL)
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_PCLK1        (uint32_t)((RCC_CCIPR_I2C3SEL << 4U) | (0x00000000U >> 4
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_SYSCLK       (uint32_t)((RCC_CCIPR_I2C3SEL << 4U) | (RCC_CCIPR_I2C3SE
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_HSI          (uint32_t)((RCC_CCIPR_I2C3SEL << 4U) | (RCC_CCIPR_I2C3SE
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /*RCC_CCIPR_I2C3SEL*/
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1_CLKSOURCE  Peripheral LPTIM clock source selection
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_PCLK1      (0x00000000U)          /*!< PCLK1 selected as LPTIM1 clo
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSI        RCC_CCIPR_LPTIM1SEL_0  /*!< LSI selected as LPTIM1 clock
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_HSI        RCC_CCIPR_LPTIM1SEL_1  /*!< HSI selected as LPTIM1 clock
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSE        RCC_CCIPR_LPTIM1SEL    /*!< LSE selected as LPTIM1 clock
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 186


 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_HSI48SEL)
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RNG)
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG_CLKSOURCE  Peripheral RNG clock source selection
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_PLL           (0x00000000U)          /*!< PLL selected as RNG clock */
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_HSI48         RCC_CCIPR_HSI48SEL   /*!< HSI48 selected as RNG clock*/
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RNG */
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USB)
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE  Peripheral USB clock source selection
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL           (0x00000000U)          /*!< PLL selected as USB clock */
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_HSI48         RCC_CCIPR_HSI48SEL   /*!< HSI48 selected as USB clock*/
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USB */
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_HSI48SEL */
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1 Peripheral USART get clock source
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_USART1SEL)
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE            RCC_CCIPR_USART1SEL    /*!< USART1 clock source selectio
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_USART1SEL */
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE            RCC_CCIPR_USART2SEL    /*!< USART2 clock source selectio
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPUART1 Peripheral LPUART get clock source
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE           RCC_CCIPR_LPUART1SEL   /*!< LPUART1 clock source selecti
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1 Peripheral I2C get clock source
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE              RCC_CCIPR_I2C1SEL   /*!< I2C1 clock source selection bit
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_I2C3SEL)
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE              RCC_CCIPR_I2C3SEL   /*!< I2C3 clock source selection bit
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /*RCC_CCIPR_I2C3SEL*/
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 187


 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1 Peripheral LPTIM get clock source
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE            RCC_CCIPR_LPTIM1SEL  /*!< LPTIM1 clock source selection 
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_HSI48SEL)
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RNG)
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG  Peripheral RNG get clock source
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE               RCC_CCIPR_HSI48SEL   /*!< HSI48 RC clock source selectio
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RNG */
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USB)
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB  Peripheral USB get clock source
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               RCC_CCIPR_HSI48SEL  /*!< HSI48 RC clock source selection
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USB */
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_HSI48SEL */
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          0x00000000U         /*!< No clock used as RTC clock */
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_CSR_RTCSEL_LSE            /*!< LSE oscillator clock 
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_CSR_RTCSEL_LSI            /*!< LSI oscillator clock 
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE           RCC_CSR_RTCSEL_HSE            /*!< HSE oscillator clock 
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****                                                                              (selection through @re
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_MUL PLL Multiplicator factor
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_3                   RCC_CFGR_PLLMUL3  /*!< PLL input clock * 3  */
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_4                   RCC_CFGR_PLLMUL4  /*!< PLL input clock * 4  */
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6                   RCC_CFGR_PLLMUL6  /*!< PLL input clock * 6  */
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_8                   RCC_CFGR_PLLMUL8  /*!< PLL input clock * 8  */
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_12                  RCC_CFGR_PLLMUL12 /*!< PLL input clock * 12 */
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_16                  RCC_CFGR_PLLMUL16 /*!< PLL input clock * 16 */
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_24                  RCC_CFGR_PLLMUL24 /*!< PLL input clock * 24 */
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_32                  RCC_CFGR_PLLMUL32 /*!< PLL input clock * 32 */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 188


 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_48                  RCC_CFGR_PLLMUL48 /*!< PLL input clock * 48 */
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_DIV PLL division factor
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_DIV_2                   RCC_CFGR_PLLDIV2 /*!< PLL clock output = PLLVCO / 2 */
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_DIV_3                   RCC_CFGR_PLLDIV3 /*!< PLL clock output = PLLVCO / 3 */
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_DIV_4                   RCC_CFGR_PLLDIV4 /*!< PLL clock output = PLLVCO / 4 */
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE PLL SOURCE
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI               RCC_CFGR_PLLSRC_HSI                           /*!< HSI c
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_CFGR_PLLSRC_HSE                           /*!< HSE c
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Write a value in RCC register
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __REG__ Register to be written
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, (__VALUE__))
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Read a value in RCC register
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __REG__ Register to be read
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Register value
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 189


 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE,
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *                                      @ref LL_RCC_PLL_GetMultiplicator (),
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *                                      @ref LL_RCC_PLL_GetDivider ());
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __PLLMUL__ This parameter can be one of the following values:
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_24
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_32
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_48
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __PLLDIV__ This parameter can be one of the following values:
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_DIV_2
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_DIV_3
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_DIV_4
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__,  __PLLDIV__) ((__INPUTFREQ__) * (PLLMu
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note: __AHBPRESCALER__ be retrieved by @ref LL_RCC_GetAHBPrescaler
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_HCLK_FREQ(LL_RCC_GetAHBPrescaler())
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on MSI/HSE/HSI/PLLCLK)
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __AHBPRESCALER__ This parameter can be one of the following values:
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__, __AHBPRESCALER__) ((__SYSCLKFREQ__) >> AHBPrescTabl
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note: __APB1PRESCALER__ be retrieved by @ref LL_RCC_GetAPB1Prescaler
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK1_FREQ(LL_RCC_GetAPB1Prescaler())
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __APB1PRESCALER__ This parameter can be one of the following values:
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 190


 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK2 frequency (ABP2)
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note: __APB2PRESCALER__ be retrieved by @ref LL_RCC_GetAPB2Prescaler
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK2_FREQ(LL_RCC_GetAPB2Prescaler())
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __APB2PRESCALER__ This parameter can be one of the following values:
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval PCLK2 clock frequency (in Hz)
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK2_FREQ(__HCLKFREQ__, __APB2PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the MSI frequency (in Hz)
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note: __MSIRANGE__can be retrieved by @ref LL_RCC_MSI_GetRange
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_MSI_FREQ(LL_RCC_MSI_GetRange())
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __MSIRANGE__ This parameter can be one of the following values:
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_0
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_1
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_2
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_3
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_4
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_5
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_6
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval MSI clock frequency (in Hz)
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_MSI_FREQ(__MSIRANGE__) (32768UL * ( 1UL << (((__MSIRANGE__) >> RCC_ICSCR_MSIR
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSECSS_SUPPORT)
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           CSSHSEON         LL_RCC_HSE_EnableCSS
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 191


 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSECSS_SUPPORT */
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == RCC_CR_HSERDY) ? 1UL : 0UL);
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 192


 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure the RTC prescaler (divider)
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           RTCPRE        LL_RCC_SetRTC_HSEPrescaler
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Div This parameter can be one of the following values:
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_2
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_4
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_8
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_16
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTC_HSEPrescaler(uint32_t Div)
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CR, RCC_CR_RTCPRE, Div);
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get the RTC divider (prescaler)
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           RTCPRE        LL_RCC_GetRTC_HSEPrescaler
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_2
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_4
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_8
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_16
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTC_HSEPrescaler(void)
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_RTCPRE));
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 193


 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RCC_CR_HSIRDY) ? 1UL : 0UL);
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI even in stop mode
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note HSI oscillator is forced ON even in Stop mode
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIKERON      LL_RCC_HSI_EnableInStopMode
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_EnableInStopMode(void)
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSIKERON);
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI in stop mode
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIKERON      LL_RCC_HSI_DisableInStopMode
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_DisableInStopMode(void)
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSIKERON);
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI Divider (it divides by 4)
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIDIVEN       LL_RCC_HSI_EnableDivider
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_EnableDivider(void)
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSIDIVEN);
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI Divider (it divides by 4)
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIDIVEN       LL_RCC_HSI_DisableDivider
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_DisableDivider(void)
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSIDIVEN);
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CR_HSIOUTEN)
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI Output
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIOUTEN       LL_RCC_HSI_EnableOutput
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 194


 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_EnableOutput(void)
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI Output
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIOUTEN       LL_RCC_HSI_DisableOutput
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_DisableOutput(void)
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CR_HSIOUTEN */
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        HSICAL        LL_RCC_HSI_GetCalibration
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_HSICAL) >> RCC_ICSCR_HSICAL_Pos);
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSICAL value,
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *       should trim the HSI to 16 MHz +/- 1 %
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0x1F
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_HSITRIM, Value << RCC_ICSCR_HSITRIM_Pos);
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSITRIM_Pos);
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 195


 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI48 HSI48
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI48
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48ON       LL_RCC_HSI48_Enable
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Enable(void)
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON);
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI48
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48ON       LL_RCC_HSI48_Disable
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Disable(void)
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON);
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if HSI48 oscillator Ready
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48RDY      LL_RCC_HSI48_IsReady
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_IsReady(void)
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == RCC_CRRCR_HSI48RDY) ? 1UL : 0UL);
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get HSI48 Calibration value
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48CAL      LL_RCC_HSI48_GetCalibration
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_GetCalibration(void)
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48CAL) >> RCC_CRRCR_HSI48CAL_Pos);
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CRRCR_HSI48DIV6OUTEN)
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI48 Divider (it divides by 6)
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR           HSI48DIV6OUTEN       LL_RCC_HSI48_EnableDivider
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_EnableDivider(void)
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CRRCR, RCC_CRRCR_HSI48DIV6OUTEN);
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 196


 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI48 Divider (it divides by 6)
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR           HSI48DIV6OUTEN       LL_RCC_HSI48_DisableDivider
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_DisableDivider(void)
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CRRCR, RCC_CRRCR_HSI48DIV6OUTEN);
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if HSI48 Divider is enabled (it divides by 6)
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR        HSI48DIV6OUTEN        LL_RCC_HSI48_IsDivided
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_IsDivided(void)
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48DIV6OUTEN) == RCC_CRRCR_HSI48DIV6OUTEN) ? 1UL : 0UL)
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /*RCC_CRRCR_HSI48DIV6OUTEN*/
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEON         LL_RCC_LSE_Enable
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSEON);
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEON         LL_RCC_LSE_Disable
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSEON);
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEBYP        LL_RCC_LSE_EnableBypass
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 197


1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSEBYP);
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEBYP        LL_RCC_LSE_DisableBypass
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSEBYP);
1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set LSE oscillator drive capability
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note The oscillator is in Xtal mode when it is not in bypass mode.
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEDRV        LL_RCC_LSE_SetDriveCapability
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  LSEDrive This parameter can be one of the following values:
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CSR, RCC_CSR_LSEDRV, LSEDrive);
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get LSE oscillator drive capability
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEDRV        LL_RCC_LSE_GetDriveCapability
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_GetDriveCapability(void)
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CSR, RCC_CSR_LSEDRV));
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable Clock security system on LSE.
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSECSSON      LL_RCC_LSE_EnableCSS
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableCSS(void)
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSECSSON);
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable Clock security system on LSE.
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note   Clock security system can be disabled only after a LSE
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 198


1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         failure detection. In that case it MUST be disabled by software.
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR          LSECSSON      LL_RCC_LSE_DisableCSS
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableCSS(void)
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSECSSON);
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSERDY        LL_RCC_LSE_IsReady
1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CSR, RCC_CSR_LSERDY) == RCC_CSR_LSERDY) ? 1UL : 0UL);
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if CSS on LSE failure Detection
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSECSSD       LL_RCC_LSE_IsCSSDetected
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsCSSDetected(void)
1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CSR, RCC_CSR_LSECSSD) == RCC_CSR_LSECSSD) ? 1UL : 0UL);
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 199


1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == RCC_CSR_LSIRDY) ? 1UL : 0UL);
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MSI MSI
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable MSI oscillator
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           MSION         LL_RCC_MSI_Enable
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_Enable(void)
1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_MSION);
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable MSI oscillator
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           MSION         LL_RCC_MSI_Disable
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_Disable(void)
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_MSION);
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if MSI oscillator Ready
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           MSIRDY        LL_RCC_MSI_IsReady
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_IsReady(void)
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_MSIRDY) == RCC_CR_MSIRDY) ? 1UL : 0UL);
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure the Internal Multi Speed oscillator (MSI) clock range in run mode.
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR           MSIRANGE      LL_RCC_MSI_SetRange
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Range This parameter can be one of the following values:
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_0
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_1
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_2
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_3
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_4
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 200


1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_5
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_6
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_SetRange(uint32_t Range)
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_MSIRANGE, Range);
1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get the Internal Multi Speed oscillator (MSI) clock range in run mode.
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR           MSIRANGE      LL_RCC_MSI_GetRange
1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_0
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_1
1210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_2
1211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_3
1212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_4
1213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_5
1214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_6
1215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetRange(void)
1217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_MSIRANGE));
1219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get MSI Calibration value
1223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note When MSITRIM is written, MSICAL is updated with the sum of
1224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *       MSITRIM and the factory trim value
1225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        MSICAL        LL_RCC_MSI_GetCalibration
1226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
1227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetCalibration(void)
1229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_MSICAL) >> RCC_ICSCR_MSICAL_Pos);
1231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set MSI Calibration trimming
1235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the MSICAL
1236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        MSITRIM       LL_RCC_MSI_SetCalibTrimming
1237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0xFF
1238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_SetCalibTrimming(uint32_t Value)
1241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_MSITRIM, Value << RCC_ICSCR_MSITRIM_Pos);
1243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get MSI Calibration trimming
1247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        MSITRIM       LL_RCC_MSI_GetCalibTrimming
1248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
1249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetCalibTrimming(void)
1251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 201


1252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_MSITRIM) >> RCC_ICSCR_MSITRIM_Pos);
1253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
1260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure the system clock source
1265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
1266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_MSI
1268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
1269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
1276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get the system clock source
1280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
1281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_MSI
1283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
1284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
1285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
1286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
1288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
1290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set AHB prescaler
1294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
1295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
1308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 202


1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
1310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
1314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_SetAPB1Prescaler
1315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
1324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
1326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set APB2 prescaler
1330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_SetAPB2Prescaler
1331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
1340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
1342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get AHB prescaler
1346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
1347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
1359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
1361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
1365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_GetAPB1Prescaler
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 203


1366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
1374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
1376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get APB2 prescaler
1380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_GetAPB2Prescaler
1381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB2Prescaler(void)
1389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
1391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set Clock After Wake-Up From Stop mode
1395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         STOPWUCK      LL_RCC_SetClkAfterWakeFromStop
1396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Clock This parameter can be one of the following values:
1397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_MSI
1398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_HSI
1399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetClkAfterWakeFromStop(uint32_t Clock)
1402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_STOPWUCK, Clock);
1404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get Clock After Wake-Up From Stop mode
1408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         STOPWUCK      LL_RCC_GetClkAfterWakeFromStop
1409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_MSI
1411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_HSI
1412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetClkAfterWakeFromStop(void)
1414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_STOPWUCK));
1416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 204


1423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure MCOx
1428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         MCOSEL        LL_RCC_ConfigMCO\n
1429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         CFGR         MCOPRE        LL_RCC_ConfigMCO
1430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
1431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_NOCLOCK
1432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_SYSCLK
1433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
1434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_MSI
1435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
1436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK
1437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSI
1438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSE
1439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI48 (*)
1440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
1441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  MCOxPrescaler This parameter can be one of the following values:
1443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_1
1444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_2
1445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_4
1446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_8
1447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_16
1448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource, uint32_t MCOxPrescaler)
1451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE, MCOxSource | MCOxPrescaler);
1453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
1460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure USARTx clock source
1465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        USARTxSEL     LL_RCC_SetUSARTClockSource
1466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  USARTxSource This parameter can be one of the following values:
1467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK2 (*)
1468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK (*)
1469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI (*)
1470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE (*)
1471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1
1472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK
1473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI
1474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE
1475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
1476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSARTClockSource(uint32_t USARTxSource)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 205


1480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, (USARTxSource >> 16U), (USARTxSource & 0x0000FFFFU));
1482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure LPUART1x clock source
1486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        LPUART1SEL    LL_RCC_SetLPUARTClockSource
1487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  LPUARTxSource This parameter can be one of the following values:
1488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_PCLK1
1489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_SYSCLK
1490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_HSI
1491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_LSE
1492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetLPUARTClockSource(uint32_t LPUARTxSource)
1495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_LPUART1SEL, LPUARTxSource);
1497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure I2Cx clock source
1501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        I2CxSEL       LL_RCC_SetI2CClockSource
1502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  I2CxSource This parameter can be one of the following values:
1503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_PCLK1
1504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
1505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
1506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_PCLK1 (*)
1507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_SYSCLK (*)
1508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_HSI (*)
1509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
1510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2CClockSource(uint32_t I2CxSource)
1514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, ((I2CxSource >> 4U) & 0x000FF000U), ((I2CxSource << 4U) & 0x000FF000U));
1516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure LPTIMx clock source
1520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        LPTIMxSEL     LL_RCC_SetLPTIMClockSource
1521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  LPTIMxSource This parameter can be one of the following values:
1522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_PCLK1
1523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSI
1524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_HSI
1525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSE
1526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetLPTIMClockSource(uint32_t LPTIMxSource)
1529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_LPTIM1SEL, LPTIMxSource);
1531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_HSI48SEL)
1534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RNG)
1535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure RNG clock source
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 206


1537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        HSI48SEL      LL_RCC_SetRNGClockSource
1538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  RNGxSource This parameter can be one of the following values:
1539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_PLL
1540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_HSI48
1541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRNGClockSource(uint32_t RNGxSource)
1544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_HSI48SEL, RNGxSource);
1546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RNG */
1548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USB)
1550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure USB clock source
1552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        HSI48SEL      LL_RCC_SetUSBClockSource
1553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  USBxSource This parameter can be one of the following values:
1554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_PLL
1555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_HSI48
1556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSBClockSource(uint32_t USBxSource)
1559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_HSI48SEL, USBxSource);
1561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USB */
1563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_HSI48SEL */
1565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get USARTx clock source
1568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        USARTxSEL     LL_RCC_GetUSARTClockSource
1569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  USARTx This parameter can be one of the following values:
1570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE (*)
1571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE
1572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK2 (*)
1574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK (*)
1575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI (*)
1576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE (*)
1577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1
1578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK
1579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI
1580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE
1581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
1582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSARTClockSource(uint32_t USARTx)
1585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, USARTx) | (USARTx << 16U));
1587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get LPUARTx clock source
1593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        LPUART1SEL    LL_RCC_GetLPUARTClockSource
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 207


1594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  LPUARTx This parameter can be one of the following values:
1595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE
1596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_PCLK1
1598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_SYSCLK
1599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_HSI
1600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_LSE
1601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetLPUARTClockSource(uint32_t LPUARTx)
1603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, LPUARTx));
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get I2Cx clock source
1609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        I2CxSEL       LL_RCC_GetI2CClockSource
1610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  I2Cx This parameter can be one of the following values:
1611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE
1612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE
1613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_PCLK1
1615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
1616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
1617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_PCLK1  (*)
1618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_SYSCLK  (*)
1619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_HSI   (*)
1620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
1621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2CClockSource(uint32_t I2Cx)
1624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)((READ_BIT(RCC->CCIPR, I2Cx) >> 4U) | (I2Cx << 4U));
1626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get LPTIMx clock source
1630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        LPTIMxSEL     LL_RCC_GetLPTIMClockSource
1631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  LPTIMx This parameter can be one of the following values:
1632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE
1633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_PCLK1
1635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSI
1636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_HSI
1637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSE
1638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetLPTIMClockSource(uint32_t LPTIMx)
1640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, LPTIMx));
1642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_HSI48SEL)
1645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RNG)
1646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get RNGx clock source
1648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        CLK48SEL      LL_RCC_GetRNGClockSource
1649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  RNGx This parameter can be one of the following values:
1650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 208


1651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_PLL
1653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_HSI48
1654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRNGClockSource(uint32_t RNGx)
1656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, RNGx));
1658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RNG */
1660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USB)
1662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get USBx clock source
1664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        CLK48SEL      LL_RCC_GetUSBClockSource
1665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  USBx This parameter can be one of the following values:
1666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE
1667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL
1669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_HSI48
1670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSBClockSource(uint32_t USBx)
1672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, USBx));
1674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USB */
1676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_HSI48SEL */
1678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_RTC RTC
1684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set RTC Clock Source
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note Once the RTC clock source has been selected, it cannot be changed any more unless
1690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *       the Backup domain is reset, or unless a failure is detected on LSE (LSECSSD is
1691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *       set). The RTCRST bit can be used to reset them.
1692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         RTCSEL        LL_RCC_SetRTCClockSource
1693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE
1698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTCClockSource(uint32_t Source)
1701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CSR, RCC_CSR_RTCSEL, Source);
1703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get RTC Clock Source
1707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         RTCSEL        LL_RCC_GetRTCClockSource
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 209


1708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE
1713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTCClockSource(void)
1715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CSR, RCC_CSR_RTCSEL));
1717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable RTC
1721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         RTCEN         LL_RCC_EnableRTC
1722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_EnableRTC(void)
 1135              		.loc 9 1724 22 view .LVU343
 1136              	.LBB239:
1725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_RTCEN);
 1137              		.loc 9 1726 3 view .LVU344
 1138 000e 104A     		ldr	r2, .L16
 1139 0010 116D     		ldr	r1, [r2, #80]
 1140 0012 8023     		movs	r3, #128
 1141 0014 DB02     		lsls	r3, r3, #11
 1142 0016 0B43     		orrs	r3, r1
 1143 0018 1365     		str	r3, [r2, #80]
 1144              	.LBE239:
 1145              	.LBE238:
 349:Core/Src/main.c ****   NVIC_EnableIRQ(RTC_IRQn);
 1146              		.loc 1 349 3 view .LVU345
 1147              	.LVL62:
 1148              	.LBB240:
 1149              	.LBI240:
 848:Drivers/CMSIS/Include/core_cm0plus.h **** {
 1150              		.loc 4 848 22 view .LVU346
 1151              	.LBB241:
 850:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 1152              		.loc 4 850 3 view .LVU347
 1153              		.loc 4 852 5 view .LVU348
 1154              		.loc 4 852 52 is_stmt 0 view .LVU349
 1155 001a 0E4B     		ldr	r3, .L16+4
 1156 001c C021     		movs	r1, #192
 1157 001e 8900     		lsls	r1, r1, #2
 1158 0020 5A58     		ldr	r2, [r3, r1]
 1159              		.loc 4 852 33 view .LVU350
 1160 0022 0D48     		ldr	r0, .L16+8
 1161 0024 0240     		ands	r2, r0
 1162              		.loc 4 852 30 view .LVU351
 1163 0026 5A50     		str	r2, [r3, r1]
 1164              	.LVL63:
 1165              		.loc 4 852 30 view .LVU352
 1166              	.LBE241:
 1167              	.LBE240:
 350:Core/Src/main.c **** 
 1168              		.loc 1 350 3 is_stmt 1 view .LVU353
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 210


 1169              	.LBB242:
 1170              	.LBI242:
 741:Drivers/CMSIS/Include/core_cm0plus.h **** {
 1171              		.loc 4 741 22 view .LVU354
 1172              	.LBB243:
 743:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 1173              		.loc 4 743 3 view .LVU355
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 1174              		.loc 4 745 5 view .LVU356
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 1175              		.loc 4 745 20 is_stmt 0 view .LVU357
 1176 0028 0425     		movs	r5, #4
 1177 002a 1D60     		str	r5, [r3]
 1178              	.LVL64:
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 1179              		.loc 4 745 20 view .LVU358
 1180              	.LBE243:
 1181              	.LBE242:
 358:Core/Src/main.c ****   RTC_InitStruct.AsynchPrescaler = 127;
 1182              		.loc 1 358 3 is_stmt 1 view .LVU359
 358:Core/Src/main.c ****   RTC_InitStruct.AsynchPrescaler = 127;
 1183              		.loc 1 358 29 is_stmt 0 view .LVU360
 1184 002c 0023     		movs	r3, #0
 1185 002e 0193     		str	r3, [sp, #4]
 359:Core/Src/main.c ****   RTC_InitStruct.SynchPrescaler = 255;
 1186              		.loc 1 359 3 is_stmt 1 view .LVU361
 359:Core/Src/main.c ****   RTC_InitStruct.SynchPrescaler = 255;
 1187              		.loc 1 359 34 is_stmt 0 view .LVU362
 1188 0030 7F33     		adds	r3, r3, #127
 1189 0032 0293     		str	r3, [sp, #8]
 360:Core/Src/main.c ****   LL_RTC_Init(RTC, &RTC_InitStruct);
 1190              		.loc 1 360 3 is_stmt 1 view .LVU363
 360:Core/Src/main.c ****   LL_RTC_Init(RTC, &RTC_InitStruct);
 1191              		.loc 1 360 33 is_stmt 0 view .LVU364
 1192 0034 8033     		adds	r3, r3, #128
 1193 0036 0393     		str	r3, [sp, #12]
 361:Core/Src/main.c **** 
 1194              		.loc 1 361 3 is_stmt 1 view .LVU365
 1195 0038 084C     		ldr	r4, .L16+12
 1196 003a 01A9     		add	r1, sp, #4
 1197 003c 2000     		movs	r0, r4
 1198 003e FFF7FEFF 		bl	LL_RTC_Init
 1199              	.LVL65:
 368:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 1200              		.loc 1 368 3 view .LVU366
 1201              	.LBB244:
 1202              	.LBI244:
 1203              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @file    stm32l0xx_ll_rtc.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief   Header file of RTC LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * Copyright (c) 2016 STMicroelectronics.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 211


  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * in the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #ifndef STM32L0xx_LL_RTC_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define STM32L0xx_LL_RTC_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #ifdef __cplusplus
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** extern "C" {
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #include "stm32l0xx.h"
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC)
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL RTC
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Constants RTC Private Constants
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Masks Definition */
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_INIT_MASK                 0xFFFFFFFFU
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_RSF_MASK                  ((uint32_t)~(RTC_ISR_INIT | RTC_ISR_RSF))
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Write protection defines */
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_DISABLE  ((uint8_t)0xFFU)
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_1 ((uint8_t)0xCAU)
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_2 ((uint8_t)0x53U)
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Defines used to combine date & time */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_WEEKDAY            24U
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_DAY                16U
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_MONTH              8U
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_HOUR               16U
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_MINUTE             8U
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Private macros ------------------------------------------------------------*/
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 212


  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Macros RTC Private Macros
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /*USE_FULL_LL_DRIVER*/
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Exported types ------------------------------------------------------------*/
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_ES_INIT RTC Exported Init structure
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  RTC Init structures definition
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** typedef struct
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t HourFormat;   /*!< Specifies the RTC Hours Format.
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This parameter can be a value of @ref RTC_LL_EC_HOURFORMAT
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               @ref LL_RTC_SetHourFormat(). */
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t AsynchPrescaler; /*!< Specifies the RTC Asynchronous Predivider value.
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               @ref LL_RTC_SetAsynchPrescaler(). */
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t SynchPrescaler;  /*!< Specifies the RTC Synchronous Predivider value.
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               @ref LL_RTC_SetSynchPrescaler(). */
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** } LL_RTC_InitTypeDef;
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  RTC Time structure definition
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** typedef struct
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t TimeFormat; /*!< Specifies the RTC AM/PM Time.
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter can be a value of @ref RTC_LL_EC_TIME_FORMAT
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Hours;       /*!< Specifies the RTC Time Hours.
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 12 
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 23 
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Minutes;     /*!< Specifies the RTC Time Minutes.
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 213


 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Seconds;     /*!< Specifies the RTC Time Seconds.
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** } LL_RTC_TimeTypeDef;
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  RTC Date structure definition
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** typedef struct
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t WeekDay;  /*!< Specifies the RTC Date WeekDay.
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_WEEKDAY
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Month;    /*!< Specifies the RTC Date Month.
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_MONTH
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Day;      /*!< Specifies the RTC Date Day.
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 1 and Max_Data = 31
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Year;     /*!< Specifies the RTC Date Year.
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 0 and Max_Data = 99
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** } LL_RTC_DateTypeDef;
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  RTC Alarm structure definition
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** typedef struct
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   LL_RTC_TimeTypeDef AlarmTime;  /*!< Specifies the RTC Alarm Time members. */
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t AlarmMask;            /*!< Specifies the RTC Alarm Masks.
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_MASK for
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       or @ref LL_RTC_ALMB_SetMask() for ALARM B.
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                  */
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t AlarmDateWeekDaySel;  /*!< Specifies the RTC Alarm is on day or WeekDay.
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_WEEKDAY_
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_EnableWeekday() or @ref LL_RT
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                  */
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t AlarmDateWeekDay;      /*!< Specifies the RTC Alarm Day/WeekDay.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 214


 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to day, this parameter  must be a 
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_SetDay() for ALARM B.
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to Weekday, this parameter can be 
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_SetWeekDay() for ALARM B.
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                  */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** } LL_RTC_AlarmTypeDef;
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Exported constants --------------------------------------------------------*/
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Constants RTC Exported Constants
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_FORMAT FORMAT
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_FORMAT_BIN                  0x00000000U /*!< Binary data format */
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_FORMAT_BCD                  0x00000001U /*!< BCD data format */
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_WEEKDAY_SELECTION RTC Alarm A Date WeekDay
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_DATE    0x00000000U             /*!< Alarm A Date is selected */
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMAR_WDSEL        /*!< Alarm A WeekDay is selected
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_WEEKDAY_SELECTION RTC Alarm B Date WeekDay
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_DATEWEEKDAYSEL_DATE    0x00000000U             /*!< Alarm B Date is selected */
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMBR_WDSEL        /*!< Alarm B WeekDay is selected
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_GET_FLAG Get Flags Defines
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief    Flags defines which can be used with LL_RTC_ReadReg function
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_RECALPF                 RTC_ISR_RECALPF
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 215


 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP3F                  RTC_ISR_TAMP3F
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP2F                  RTC_ISR_TAMP2F
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP1F                  RTC_ISR_TAMP1F
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TSOVF                   RTC_ISR_TSOVF
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TSF                     RTC_ISR_TSF
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_WUTF                    RTC_ISR_WUTF
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRBF                   RTC_ISR_ALRBF
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAF                   RTC_ISR_ALRAF
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_INITF                   RTC_ISR_INITF
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_RSF                     RTC_ISR_RSF
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_INITS                   RTC_ISR_INITS
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_SHPF                    RTC_ISR_SHPF
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_WUTWF                   RTC_ISR_WUTWF
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRBWF                  RTC_ISR_ALRBWF
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAWF                  RTC_ISR_ALRAWF
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_IT IT Defines
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief    IT defines which can be used with LL_RTC_ReadReg and  LL_RTC_WriteReg functions
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CR_TSIE                     RTC_CR_TSIE
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CR_WUTIE                    RTC_CR_WUTIE
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CR_ALRBIE                   RTC_CR_ALRBIE
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CR_ALRAIE                   RTC_CR_ALRAIE
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMP3IE              RTC_TAMPCR_TAMP3IE
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMP2IE              RTC_TAMPCR_TAMP2IE
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMP1IE              RTC_TAMPCR_TAMP1IE
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMPIE               RTC_TAMPCR_TAMPIE
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WEEKDAY  WEEK DAY
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_MONDAY              ((uint8_t)0x01U) /*!< Monday    */
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_TUESDAY             ((uint8_t)0x02U) /*!< Tuesday   */
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_WEDNESDAY           ((uint8_t)0x03U) /*!< Wednesday */
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_THURSDAY            ((uint8_t)0x04U) /*!< Thrusday  */
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_FRIDAY              ((uint8_t)0x05U) /*!< Friday    */
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SATURDAY            ((uint8_t)0x06U) /*!< Saturday  */
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SUNDAY              ((uint8_t)0x07U) /*!< Sunday    */
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 216


 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_MONTH  MONTH
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_JANUARY               ((uint8_t)0x01U)  /*!< January   */
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_FEBRUARY              ((uint8_t)0x02U)  /*!< February  */
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_MARCH                 ((uint8_t)0x03U)  /*!< March     */
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_APRIL                 ((uint8_t)0x04U)  /*!< April     */
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_MAY                   ((uint8_t)0x05U)  /*!< May       */
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_JUNE                  ((uint8_t)0x06U)  /*!< June      */
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_JULY                  ((uint8_t)0x07U)  /*!< July      */
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_AUGUST                ((uint8_t)0x08U)  /*!< August    */
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_SEPTEMBER             ((uint8_t)0x09U)  /*!< September */
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_OCTOBER               ((uint8_t)0x10U)  /*!< October   */
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_NOVEMBER              ((uint8_t)0x11U)  /*!< November  */
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_DECEMBER              ((uint8_t)0x12U)  /*!< December  */
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_HOURFORMAT  HOUR FORMAT
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_24HOUR           0x00000000U           /*!< 24 hour/day format */
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_AMPM             RTC_CR_FMT            /*!< AM/PM hour format */
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARMOUT  ALARM OUTPUT
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_DISABLE            0x00000000U             /*!< Output disabled */
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMA               RTC_CR_OSEL_0           /*!< Alarm A output enabled */
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMB               RTC_CR_OSEL_1           /*!< Alarm B output enabled */
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_WAKEUP             RTC_CR_OSEL             /*!< Wakeup output enabled */
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARM_OUTPUTTYPE  ALARM OUTPUT TYPE
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN  0x00000000U                          /*!< RTC_ALARM, whe
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL   RTC_OR_ALARMOUTTYPE /*!< RTC_ALARM, when mapped on PC13,
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_OUTPUTPOLARITY_PIN  OUTPUT POLARITY PIN
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_HIGH     0x00000000U           /*!< Pin is high when ALRAF/ALRBF/
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_LOW      RTC_CR_POL            /*!< Pin is low when ALRAF/ALRBF/W
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 217


 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIME_FORMAT TIME FORMAT
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_AM_OR_24        0x00000000U           /*!< AM or 24-hour format */
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_PM              RTC_TR_PM             /*!< PM */
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_SHIFT_SECOND  SHIFT SECOND
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_DELAY          0x00000000U           /* Delay (seconds) = SUBFS / (PRED
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_ADVANCE        RTC_SHIFTR_ADD1S      /* Advance (seconds) = (1 - (SUBFS
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_MASK  ALARMA MASK
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_NONE              0x00000000U             /*!< No masks applied on Alarm A
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_DATEWEEKDAY       RTC_ALRMAR_MSK4         /*!< Date/day do not care in Ala
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_HOURS             RTC_ALRMAR_MSK3         /*!< Hours do not care in Alarm 
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_MINUTES           RTC_ALRMAR_MSK2         /*!< Minutes do not care in Alar
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_SECONDS           RTC_ALRMAR_MSK1         /*!< Seconds do not care in Alar
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_ALL               (RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | R
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_TIME_FORMAT  ALARMA TIME FORMAT
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_AM         0x00000000U           /*!< AM or 24-hour format */
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_PM         RTC_ALRMAR_PM         /*!< PM */
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_MASK  ALARMB MASK
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_NONE              0x00000000U             /*!< No masks applied on Alarm B
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_DATEWEEKDAY       RTC_ALRMBR_MSK4         /*!< Date/day do not care in Ala
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_HOURS             RTC_ALRMBR_MSK3         /*!< Hours do not care in Alarm 
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_MINUTES           RTC_ALRMBR_MSK2         /*!< Minutes do not care in Alar
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_SECONDS           RTC_ALRMBR_MSK1         /*!< Seconds do not care in Alar
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_ALL               (RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | R
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_TIME_FORMAT  ALARMB TIME FORMAT
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_TIME_FORMAT_AM         0x00000000U           /*!< AM or 24-hour format */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 218


 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_TIME_FORMAT_PM         RTC_ALRMBR_PM         /*!< PM */
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIMESTAMP_EDGE  TIMESTAMP EDGE
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_RISING       0x00000000U           /*!< RTC_TS input rising edge gene
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_FALLING      RTC_CR_TSEDGE         /*!< RTC_TS input falling edge gen
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TS_TIME_FORMAT  TIMESTAMP TIME FORMAT
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_AM           0x00000000U           /*!< AM or 24-hour format */
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_PM           RTC_TSTR_PM           /*!< PM */
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER  TAMPER
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_1                    RTC_TAMPCR_TAMP1E /*!< RTC_TAMP1 input detection */
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_2                    RTC_TAMPCR_TAMP2E /*!< RTC_TAMP2 input detection */
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_3                    RTC_TAMPCR_TAMP3E /*!< RTC_TAMP3 input detection */
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_MASK  TAMPER MASK
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER1         RTC_TAMPCR_TAMP1MF /*!< Tamper 1 event generates a trigg
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER2         RTC_TAMPCR_TAMP2MF /*!< Tamper 2 event generates a trigg
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER3         RTC_TAMPCR_TAMP3MF /*!< Tamper 3 event generates a trigg
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_NOERASE  TAMPER NO ERASE
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER1      RTC_TAMPCR_TAMP1NOERASE /*!< Tamper 1 event does not era
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 219


 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER2      RTC_TAMPCR_TAMP2NOERASE /*!< Tamper 2 event does not era
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER3      RTC_TAMPCR_TAMP3NOERASE /*!< Tamper 3 event does not era
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_DURATION  TAMPER DURATION
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_1RTCCLK     0x00000000U                             /*!< Tamper pins
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_2RTCCLK     RTC_TAMPCR_TAMPPRCH_0  /*!< Tamper pins are pre-charged 
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_4RTCCLK     RTC_TAMPCR_TAMPPRCH_1  /*!< Tamper pins are pre-charged 
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_8RTCCLK     RTC_TAMPCR_TAMPPRCH    /*!< Tamper pins are pre-charged 
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_FILTER  TAMPER FILTER
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_DISABLE       0x00000000U                              /*!< Tamper fil
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_2SAMPLE       RTC_TAMPCR_TAMPFLT_0    /*!< Tamper is activated after 2
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_4SAMPLE       RTC_TAMPCR_TAMPFLT_1    /*!< Tamper is activated after 4
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_8SAMPLE       RTC_TAMPCR_TAMPFLT      /*!< Tamper is activated after 8
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_SAMPLFREQDIV  TAMPER SAMPLING FREQUENCY DIVIDER
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_32768   0x00000000U                                             
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_16384   RTC_TAMPCR_TAMPFREQ_0                           /*!< Eac
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_8192    RTC_TAMPCR_TAMPFREQ_1                           /*!< Eac
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_4096    (RTC_TAMPCR_TAMPFREQ_1 | RTC_TAMPCR_TAMPFREQ_0) /*!< Eac
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_2048    RTC_TAMPCR_TAMPFREQ_2                           /*!< Eac
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_1024    (RTC_TAMPCR_TAMPFREQ_2 | RTC_TAMPCR_TAMPFREQ_0) /*!< Eac
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_512     (RTC_TAMPCR_TAMPFREQ_2 | RTC_TAMPCR_TAMPFREQ_1) /*!< Eac
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_256     RTC_TAMPCR_TAMPFREQ                             /*!< Eac
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_ACTIVELEVEL  TAMPER ACTIVE LEVEL
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP1    RTC_TAMPCR_TAMP1TRG /*!< RTC_TAMP1 input falling edge (i
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP2    RTC_TAMPCR_TAMP2TRG /*!< RTC_TAMP2 input falling edge (i
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP3    RTC_TAMPCR_TAMP3TRG /*!< RTC_TAMP3 input falling edge (i
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 220


 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WAKEUPCLOCK_DIV  WAKEUP CLOCK DIV
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_16          0x00000000U                           /*!< RTC/16 clock 
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_8           (RTC_CR_WUCKSEL_0)                    /*!< RTC/8 clock i
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_4           (RTC_CR_WUCKSEL_1)                    /*!< RTC/4 clock i
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_2           (RTC_CR_WUCKSEL_1 | RTC_CR_WUCKSEL_0) /*!< RTC/2 clock i
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE          (RTC_CR_WUCKSEL_2)                    /*!< ck_spre (usua
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE_WUT      (RTC_CR_WUCKSEL_2 | RTC_CR_WUCKSEL_1) /*!< ck_spre (usua
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_BKP  BACKUP
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR0                     0x00000000U
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR1                     0x00000001U
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR2                     0x00000002U
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR3                     0x00000003U
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR4                     0x00000004U
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_OUTPUT  Calibration output
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_NONE           0x00000000U                 /*!< Calibration output disa
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_1HZ            (RTC_CR_COE | RTC_CR_COSEL) /*!< Calibration output is 1
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_512HZ          (RTC_CR_COE)                /*!< Calibration output is 5
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_INSERTPULSE  Calibration pulse insertion
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_NONE      0x00000000U           /*!< No RTCCLK pulses are added */
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_SET       RTC_CALR_CALP         /*!< One RTCCLK pulse is effective
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_PERIOD  Calibration period
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_32SEC          0x00000000U           /*!< Use a 32-second calibration c
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_16SEC          RTC_CALR_CALW16       /*!< Use a 16-second calibration c
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_8SEC           RTC_CALR_CALW8        /*!< Use a 8-second calibration cy
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 221


 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Exported macro ------------------------------------------------------------*/
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Macros RTC Exported Macros
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_WRITE_READ Common Write and read registers Macros
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Write a value in RTC register
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __REG__ Register to be written
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __VALUE__ Value to be written in the register
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Read a value in RTC register
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __REG__ Register to be read
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Register value
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Convert Convert helper Macros
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from 2 digit decimal format to BCD format
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __VALUE__ Byte to be converted
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Converted byte
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BIN2BCD(__VALUE__) (uint8_t)((((__VALUE__) / 10U) << 4U) | ((__VALUE__) % 
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from BCD format to 2 digit decimal format
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __VALUE__ BCD value to be converted
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Converted byte
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BCD2BIN(__VALUE__) (uint8_t)(((uint8_t)((__VALUE__) & (uint8_t)0xF0U) >> (
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Date Date helper Macros
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 222


 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve weekday.
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Date returned by @ref  LL_RTC_DATE_Get function.
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_WEEKDAY(__RTC_DATE__) (((__RTC_DATE__) >> RTC_OFFSET_WEEKDAY) & 0x000000FFU)
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Year in BCD format
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Year in BCD format (0x00 . . . 0x99)
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_YEAR(__RTC_DATE__) ((__RTC_DATE__) & 0x000000FFU)
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Month in BCD format
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_MONTH(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_MONTH) & 0x000000FFU)
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Day in BCD format
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Day in BCD format (0x01 . . . 0x31)
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_DAY(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_DAY) & 0x000000FFU)
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Time Time helper Macros
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 223


 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve hour in BCD format
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Hours in BCD format (0x01. . .0x12 or between Min_Data=0x00 and Max_Data=0x23)
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_HOUR(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_HOUR) & 0x000000FFU)
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve minute in BCD format
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Minutes in BCD format (0x00. . .0x59)
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_MINUTE(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_MINUTE) & 0x000000FFU)
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve second in BCD format
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Seconds in  format (0x00. . .0x59)
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_SECOND(__RTC_TIME__) ((__RTC_TIME__) & 0x000000FFU)
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Exported functions --------------------------------------------------------*/
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Functions RTC Exported Functions
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Configuration Configuration
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Hours format (24 hour/day or AM/PM hour format)
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_SetHourFormat
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  HourFormat This parameter can be one of the following values:
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetHourFormat(RTC_TypeDef *RTCx, uint32_t HourFormat)
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_FMT, HourFormat);
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Hours format (24 hour/day or AM/PM hour format)
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_GetHourFormat
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 224


 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetHourFormat(RTC_TypeDef *RTCx)
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_FMT));
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Select the flag to be routed to RTC_ALARM output
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_SetAlarmOutEvent
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  AlarmOutput This parameter can be one of the following values:
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutEvent(RTC_TypeDef *RTCx, uint32_t AlarmOutput)
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_OSEL, AlarmOutput);
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get the flag to be routed to RTC_ALARM output
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_GetAlarmOutEvent
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutEvent(RTC_TypeDef *RTCx)
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_OSEL));
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set RTC_ALARM output type (ALARM in push-pull or open-drain output)
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Used only when RTC_ALARM is mapped on PC13
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll OR        ALARMOUTTYPE  LL_RTC_SetAlarmOutputType
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Output This parameter can be one of the following values:
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutputType(RTC_TypeDef *RTCx, uint32_t Output)
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->OR, RTC_OR_ALARMOUTTYPE, Output);
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 225


 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get RTC_ALARM output type (ALARM in push-pull or open-drain output)
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   used only when RTC_ALARM is mapped on PC13
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll OR        ALARMOUTTYPE  LL_RTC_GetAlarmOutputType
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutputType(RTC_TypeDef *RTCx)
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->OR, RTC_OR_ALARMOUTTYPE));
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable initialization mode
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Initialization mode is used to program time and date register (RTC_TR and RTC_DR)
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         and prescaler register (RTC_PRER).
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         Counters are stopped and start counting from the new value when INIT is reset.
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_EnableInitMode
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableInitMode(RTC_TypeDef *RTCx)
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   /* Set the Initialization mode */
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, RTC_INIT_MASK);
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable initialization mode (Free running mode)
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_DisableInitMode
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableInitMode(RTC_TypeDef *RTCx)
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   /* Exit Initialization mode */
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (uint32_t)~RTC_ISR_INIT);
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Output polarity (pin is low when ALRAF/ALRBF/WUTF is asserted)
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_SetOutputPolarity
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Polarity This parameter can be one of the following values:
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetOutputPolarity(RTC_TypeDef *RTCx, uint32_t Polarity)
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_POL, Polarity);
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Output polarity
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 226


 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_GetOutputPolarity
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetOutputPolarity(RTC_TypeDef *RTCx)
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_POL));
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Bypass the shadow registers
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_EnableShadowRegBypass
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableShadowRegBypass(RTC_TypeDef *RTCx)
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BYPSHAD);
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Bypass the shadow registers
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_DisableShadowRegBypass
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableShadowRegBypass(RTC_TypeDef *RTCx)
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BYPSHAD);
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Check if Shadow registers bypass is enabled or not.
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_IsShadowRegBypassEnabled
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsShadowRegBypassEnabled(RTC_TypeDef *RTCx)
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return ((READ_BIT(RTCx->CR, RTC_CR_BYPSHAD) == (RTC_CR_BYPSHAD)) ? 1UL : 0UL);
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable RTC_REFIN reference clock detection (50 or 60 Hz)
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_EnableRefClock
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableRefClock(RTC_TypeDef *RTCx)
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_REFCKON);
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 227


 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable RTC_REFIN reference clock detection (50 or 60 Hz)
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_DisableRefClock
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableRefClock(RTC_TypeDef *RTCx)
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_REFCKON);
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Asynchronous prescaler factor
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_A      LL_RTC_SetAsynchPrescaler
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  AsynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7F
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAsynchPrescaler(RTC_TypeDef *RTCx, uint32_t AsynchPrescaler)
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_A, AsynchPrescaler << RTC_PRER_PREDIV_A_Pos);
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Synchronous prescaler factor
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_S      LL_RTC_SetSynchPrescaler
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  SynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7FFF
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetSynchPrescaler(RTC_TypeDef *RTCx, uint32_t SynchPrescaler)
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_S, SynchPrescaler);
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Asynchronous prescaler factor
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_A      LL_RTC_GetAsynchPrescaler
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7F
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAsynchPrescaler(RTC_TypeDef *RTCx)
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_A) >> RTC_PRER_PREDIV_A_Pos);
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Synchronous prescaler factor
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_S      LL_RTC_GetSynchPrescaler
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7FFF
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetSynchPrescaler(RTC_TypeDef *RTCx)
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 228


 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_S));
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable the write protection for RTC registers.
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll WPR          KEY           LL_RTC_EnableWriteProtection
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableWriteProtection(RTC_TypeDef *RTCx)
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_DISABLE);
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable the write protection for RTC registers.
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll WPR          KEY           LL_RTC_DisableWriteProtection
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableWriteProtection(RTC_TypeDef *RTCx)
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_1);
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable RTC_OUT remap
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll OR           OUT_RMP       LL_RTC_EnableOutRemap
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableOutRemap(RTC_TypeDef *RTCx)
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->OR, RTC_OR_OUT_RMP);
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable RTC_OUT remap
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll OR           OUT_RMP       LL_RTC_DisableOutRemap
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableOutRemap(RTC_TypeDef *RTCx)
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->OR, RTC_OR_OUT_RMP);
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Time Time
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 229


1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set time format (AM/24-hour or PM notation)
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_SetFormat
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, RTC_TR_PM, TimeFormat);
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get time format (AM or PM notation)
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_GetFormat
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetFormat(RTC_TypeDef *RTCx)
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, RTC_TR_PM));
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Hours in BCD format
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert hour from binary to BCD for
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_SetHour\n
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_SetHour
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_HT | RTC_TR_HU),
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos)));
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Hours in BCD format
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert hour from BCD to
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       Binary format
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 230


1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_GetHour\n
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_GetHour
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetHour(RTC_TypeDef *RTCx)
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->TR, (RTC_TR_HT | RTC_TR_HU))) >> RTC_TR_HU_Pos);
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Minutes in BCD format
1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           MNT           LL_RTC_TIME_SetMinute\n
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_SetMinute
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU),
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos))
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Minutes in BCD format
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert minute from BCD
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       to Binary format
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           MNT           LL_RTC_TIME_GetMinute\n
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_GetMinute
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetMinute(RTC_TypeDef *RTCx)
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Seconds in BCD format
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           ST            LL_RTC_TIME_SetSecond\n
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_SetSecond
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 231


1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_ST | RTC_TR_SU),
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos)));
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Seconds in BCD format
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD
1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       to Binary format
1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           ST            LL_RTC_TIME_GetSecond\n
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_GetSecond
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSecond(RTC_TypeDef *RTCx)
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set time (hour, minute and second) in BCD format
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note TimeFormat and Hours should follow the same format
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_Config\n
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HT            LL_RTC_TIME_Config\n
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_Config\n
1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNT           LL_RTC_TIME_Config\n
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_Config\n
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           ST            LL_RTC_TIME_Config\n
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_Config
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Config(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours, ui
1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t temp;
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = Format12_24                                                                            | \
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Hours   & 0xF0U) << (RTC_TR_HT_Pos  - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))    | \
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_TR_ST_Pos  - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos));
1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_PM | RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST | R
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get time (hour, minute and second) in BCD format
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 232


1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
1212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       are available to get independently each parameter.
1213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_Get\n
1214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_Get\n
1215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNT           LL_RTC_TIME_Get\n
1216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_Get\n
1217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           ST            LL_RTC_TIME_Get\n
1218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_Get
1219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds (Format: 0x00HHMMSS).
1221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_Get(RTC_TypeDef *RTCx)
1223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, (RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST
1225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Memorize whether the daylight saving time change has been performed
1229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BKP           LL_RTC_TIME_EnableDayLightStore
1231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_EnableDayLightStore(RTC_TypeDef *RTCx)
1235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BKP);
1237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable memorization whether the daylight saving time change has been performed.
1241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BKP           LL_RTC_TIME_DisableDayLightStore
1243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DisableDayLightStore(RTC_TypeDef *RTCx)
1247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BKP);
1249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Check if RTC Day Light Saving stored operation has been enabled or not
1253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BKP           LL_RTC_TIME_IsDayLightStoreEnabled
1254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_IsDayLightStoreEnabled(RTC_TypeDef *RTCx)
1258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return ((READ_BIT(RTCx->CR, RTC_CR_BKP) == (RTC_CR_BKP)) ? 1UL : 0UL);
1260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Subtract 1 hour (winter time change)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 233


1264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           SUB1H         LL_RTC_TIME_DecHour
1266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DecHour(RTC_TypeDef *RTCx)
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_SUB1H);
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Add 1 hour (summer time change)
1276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ADD1H         LL_RTC_TIME_IncHour
1278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_IncHour(RTC_TypeDef *RTCx)
1282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ADD1H);
1284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get subseconds value in the synchronous prescaler counter.
1288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note  You can use both SubSeconds value and SecondFraction (PREDIV_S through
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        LL_RTC_GetSynchPrescaler function) terms returned to convert Calendar
1290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        SubSeconds value in second fraction ratio with time unit following
1291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        generic formula:
1292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *          ==> Seconds fraction ratio * time_unit =
1293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *                 [(SecondFraction-SubSeconds)/(SecondFraction+1)] * time_unit
1294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        This conversion can be performed only if no shift operation is pending
1295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        (ie. SHFP=0) when PREDIV_S >= SS.
1296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll SSR          SS            LL_RTC_TIME_GetSubSecond
1297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Subseconds value (number between 0 and 65535)
1299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSubSecond(RTC_TypeDef *RTCx)
1301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->SSR, RTC_SSR_SS));
1303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Synchronize to a remote clock with a high degree of precision.
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   This operation effectively subtracts from (delays) or advance the clock of a fraction o
1308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
1310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll SHIFTR       ADD1S         LL_RTC_TIME_Synchronize\n
1311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         SHIFTR       SUBFS         LL_RTC_TIME_Synchronize
1312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  ShiftSecond This parameter can be one of the following values:
1314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_DELAY
1315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_ADVANCE
1316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Fraction Number of Seconds Fractions (any value from 0 to 0x7FFF)
1317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Synchronize(RTC_TypeDef *RTCx, uint32_t ShiftSecond, uint32_t Frac
1320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 234


1321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->SHIFTR, ShiftSecond | Fraction);
1322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
1326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Date Date
1329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
1330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Year in BCD format
1334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Year from binary to BCD for
1335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           YT            LL_RTC_DATE_SetYear\n
1336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_SetYear
1337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetYear(RTC_TypeDef *RTCx, uint32_t Year)
1342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_YT | RTC_DR_YU),
1344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos)));
1345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Year in BCD format
1349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Year from BCD to Binary for
1352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           YT            LL_RTC_DATE_GetYear\n
1353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_GetYear
1354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x99
1356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetYear(RTC_TypeDef *RTCx)
1358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->DR, (RTC_DR_YT | RTC_DR_YU))) >> RTC_DR_YU_Pos);
1360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Week day
1364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_SetWeekDay
1365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
1377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 235


1378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, RTC_DR_WDU, WeekDay << RTC_DR_WDU_Pos);
1379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Week day
1383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_GetWeekDay
1386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetWeekDay(RTC_TypeDef *RTCx)
1397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->DR, RTC_DR_WDU) >> RTC_DR_WDU_Pos);
1399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Month in BCD format
1403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Month from binary to BCD fo
1404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           MT            LL_RTC_DATE_SetMonth\n
1405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_SetMonth
1406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetMonth(RTC_TypeDef *RTCx, uint32_t Month)
1423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_MT | RTC_DR_MU),
1425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)));
1426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Month in BCD format
1430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
1433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           MT            LL_RTC_DATE_GetMonth\n
1434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_GetMonth
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 236


1435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetMonth(RTC_TypeDef *RTCx)
1451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->DR, (RTC_DR_MT | RTC_DR_MU))) >> RTC_DR_MU_Pos);
1453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Day in BCD format
1457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
1458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           DT            LL_RTC_DATE_SetDay\n
1459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_SetDay
1460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
1465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_DT | RTC_DR_DU),
1467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos)));
1468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Day in BCD format
1472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
1475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           DT            LL_RTC_DATE_GetDay\n
1476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_GetDay
1477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
1479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetDay(RTC_TypeDef *RTCx)
1481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->DR, (RTC_DR_DT | RTC_DR_DU))) >> RTC_DR_DU_Pos);
1483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set date (WeekDay, Day, Month and Year) in BCD format
1487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_Config\n
1488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MT            LL_RTC_DATE_Config\n
1489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_Config\n
1490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DT            LL_RTC_DATE_Config\n
1491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_Config\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 237


1492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YT            LL_RTC_DATE_Config\n
1493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_Config
1494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_Config(RTC_TypeDef *RTCx, uint32_t WeekDay, uint32_t Day, uint32_t
1521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t temp;
1523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = (  WeekDay                                                    << RTC_DR_WDU_Pos) | \
1525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Year  & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year  & 0x0FU) << RTC_DR_YU_Pos)) | \
1526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
1527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Day   & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day   & 0x0FU) << RTC_DR_DU_Pos));
1528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT | RT
1530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get date (WeekDay, Day, Month and Year) in BCD format
1534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_YEAR, __LL_RTC_GET_MONTH,
1537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
1538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_Get\n
1539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MT            LL_RTC_DATE_Get\n
1540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_Get\n
1541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DT            LL_RTC_DATE_Get\n
1542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_Get\n
1543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YT            LL_RTC_DATE_Get\n
1544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_Get
1545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of WeekDay, Day, Month and Year (Format: 0xWWDDMMYY).
1547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_Get(RTC_TypeDef *RTCx)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 238


1549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t temp;
1551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT
1553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp &              RTC_DR_WDU) >> RTC_DR_WDU_Pos) << RTC_OFFSET_WEEKDAY) | 
1555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                     (((temp & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos)  << RTC_OFFSET_DAY)     | 
1556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                     (((temp & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos)  << RTC_OFFSET_MONTH)   | 
1557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                      ((temp & (RTC_DR_YT | RTC_DR_YU)) >> RTC_DR_YU_Pos));
1558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
1562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_ALARMA ALARMA
1565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
1566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Alarm A
1570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ALRAE         LL_RTC_ALMA_Enable
1572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Enable(RTC_TypeDef *RTCx)
1576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRAE);
1578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Alarm A
1582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ALRAE         LL_RTC_ALMA_Disable
1584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Disable(RTC_TypeDef *RTCx)
1588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRAE);
1590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Specify the Alarm A masks.
1594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MSK4          LL_RTC_ALMA_SetMask\n
1595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK3          LL_RTC_ALMA_SetMask\n
1596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK2          LL_RTC_ALMA_SetMask\n
1597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK1          LL_RTC_ALMA_SetMask
1598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
1600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
1601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
1602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
1603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 239


1606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMask(RTC_TypeDef *RTCx, uint32_t Mask)
1609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RTC_ALRMAR_MSK1, M
1611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get the Alarm A masks.
1615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MSK4          LL_RTC_ALMA_GetMask\n
1616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK3          LL_RTC_ALMA_GetMask\n
1617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK2          LL_RTC_ALMA_GetMask\n
1618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK1          LL_RTC_ALMA_GetMask
1619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be can be a combination of the following values:
1621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
1622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
1623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
1624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
1625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
1626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
1627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMask(RTC_TypeDef *RTCx)
1629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RT
1631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable AlarmA Week day selection (DU[3:0] represents the week day. DT[1:0] is do not ca
1635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       WDSEL         LL_RTC_ALMA_EnableWeekday
1636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_EnableWeekday(RTC_TypeDef *RTCx)
1640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
1642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable AlarmA Week day selection (DU[3:0] represents the date )
1646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       WDSEL         LL_RTC_ALMA_DisableWeekday
1647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_DisableWeekday(RTC_TypeDef *RTCx)
1651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
1653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Day in BCD format
1657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
1658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DT            LL_RTC_ALMA_SetDay\n
1659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       DU            LL_RTC_ALMA_SetDay
1660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 240


1663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
1665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU),
1667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_ALRMAR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_ALRMAR_DU_Pos)));
1668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Day in BCD format
1672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
1673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DT            LL_RTC_ALMA_GetDay\n
1674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       DU            LL_RTC_ALMA_GetDay
1675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
1677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetDay(RTC_TypeDef *RTCx)
1679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU))) >> RTC_ALRMAR_DU_Pos)
1681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Weekday
1685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DU            LL_RTC_ALMA_SetWeekDay
1686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
1698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_DU, WeekDay << RTC_ALRMAR_DU_Pos);
1700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Weekday
1704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DU            LL_RTC_ALMA_GetWeekDay
1705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetWeekDay(RTC_TypeDef *RTCx)
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_DU) >> RTC_ALRMAR_DU_Pos);
1718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 241


1720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm A time format (AM/24-hour or PM notation)
1722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_SetTimeFormat
1723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
1725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetTimeFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
1730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM, TimeFormat);
1732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm A time format (AM or PM notation)
1736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_GetTimeFormat
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTimeFormat(RTC_TypeDef *RTCx)
1743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_PM));
1745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Hours in BCD format
1749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Hours from binary to BCD fo
1750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_SetHour\n
1751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_SetHour
1752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
1757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU),
1759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_ALRMAR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALRMAR_HU_Pos
1760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Hours in BCD format
1764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
1765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_GetHour\n
1766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_GetHour
1767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
1769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetHour(RTC_TypeDef *RTCx)
1771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU))) >> RTC_ALRMAR_HU_Pos)
1773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Minutes in BCD format
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 242


1777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
1778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MNT           LL_RTC_ALMA_SetMinute\n
1779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_SetMinute
1780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
1785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU),
1787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_M
1788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Minutes in BCD format
1792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
1793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MNT           LL_RTC_ALMA_GetMinute\n
1794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_GetMinute
1795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMinute(RTC_TypeDef *RTCx)
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU))) >> RTC_ALRMAR_MNU_P
1801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Seconds in BCD format
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
1806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       ST            LL_RTC_ALMA_SetSecond\n
1807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_SetSecond
1808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
1813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU),
1815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_ALRMAR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMAR_SU
1816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Seconds in BCD format
1820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
1821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       ST            LL_RTC_ALMA_GetSecond\n
1822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_GetSecond
1823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSecond(RTC_TypeDef *RTCx)
1827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU))) >> RTC_ALRMAR_SU_Pos)
1829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm A Time (hour, minute and second) in BCD format
1833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_ConfigTime\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 243


1834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HT            LL_RTC_ALMA_ConfigTime\n
1835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_ConfigTime\n
1836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNT           LL_RTC_ALMA_ConfigTime\n
1837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_ConfigTime\n
1838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       ST            LL_RTC_ALMA_ConfigTime\n
1839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_ConfigTime
1840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
1842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_ConfigTime(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours
1850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t temp;
1852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = Format12_24                                                                               
1854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Hours   & 0xF0U) << (RTC_ALRMAR_HT_Pos  - 4U)) | ((Hours   & 0x0FU) << RTC_ALRMAR_HU_Po
1855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_MNU_P
1856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_ALRMAR_ST_Pos  - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMAR_SU_Po
1857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM | RTC_ALRMAR_HT | RTC_ALRMAR_HU | RTC_ALRMAR_MNT | RTC_ALR
1859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm B Time (hour, minute and second) in BCD format
1863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
1864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * are available to get independently each parameter.
1865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_GetTime\n
1866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_GetTime\n
1867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNT           LL_RTC_ALMA_GetTime\n
1868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_GetTime\n
1869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       ST            LL_RTC_ALMA_GetTime\n
1870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_GetTime
1871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
1873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTime(RTC_TypeDef *RTCx)
1875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_ALMA_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_ALMA_GetMinute(RTCx) <
1877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Mask the most-significant bits of the subseconds field starting from
1881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         the bit specified in parameter Mask
1882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note This register can be written only when ALRAE is reset in RTC_CR register,
1883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       or in initialization mode.
1884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     MASKSS        LL_RTC_ALMA_SetSubSecondMask
1885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask Value between Min_Data=0x00 and Max_Data=0xF
1887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecondMask(RTC_TypeDef *RTCx, uint32_t Mask)
1890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 244


1891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS, Mask << RTC_ALRMASSR_MASKSS_Pos);
1892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm A subseconds mask
1896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     MASKSS        LL_RTC_ALMA_GetSubSecondMask
1897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xF
1899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecondMask(RTC_TypeDef *RTCx)
1901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS) >> RTC_ALRMASSR_MASKSS_Pos);
1903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm A subseconds value
1907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     SS            LL_RTC_ALMA_SetSubSecond
1908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Subsecond Value between Min_Data=0x00 and Max_Data=0x7FFF
1910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
1913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_SS, Subsecond);
1915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm A subseconds value
1919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     SS            LL_RTC_ALMA_GetSubSecond
1920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7FFF
1922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecond(RTC_TypeDef *RTCx)
1924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_SS));
1926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
1930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_ALARMB ALARMB
1933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
1934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Alarm B
1938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ALRBE         LL_RTC_ALMB_Enable
1940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_Enable(RTC_TypeDef *RTCx)
1944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRBE);
1946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 245


1948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Alarm B
1950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ALRBE         LL_RTC_ALMB_Disable
1952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_Disable(RTC_TypeDef *RTCx)
1956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRBE);
1958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Specify the Alarm B masks.
1962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       MSK4          LL_RTC_ALMB_SetMask\n
1963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK3          LL_RTC_ALMB_SetMask\n
1964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK2          LL_RTC_ALMB_SetMask\n
1965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK1          LL_RTC_ALMB_SetMask
1966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
1968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_NONE
1969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_DATEWEEKDAY
1970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_HOURS
1971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_MINUTES
1972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_SECONDS
1973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_ALL
1974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetMask(RTC_TypeDef *RTCx, uint32_t Mask)
1977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | RTC_ALRMBR_MSK1, M
1979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get the Alarm B masks.
1983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       MSK4          LL_RTC_ALMB_GetMask\n
1984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK3          LL_RTC_ALMB_GetMask\n
1985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK2          LL_RTC_ALMB_GetMask\n
1986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK1          LL_RTC_ALMB_GetMask
1987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be can be a combination of the following values:
1989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_NONE
1990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_DATEWEEKDAY
1991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_HOURS
1992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_MINUTES
1993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_SECONDS
1994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_ALL
1995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetMask(RTC_TypeDef *RTCx)
1997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | RT
1999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable AlarmB Week day selection (DU[3:0] represents the week day. DT[1:0] is do not ca
2003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       WDSEL         LL_RTC_ALMB_EnableWeekday
2004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 246


2005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_EnableWeekday(RTC_TypeDef *RTCx)
2008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->ALRMBR, RTC_ALRMBR_WDSEL);
2010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable AlarmB Week day selection (DU[3:0] represents the date )
2014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       WDSEL         LL_RTC_ALMB_DisableWeekday
2015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_DisableWeekday(RTC_TypeDef *RTCx)
2019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ALRMBR, RTC_ALRMBR_WDSEL);
2021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Day in BCD format
2025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
2026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       DT            LL_RTC_ALMB_SetDay\n
2027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       DU            LL_RTC_ALMB_SetDay
2028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
2030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
2033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_DT | RTC_ALRMBR_DU),
2035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_ALRMBR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_ALRMBR_DU_Pos)));
2036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Day in BCD format
2040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
2041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       DT            LL_RTC_ALMB_GetDay\n
2042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       DU            LL_RTC_ALMB_GetDay
2043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
2045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetDay(RTC_TypeDef *RTCx)
2047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_DT | RTC_ALRMBR_DU))) >> RTC_ALRMBR_DU_Pos)
2049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Weekday
2053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       DU            LL_RTC_ALMB_SetWeekDay
2054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
2056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 247


2062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
2066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_DU, WeekDay << RTC_ALRMBR_DU_Pos);
2068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Weekday
2072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       DU            LL_RTC_ALMB_GetWeekDay
2073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetWeekDay(RTC_TypeDef *RTCx)
2084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_DU) >> RTC_ALRMBR_DU_Pos);
2086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B time format (AM/24-hour or PM notation)
2090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       PM            LL_RTC_ALMB_SetTimeFormat
2091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
2093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetTimeFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
2098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_PM, TimeFormat);
2100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B time format (AM or PM notation)
2104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       PM            LL_RTC_ALMB_GetTimeFormat
2105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetTimeFormat(RTC_TypeDef *RTCx)
2111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_PM));
2113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Hours in BCD format
2117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Hours from binary to BCD fo
2118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       HT            LL_RTC_ALMB_SetHour\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 248


2119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_SetHour
2120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
2125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_HT | RTC_ALRMBR_HU),
2127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_ALRMBR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALRMBR_HU_Pos
2128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Hours in BCD format
2132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       HT            LL_RTC_ALMB_GetHour\n
2134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_GetHour
2135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetHour(RTC_TypeDef *RTCx)
2139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_HT | RTC_ALRMBR_HU))) >> RTC_ALRMBR_HU_Pos)
2141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Minutes in BCD format
2145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
2146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       MNT           LL_RTC_ALMB_SetMinute\n
2147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_SetMinute
2148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes between Min_Data=0x00 and Max_Data=0x59
2150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU),
2155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_ALRMBR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMBR_M
2156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Minutes in BCD format
2160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
2161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       MNT           LL_RTC_ALMB_GetMinute\n
2162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_GetMinute
2163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetMinute(RTC_TypeDef *RTCx)
2167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU))) >> RTC_ALRMBR_MNU_P
2169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Seconds in BCD format
2173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
2174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       ST            LL_RTC_ALMB_SetSecond\n
2175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_SetSecond
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 249


2176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
2181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_ST | RTC_ALRMBR_SU),
2183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_ALRMBR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMBR_SU
2184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Seconds in BCD format
2188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
2189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       ST            LL_RTC_ALMB_GetSecond\n
2190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_GetSecond
2191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSecond(RTC_TypeDef *RTCx)
2195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_ST | RTC_ALRMBR_SU))) >> RTC_ALRMBR_SU_Pos)
2197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm B Time (hour, minute and second) in BCD format
2201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       PM            LL_RTC_ALMB_ConfigTime\n
2202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HT            LL_RTC_ALMB_ConfigTime\n
2203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_ConfigTime\n
2204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNT           LL_RTC_ALMB_ConfigTime\n
2205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_ConfigTime\n
2206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       ST            LL_RTC_ALMB_ConfigTime\n
2207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_ConfigTime
2208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
2210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
2214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_ConfigTime(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours
2218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t temp;
2220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = Format12_24                                                                               
2222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Hours   & 0xF0U) << (RTC_ALRMBR_HT_Pos  - 4U)) | ((Hours   & 0x0FU) << RTC_ALRMBR_HU_Po
2223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMBR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMBR_MNU_P
2224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_ALRMBR_ST_Pos  - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMBR_SU_Po
2225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_PM | RTC_ALRMBR_HT | RTC_ALRMBR_HU | RTC_ALRMBR_MNT | RTC_ALR
2227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm B Time (hour, minute and second) in BCD format
2231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
2232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * are available to get independently each parameter.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 250


2233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       HT            LL_RTC_ALMB_GetTime\n
2234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_GetTime\n
2235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNT           LL_RTC_ALMB_GetTime\n
2236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_GetTime\n
2237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       ST            LL_RTC_ALMB_GetTime\n
2238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_GetTime
2239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
2241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetTime(RTC_TypeDef *RTCx)
2243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_ALMB_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_ALMB_GetMinute(RTCx) <
2245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Mask the most-significant bits of the subseconds field starting from
2249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         the bit specified in parameter Mask
2250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note This register can be written only when ALRBE is reset in RTC_CR register,
2251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       or in initialization mode.
2252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     MASKSS        LL_RTC_ALMB_SetSubSecondMask
2253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask Value between Min_Data=0x00 and Max_Data=0xF
2255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSubSecondMask(RTC_TypeDef *RTCx, uint32_t Mask)
2258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBSSR, RTC_ALRMBSSR_MASKSS, Mask << RTC_ALRMBSSR_MASKSS_Pos);
2260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm B subseconds mask
2264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     MASKSS        LL_RTC_ALMB_GetSubSecondMask
2265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xF
2267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSubSecondMask(RTC_TypeDef *RTCx)
2269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBSSR, RTC_ALRMBSSR_MASKSS)  >> RTC_ALRMBSSR_MASKSS_Pos);
2271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm B subseconds value
2275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     SS            LL_RTC_ALMB_SetSubSecond
2276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Subsecond Value between Min_Data=0x00 and Max_Data=0x7FFF
2278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
2281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBSSR, RTC_ALRMBSSR_SS, Subsecond);
2283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm B subseconds value
2287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     SS            LL_RTC_ALMB_GetSubSecond
2288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7FFF
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 251


2290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSubSecond(RTC_TypeDef *RTCx)
2292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBSSR, RTC_ALRMBSSR_SS));
2294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
2298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Timestamp Timestamp
2301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
2302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Timestamp
2306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           TSE           LL_RTC_TS_Enable
2308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Enable(RTC_TypeDef *RTCx)
2312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_TSE);
2314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Timestamp
2318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           TSE           LL_RTC_TS_Disable
2320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Disable(RTC_TypeDef *RTCx)
2324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_TSE);
2326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Time-stamp event active edge
2330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note TSE must be reset when TSEDGE is changed to avoid unwanted TSF setting
2332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           TSEDGE        LL_RTC_TS_SetActiveEdge
2333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Edge This parameter can be one of the following values:
2335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_SetActiveEdge(RTC_TypeDef *RTCx, uint32_t Edge)
2340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_TSEDGE, Edge);
2342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Time-stamp event active edge
2346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 252


2347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           TSEDGE        LL_RTC_TS_GetActiveEdge
2348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetActiveEdge(RTC_TypeDef *RTCx)
2354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_TSEDGE));
2356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp AM/PM notation (AM or 24-hour format)
2360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         PM            LL_RTC_TS_GetTimeFormat
2361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_AM
2364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_PM
2365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTimeFormat(RTC_TypeDef *RTCx)
2367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_PM));
2369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Hours in BCD format
2373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         HT            LL_RTC_TS_GetHour\n
2375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         HU            LL_RTC_TS_GetHour
2376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetHour(RTC_TypeDef *RTCx)
2380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_HT | RTC_TSTR_HU) >> RTC_TSTR_HU_Pos);
2382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Minutes in BCD format
2386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
2387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         MNT           LL_RTC_TS_GetMinute\n
2388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         MNU           LL_RTC_TS_GetMinute
2389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMinute(RTC_TypeDef *RTCx)
2393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_MNT | RTC_TSTR_MNU) >> RTC_TSTR_MNU_Pos);
2395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Seconds in BCD format
2399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
2400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         ST            LL_RTC_TS_GetSecond\n
2401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         SU            LL_RTC_TS_GetSecond
2402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 253


2404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSecond(RTC_TypeDef *RTCx)
2406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_ST | RTC_TSTR_SU));
2408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp time (hour, minute and second) in BCD format
2412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
2413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * are available to get independently each parameter.
2414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         HT            LL_RTC_TS_GetTime\n
2415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         HU            LL_RTC_TS_GetTime\n
2416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         MNT           LL_RTC_TS_GetTime\n
2417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         MNU           LL_RTC_TS_GetTime\n
2418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         ST            LL_RTC_TS_GetTime\n
2419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         SU            LL_RTC_TS_GetTime
2420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
2422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTime(RTC_TypeDef *RTCx)
2424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR,
2426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                              RTC_TSTR_HT | RTC_TSTR_HU | RTC_TSTR_MNT | RTC_TSTR_MNU | RTC_TSTR_ST 
2427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Week day
2431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSDR         WDU           LL_RTC_TS_GetWeekDay
2432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetWeekDay(RTC_TypeDef *RTCx)
2443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU) >> RTC_TSDR_WDU_Pos);
2445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Month in BCD format
2449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
2450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSDR         MT            LL_RTC_TS_GetMonth\n
2451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         MU            LL_RTC_TS_GetMonth
2452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
2455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
2456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
2457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
2458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
2459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
2460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 254


2461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
2462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
2463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
2464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
2465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
2466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMonth(RTC_TypeDef *RTCx)
2468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_MT | RTC_TSDR_MU) >> RTC_TSDR_MU_Pos);
2470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Day in BCD format
2474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
2475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSDR         DT            LL_RTC_TS_GetDay\n
2476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         DU            LL_RTC_TS_GetDay
2477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
2479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDay(RTC_TypeDef *RTCx)
2481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_DT | RTC_TSDR_DU));
2483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp date (WeekDay, Day and Month) in BCD format
2487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_MONTH,
2488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
2489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSDR         WDU           LL_RTC_TS_GetDate\n
2490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         MT            LL_RTC_TS_GetDate\n
2491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         MU            LL_RTC_TS_GetDate\n
2492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         DT            LL_RTC_TS_GetDate\n
2493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         DU            LL_RTC_TS_GetDate
2494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of Weekday, Day and Month
2496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDate(RTC_TypeDef *RTCx)
2498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU | RTC_TSDR_MT | RTC_TSDR_MU | RTC_TSDR_DT | R
2500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get time-stamp subseconds value
2504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSSSR        SS            LL_RTC_TS_GetSubSecond
2505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
2507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSubSecond(RTC_TypeDef *RTCx)
2509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSSSR, RTC_TSSSR_SS));
2511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPTS)
2514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Activate timestamp on tamper detection event
2516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPTS        LL_RTC_TS_EnableOnTamper
2517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 255


2518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_EnableOnTamper(RTC_TypeDef *RTCx)
2521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPTS);
2523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable timestamp on tamper detection event
2527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPTS        LL_RTC_TS_DisableOnTamper
2528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_DisableOnTamper(RTC_TypeDef *RTCx)
2532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPTS);
2534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPTS */
2536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
2539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Tamper Tamper
2542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
2543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx input detection
2547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1E        LL_RTC_TAMPER_Enable\n
2548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2E        LL_RTC_TAMPER_Enable\n
2549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3E        LL_RTC_TAMPER_Enable
2550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1 (*)
2553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2
2554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_3 (*)
2555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
2556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not applicable to all devices.
2557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Enable(RTC_TypeDef *RTCx, uint32_t Tamper)
2560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Tamper);
2562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear RTC_TAMPx input detection
2566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1E        LL_RTC_TAMPER_Disable\n
2567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2E        LL_RTC_TAMPER_Disable\n
2568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3E        LL_RTC_TAMPER_Disable
2569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1 (*)
2572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2
2573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_3 (*)
2574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 256


2575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not applicable to all devices.
2576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Disable(RTC_TypeDef *RTCx, uint32_t Tamper)
2579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Tamper);
2581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Tamper mask flag
2585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Associated Tamper IT must not enabled when tamper mask is set.
2586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1MF       LL_RTC_TAMPER_EnableMask\n
2587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2MF       LL_RTC_TAMPER_EnableMask\n
2588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3MF       LL_RTC_TAMPER_EnableMask
2589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
2591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER1 (*)
2592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER2
2593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER3 (*)
2594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
2595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not applicable to all devices.
2596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableMask(RTC_TypeDef *RTCx, uint32_t Mask)
2599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Mask);
2601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Tamper mask flag
2605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1MF       LL_RTC_TAMPER_DisableMask\n
2606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2MF       LL_RTC_TAMPER_DisableMask\n
2607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3MF       LL_RTC_TAMPER_DisableMask
2608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
2610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER1 (*)
2611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER2
2612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER3 (*)
2613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
2614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not applicable to all devices.
2615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableMask(RTC_TypeDef *RTCx, uint32_t Mask)
2618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Mask);
2620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable backup register erase after Tamper event detection
2624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1NOERASE  LL_RTC_TAMPER_EnableEraseBKP\n
2625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2NOERASE  LL_RTC_TAMPER_EnableEraseBKP\n
2626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3NOERASE  LL_RTC_TAMPER_EnableEraseBKP
2627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER1 (*)
2630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER2
2631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER3 (*)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 257


2632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
2633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not applicable to all devices.
2634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableEraseBKP(RTC_TypeDef *RTCx, uint32_t Tamper)
2637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Tamper);
2639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable backup register erase after Tamper event detection
2643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1NOERASE  LL_RTC_TAMPER_DisableEraseBKP\n
2644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2NOERASE  LL_RTC_TAMPER_DisableEraseBKP\n
2645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3NOERASE  LL_RTC_TAMPER_DisableEraseBKP
2646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER1 (*)
2649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER2
2650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER3 (*)
2651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
2652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not applicable to all devices.
2653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableEraseBKP(RTC_TypeDef *RTCx, uint32_t Tamper)
2656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Tamper);
2658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable RTC_TAMPx pull-up disable (Disable precharge of RTC_TAMPx pins)
2662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPUDIS     LL_RTC_TAMPER_DisablePullUp
2663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisablePullUp(RTC_TypeDef *RTCx)
2667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPPUDIS);
2669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx pull-up disable ( Precharge RTC_TAMPx pins before sampling)
2673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPUDIS     LL_RTC_TAMPER_EnablePullUp
2674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnablePullUp(RTC_TypeDef *RTCx)
2678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPPUDIS);
2680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx precharge duration
2684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPRCH      LL_RTC_TAMPER_SetPrecharge
2685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Duration This parameter can be one of the following values:
2687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
2688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 258


2689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
2690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
2691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetPrecharge(RTC_TypeDef *RTCx, uint32_t Duration)
2694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAMPCR, RTC_TAMPCR_TAMPPRCH, Duration);
2696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx precharge duration
2700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPRCH      LL_RTC_TAMPER_GetPrecharge
2701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
2704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
2705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
2706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
2707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetPrecharge(RTC_TypeDef *RTCx)
2709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPPRCH));
2711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx filter count
2715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFLT       LL_RTC_TAMPER_SetFilterCount
2716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  FilterCount This parameter can be one of the following values:
2718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
2719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
2720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
2721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
2722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetFilterCount(RTC_TypeDef *RTCx, uint32_t FilterCount)
2725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAMPCR, RTC_TAMPCR_TAMPFLT, FilterCount);
2727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx filter count
2731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFLT       LL_RTC_TAMPER_GetFilterCount
2732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
2735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
2736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
2737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
2738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetFilterCount(RTC_TypeDef *RTCx)
2740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPFLT));
2742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Tamper sampling frequency
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 259


2746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFREQ      LL_RTC_TAMPER_SetSamplingFreq
2747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  SamplingFreq This parameter can be one of the following values:
2749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
2750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
2751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
2752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
2753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
2754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
2755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
2756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
2757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetSamplingFreq(RTC_TypeDef *RTCx, uint32_t SamplingFreq)
2760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAMPCR, RTC_TAMPCR_TAMPFREQ, SamplingFreq);
2762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Tamper sampling frequency
2766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFREQ      LL_RTC_TAMPER_GetSamplingFreq
2767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
2770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
2771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
2772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
2773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
2774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
2775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
2776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
2777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetSamplingFreq(RTC_TypeDef *RTCx)
2779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPFREQ));
2781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Active level for Tamper input
2785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1TRG      LL_RTC_TAMPER_EnableActiveLevel\n
2786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2TRG      LL_RTC_TAMPER_EnableActiveLevel\n
2787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3TRG      LL_RTC_TAMPER_EnableActiveLevel
2788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1 (*)
2791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2
2792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP3 (*)
2793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
2794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not applicable to all devices.
2795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
2798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Tamper);
2800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 260


2803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Active level for Tamper input
2804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1TRG      LL_RTC_TAMPER_DisableActiveLevel\n
2805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2TRG      LL_RTC_TAMPER_DisableActiveLevel\n
2806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3TRG      LL_RTC_TAMPER_DisableActiveLevel
2807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1 (*)
2810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2
2811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP3 (*)
2812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
2813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not applicable to all devices.
2814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
2817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Tamper);
2819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
2823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Wakeup Wakeup
2826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
2827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Wakeup timer
2831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_Enable
2833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Enable(RTC_TypeDef *RTCx)
2837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_WUTE);
2839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Wakeup timer
2843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_Disable
2845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Disable(RTC_TypeDef *RTCx)
2849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_WUTE);
2851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Check if Wakeup timer is enabled or not
2855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_IsEnabled
2856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_IsEnabled(RTC_TypeDef *RTCx)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 261


2860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return ((READ_BIT(RTCx->CR, RTC_CR_WUTE) == (RTC_CR_WUTE)) ? 1UL : 0UL);
2862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Select Wakeup clock
2866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit can be written only when RTC_CR WUTE bit = 0 and RTC_ISR WUTWF bit = 1
2868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           WUCKSEL       LL_RTC_WAKEUP_SetClock
2869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WakeupClock This parameter can be one of the following values:
2871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_16
2872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_8
2873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_4
2874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_2
2875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE
2876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE_WUT
2877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetClock(RTC_TypeDef *RTCx, uint32_t WakeupClock)
 1204              		.loc 10 2879 22 view .LVU367
 1205              	.LBB245:
2880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_WUCKSEL, WakeupClock);
 1206              		.loc 10 2881 3 view .LVU368
 1207 0042 A368     		ldr	r3, [r4, #8]
 1208 0044 0722     		movs	r2, #7
 1209 0046 9343     		bics	r3, r2
 1210 0048 2B43     		orrs	r3, r5
 1211 004a A360     		str	r3, [r4, #8]
 1212              	.LVL66:
 1213              		.loc 10 2881 3 is_stmt 0 view .LVU369
 1214              	.LBE245:
 1215              	.LBE244:
 373:Core/Src/main.c **** 
 1216              		.loc 1 373 1 view .LVU370
 1217 004c 05B0     		add	sp, sp, #20
 1218              		@ sp needed
 1219 004e 30BD     		pop	{r4, r5, pc}
 1220              	.L17:
 1221              		.align	2
 1222              	.L16:
 1223 0050 00100240 		.word	1073876992
 1224 0054 00E100E0 		.word	-536813312
 1225 0058 FFFF00FF 		.word	-16711681
 1226 005c 00280040 		.word	1073752064
 1227              		.cfi_endproc
 1228              	.LFE938:
 1230              		.section	.text.MX_SPI1_Init,"ax",%progbits
 1231              		.align	1
 1232              		.syntax unified
 1233              		.code	16
 1234              		.thumb_func
 1236              	MX_SPI1_Init:
 1237              	.LFB939:
 381:Core/Src/main.c **** 
 1238              		.loc 1 381 1 is_stmt 1 view -0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 262


 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 72
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242 0000 70B5     		push	{r4, r5, r6, lr}
 1243              	.LCFI9:
 1244              		.cfi_def_cfa_offset 16
 1245              		.cfi_offset 4, -16
 1246              		.cfi_offset 5, -12
 1247              		.cfi_offset 6, -8
 1248              		.cfi_offset 14, -4
 1249 0002 92B0     		sub	sp, sp, #72
 1250              	.LCFI10:
 1251              		.cfi_def_cfa_offset 88
 387:Core/Src/main.c **** 
 1252              		.loc 1 387 3 view .LVU372
 387:Core/Src/main.c **** 
 1253              		.loc 1 387 22 is_stmt 0 view .LVU373
 1254 0004 2822     		movs	r2, #40
 1255 0006 0021     		movs	r1, #0
 1256 0008 08A8     		add	r0, sp, #32
 1257 000a FFF7FEFF 		bl	memset
 1258              	.LVL67:
 389:Core/Src/main.c **** 
 1259              		.loc 1 389 3 is_stmt 1 view .LVU374
 389:Core/Src/main.c **** 
 1260              		.loc 1 389 23 is_stmt 0 view .LVU375
 1261 000e 1822     		movs	r2, #24
 1262 0010 0021     		movs	r1, #0
 1263 0012 02A8     		add	r0, sp, #8
 1264 0014 FFF7FEFF 		bl	memset
 1265              	.LVL68:
 392:Core/Src/main.c **** 
 1266              		.loc 1 392 3 is_stmt 1 view .LVU376
 1267              	.LBB246:
 1268              	.LBI246:
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 1269              		.loc 2 784 22 view .LVU377
 1270              	.LBB247:
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 1271              		.loc 2 786 3 view .LVU378
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1272              		.loc 2 787 3 view .LVU379
 1273 0018 214B     		ldr	r3, .L19
 1274 001a 596B     		ldr	r1, [r3, #52]
 1275 001c 8020     		movs	r0, #128
 1276 001e 4001     		lsls	r0, r0, #5
 1277 0020 0143     		orrs	r1, r0
 1278 0022 5963     		str	r1, [r3, #52]
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1279              		.loc 2 789 3 view .LVU380
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1280              		.loc 2 789 12 is_stmt 0 view .LVU381
 1281 0024 5A6B     		ldr	r2, [r3, #52]
 1282 0026 0240     		ands	r2, r0
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1283              		.loc 2 789 10 view .LVU382
 1284 0028 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 263


 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 1285              		.loc 2 790 3 is_stmt 1 view .LVU383
 1286 002a 019A     		ldr	r2, [sp, #4]
 1287              	.LVL69:
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 1288              		.loc 2 790 3 is_stmt 0 view .LVU384
 1289              	.LBE247:
 1290              	.LBE246:
 394:Core/Src/main.c ****   /**SPI1 GPIO Configuration
 1291              		.loc 1 394 3 is_stmt 1 view .LVU385
 1292              	.LBB248:
 1293              	.LBI248:
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 1294              		.loc 2 985 22 view .LVU386
 1295              	.LBB249:
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 1296              		.loc 2 987 3 view .LVU387
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1297              		.loc 2 988 3 view .LVU388
 1298 002c D96A     		ldr	r1, [r3, #44]
 1299 002e 0122     		movs	r2, #1
 1300 0030 1143     		orrs	r1, r2
 1301 0032 D962     		str	r1, [r3, #44]
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1302              		.loc 2 990 3 view .LVU389
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1303              		.loc 2 990 12 is_stmt 0 view .LVU390
 1304 0034 DB6A     		ldr	r3, [r3, #44]
 1305 0036 1A40     		ands	r2, r3
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1306              		.loc 2 990 10 view .LVU391
 1307 0038 0092     		str	r2, [sp]
 1308              		.loc 2 991 3 is_stmt 1 view .LVU392
 1309 003a 009B     		ldr	r3, [sp]
 1310              	.LVL70:
 1311              		.loc 2 991 3 is_stmt 0 view .LVU393
 1312              	.LBE249:
 1313              	.LBE248:
 399:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1314              		.loc 1 399 3 is_stmt 1 view .LVU394
 399:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1315              		.loc 1 399 23 is_stmt 0 view .LVU395
 1316 003c 2023     		movs	r3, #32
 1317 003e 0293     		str	r3, [sp, #8]
 400:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 1318              		.loc 1 400 3 is_stmt 1 view .LVU396
 400:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 1319              		.loc 1 400 24 is_stmt 0 view .LVU397
 1320 0040 0226     		movs	r6, #2
 1321 0042 0396     		str	r6, [sp, #12]
 401:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1322              		.loc 1 401 3 is_stmt 1 view .LVU398
 401:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1323              		.loc 1 401 25 is_stmt 0 view .LVU399
 1324 0044 0324     		movs	r4, #3
 1325 0046 0494     		str	r4, [sp, #16]
 402:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 264


 1326              		.loc 1 402 3 is_stmt 1 view .LVU400
 403:Core/Src/main.c ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 1327              		.loc 1 403 3 view .LVU401
 404:Core/Src/main.c ****   LL_GPIO_Init(EPD_CLK_GPIO_Port, &GPIO_InitStruct);
 1328              		.loc 1 404 3 view .LVU402
 405:Core/Src/main.c **** 
 1329              		.loc 1 405 3 view .LVU403
 1330 0048 A025     		movs	r5, #160
 1331 004a ED05     		lsls	r5, r5, #23
 1332 004c 02A9     		add	r1, sp, #8
 1333 004e 2800     		movs	r0, r5
 1334 0050 FFF7FEFF 		bl	LL_GPIO_Init
 1335              	.LVL71:
 407:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1336              		.loc 1 407 3 view .LVU404
 407:Core/Src/main.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1337              		.loc 1 407 23 is_stmt 0 view .LVU405
 1338 0054 8023     		movs	r3, #128
 1339 0056 0293     		str	r3, [sp, #8]
 408:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 1340              		.loc 1 408 3 is_stmt 1 view .LVU406
 408:Core/Src/main.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 1341              		.loc 1 408 24 is_stmt 0 view .LVU407
 1342 0058 0396     		str	r6, [sp, #12]
 409:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1343              		.loc 1 409 3 is_stmt 1 view .LVU408
 409:Core/Src/main.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1344              		.loc 1 409 25 is_stmt 0 view .LVU409
 1345 005a 0494     		str	r4, [sp, #16]
 410:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1346              		.loc 1 410 3 is_stmt 1 view .LVU410
 410:Core/Src/main.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1347              		.loc 1 410 30 is_stmt 0 view .LVU411
 1348 005c 0024     		movs	r4, #0
 1349 005e 0594     		str	r4, [sp, #20]
 411:Core/Src/main.c ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 1350              		.loc 1 411 3 is_stmt 1 view .LVU412
 411:Core/Src/main.c ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 1351              		.loc 1 411 24 is_stmt 0 view .LVU413
 1352 0060 0694     		str	r4, [sp, #24]
 412:Core/Src/main.c ****   LL_GPIO_Init(EPD_DIN_GPIO_Port, &GPIO_InitStruct);
 1353              		.loc 1 412 3 is_stmt 1 view .LVU414
 412:Core/Src/main.c ****   LL_GPIO_Init(EPD_DIN_GPIO_Port, &GPIO_InitStruct);
 1354              		.loc 1 412 29 is_stmt 0 view .LVU415
 1355 0062 0794     		str	r4, [sp, #28]
 413:Core/Src/main.c **** 
 1356              		.loc 1 413 3 is_stmt 1 view .LVU416
 1357 0064 02A9     		add	r1, sp, #8
 1358 0066 2800     		movs	r0, r5
 1359 0068 FFF7FEFF 		bl	LL_GPIO_Init
 1360              	.LVL72:
 419:Core/Src/main.c ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 1361              		.loc 1 419 3 view .LVU417
 419:Core/Src/main.c ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 1362              		.loc 1 419 36 is_stmt 0 view .LVU418
 1363 006c 0894     		str	r4, [sp, #32]
 420:Core/Src/main.c ****   SPI_InitStruct.DataWidth = LL_SPI_DATAWIDTH_8BIT;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 265


 1364              		.loc 1 420 3 is_stmt 1 view .LVU419
 420:Core/Src/main.c ****   SPI_InitStruct.DataWidth = LL_SPI_DATAWIDTH_8BIT;
 1365              		.loc 1 420 23 is_stmt 0 view .LVU420
 1366 006e 8223     		movs	r3, #130
 1367 0070 5B00     		lsls	r3, r3, #1
 1368 0072 0993     		str	r3, [sp, #36]
 421:Core/Src/main.c ****   SPI_InitStruct.ClockPolarity = LL_SPI_POLARITY_LOW;
 1369              		.loc 1 421 3 is_stmt 1 view .LVU421
 421:Core/Src/main.c ****   SPI_InitStruct.ClockPolarity = LL_SPI_POLARITY_LOW;
 1370              		.loc 1 421 28 is_stmt 0 view .LVU422
 1371 0074 0A94     		str	r4, [sp, #40]
 422:Core/Src/main.c ****   SPI_InitStruct.ClockPhase = LL_SPI_PHASE_1EDGE;
 1372              		.loc 1 422 3 is_stmt 1 view .LVU423
 422:Core/Src/main.c ****   SPI_InitStruct.ClockPhase = LL_SPI_PHASE_1EDGE;
 1373              		.loc 1 422 32 is_stmt 0 view .LVU424
 1374 0076 0B94     		str	r4, [sp, #44]
 423:Core/Src/main.c ****   SPI_InitStruct.NSS = LL_SPI_NSS_SOFT;
 1375              		.loc 1 423 3 is_stmt 1 view .LVU425
 423:Core/Src/main.c ****   SPI_InitStruct.NSS = LL_SPI_NSS_SOFT;
 1376              		.loc 1 423 29 is_stmt 0 view .LVU426
 1377 0078 0C94     		str	r4, [sp, #48]
 424:Core/Src/main.c ****   SPI_InitStruct.BaudRate = LL_SPI_BAUDRATEPRESCALER_DIV2;
 1378              		.loc 1 424 3 is_stmt 1 view .LVU427
 424:Core/Src/main.c ****   SPI_InitStruct.BaudRate = LL_SPI_BAUDRATEPRESCALER_DIV2;
 1379              		.loc 1 424 22 is_stmt 0 view .LVU428
 1380 007a FC33     		adds	r3, r3, #252
 1381 007c 0D93     		str	r3, [sp, #52]
 425:Core/Src/main.c ****   SPI_InitStruct.BitOrder = LL_SPI_MSB_FIRST;
 1382              		.loc 1 425 3 is_stmt 1 view .LVU429
 425:Core/Src/main.c ****   SPI_InitStruct.BitOrder = LL_SPI_MSB_FIRST;
 1383              		.loc 1 425 27 is_stmt 0 view .LVU430
 1384 007e 0E94     		str	r4, [sp, #56]
 426:Core/Src/main.c ****   SPI_InitStruct.CRCCalculation = LL_SPI_CRCCALCULATION_DISABLE;
 1385              		.loc 1 426 3 is_stmt 1 view .LVU431
 426:Core/Src/main.c ****   SPI_InitStruct.CRCCalculation = LL_SPI_CRCCALCULATION_DISABLE;
 1386              		.loc 1 426 27 is_stmt 0 view .LVU432
 1387 0080 0F94     		str	r4, [sp, #60]
 427:Core/Src/main.c ****   SPI_InitStruct.CRCPoly = 7;
 1388              		.loc 1 427 3 is_stmt 1 view .LVU433
 427:Core/Src/main.c ****   SPI_InitStruct.CRCPoly = 7;
 1389              		.loc 1 427 33 is_stmt 0 view .LVU434
 1390 0082 1094     		str	r4, [sp, #64]
 428:Core/Src/main.c ****   LL_SPI_Init(SPI1, &SPI_InitStruct);
 1391              		.loc 1 428 3 is_stmt 1 view .LVU435
 428:Core/Src/main.c ****   LL_SPI_Init(SPI1, &SPI_InitStruct);
 1392              		.loc 1 428 26 is_stmt 0 view .LVU436
 1393 0084 FA3B     		subs	r3, r3, #250
 1394 0086 FF3B     		subs	r3, r3, #255
 1395 0088 1193     		str	r3, [sp, #68]
 429:Core/Src/main.c ****   LL_SPI_SetStandard(SPI1, LL_SPI_PROTOCOL_MOTOROLA);
 1396              		.loc 1 429 3 is_stmt 1 view .LVU437
 1397 008a 064C     		ldr	r4, .L19+4
 1398 008c 08A9     		add	r1, sp, #32
 1399 008e 2000     		movs	r0, r4
 1400 0090 FFF7FEFF 		bl	LL_SPI_Init
 1401              	.LVL73:
 430:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 266


 1402              		.loc 1 430 3 view .LVU438
 1403              	.LBB250:
 1404              	.LBI250:
 1405              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @file    stm32l0xx_ll_spi.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief   Header file of SPI LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * in the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #ifndef STM32L0xx_LL_SPI_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define STM32L0xx_LL_SPI_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #ifdef __cplusplus
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** extern "C" {
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #endif
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #include "stm32l0xx.h"
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #if defined (SPI1) || defined (SPI2)
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL SPI
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Private macros ------------------------------------------------------------*/
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Exported types ------------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_ES_INIT SPI Exported Init structure
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  SPI Init structures definition
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** typedef struct
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 267


  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t TransferDirection;       /*!< Specifies the SPI unidirectional or bidirectional data mod
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_TRANSFER_M
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t Mode;                    /*!< Specifies the SPI mode (Master/Slave).
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_MODE.
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t DataWidth;               /*!< Specifies the SPI data width.
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_DATAWIDTH.
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t ClockPolarity;           /*!< Specifies the serial clock steady state.
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_POLARITY.
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t ClockPhase;              /*!< Specifies the clock active edge for the bit capture.
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_PHASE.
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t NSS;                     /*!< Specifies whether the NSS signal is managed by hardware (N
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_NSS_MODE.
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t BaudRate;                /*!< Specifies the BaudRate prescaler value which will be used 
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BAUDRATEPR
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          @note The communication clock is derived from the master c
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t BitOrder;                /*!< Specifies whether data transfers start from MSB or LSB bit
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BIT_ORDER.
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t CRCCalculation;          /*!< Specifies if the CRC calculation is enabled or not.
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_CRC_CALCUL
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t CRCPoly;                 /*!< Specifies the polynomial used for the CRC calculation.
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter must be a number between Min_Data = 0x00 an
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** } LL_SPI_InitTypeDef;
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 268


 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Exported constants --------------------------------------------------------*/
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Constants SPI Exported Constants
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_GET_FLAG Get Flags Defines
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief    Flags defines which can be used with LL_SPI_ReadReg function
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_RXNE                     SPI_SR_RXNE               /*!< Rx buffer not empty flag 
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_TXE                      SPI_SR_TXE                /*!< Tx buffer empty flag     
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_BSY                      SPI_SR_BSY                /*!< Busy flag                
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_CRCERR                   SPI_SR_CRCERR             /*!< CRC error flag           
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_MODF                     SPI_SR_MODF               /*!< Mode fault flag          
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_OVR                      SPI_SR_OVR                /*!< Overrun flag             
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_FRE                      SPI_SR_FRE                /*!< TI mode frame format erro
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_IT IT Defines
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief    IT defines which can be used with LL_SPI_ReadReg and  LL_SPI_WriteReg functions
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CR2_RXNEIE                  SPI_CR2_RXNEIE            /*!< Rx buffer not empty inter
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CR2_TXEIE                   SPI_CR2_TXEIE             /*!< Tx buffer empty interrupt
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CR2_ERRIE                   SPI_CR2_ERRIE             /*!< Error interrupt enable   
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_MODE Operation Mode
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_MODE_MASTER                 (SPI_CR1_MSTR | SPI_CR1_SSI)    /*!< Master configuratio
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_MODE_SLAVE                  0x00000000U                     /*!< Slave configuration
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PROTOCOL Serial Protocol
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_MOTOROLA           0x00000000U               /*!< Motorola mode. Used as de
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_TI                 (SPI_CR2_FRF)             /*!< TI mode                  
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PHASE Clock Phase
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_PHASE_1EDGE                 0x00000000U               /*!< First clock transition is
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_PHASE_2EDGE                 (SPI_CR1_CPHA)            /*!< Second clock transition i
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 269


 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_POLARITY Clock Polarity
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_POLARITY_LOW                0x00000000U               /*!< Clock to 0 when idle */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_POLARITY_HIGH               (SPI_CR1_CPOL)            /*!< Clock to 1 when idle */
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BAUDRATEPRESCALER Baud Rate Prescaler
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV2      0x00000000U                                    /*!< Baud
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV4      (SPI_CR1_BR_0)                                 /*!< Baud
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV8      (SPI_CR1_BR_1)                                 /*!< Baud
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV16     (SPI_CR1_BR_1 | SPI_CR1_BR_0)                  /*!< Baud
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV32     (SPI_CR1_BR_2)                                 /*!< Baud
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV64     (SPI_CR1_BR_2 | SPI_CR1_BR_0)                  /*!< Baud
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV128    (SPI_CR1_BR_2 | SPI_CR1_BR_1)                  /*!< Baud
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV256    (SPI_CR1_BR_2 | SPI_CR1_BR_1 | SPI_CR1_BR_0)   /*!< Baud
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BIT_ORDER Transmission Bit Order
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_LSB_FIRST                   (SPI_CR1_LSBFIRST)        /*!< Data is transmitted/recei
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_MSB_FIRST                   0x00000000U               /*!< Data is transmitted/recei
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TRANSFER_MODE Transfer Mode
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_FULL_DUPLEX                 0x00000000U                          /*!< Full-Duplex mo
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SIMPLEX_RX                  (SPI_CR1_RXONLY)                     /*!< Simplex Rx mod
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_RX              (SPI_CR1_BIDIMODE)                   /*!< Half-Duplex Rx
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_TX              (SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE)  /*!< Half-Duplex Tx
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_NSS_MODE Slave Select Pin Mode
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_NSS_SOFT                    (SPI_CR1_SSM)                     /*!< NSS managed inter
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_INPUT              0x00000000U                       /*!< NSS pin used in I
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_OUTPUT             (((uint32_t)SPI_CR2_SSOE << 16U)) /*!< NSS pin used in O
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 270


 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DATAWIDTH Datawidth
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_8BIT              0x00000000U                       /*!< Data length for S
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_16BIT             (SPI_CR1_DFF)                     /*!< Data length for S
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_CALCULATION CRC Calculation
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_DISABLE      0x00000000U               /*!< CRC calculation disabled 
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_ENABLE       (SPI_CR1_CRCEN)           /*!< CRC calculation enabled  
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Exported macro ------------------------------------------------------------*/
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Macros SPI Exported Macros
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EM_WRITE_READ Common Write and read registers Macros
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Write a value in SPI register
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __REG__ Register to be written
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __VALUE__ Value to be written in the register
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Read a value in SPI register
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __REG__ Register to be read
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Register value
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 271


 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Exported functions --------------------------------------------------------*/
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Functions SPI Exported Functions
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_Configuration Configuration
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Enable SPI peripheral
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Enable
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Enable(SPI_TypeDef *SPIx)
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_SPE);
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Disable SPI peripheral
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   When disabling the SPI, follow the procedure described in the Reference Manual.
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Disable
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Disable(SPI_TypeDef *SPIx)
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if SPI peripheral is enabled
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_IsEnabled
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabled(SPI_TypeDef *SPIx)
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_SPE) == (SPI_CR1_SPE)) ? 1UL : 0UL);
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set SPI operation mode to Master or Slave
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_SetMode\n
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_SetMode
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  Mode This parameter can be one of the following values:
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetMode(SPI_TypeDef *SPIx, uint32_t Mode)
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI, Mode);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 272


 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get SPI operation mode (Master or Slave)
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_GetMode\n
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_GetMode
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetMode(SPI_TypeDef *SPIx)
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI));
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set serial protocol used
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_SetStandard
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  Standard This parameter can be one of the following values:
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetStandard(SPI_TypeDef *SPIx, uint32_t Standard)
 1406              		.loc 11 365 22 view .LVU439
 1407              	.LBB251:
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRF, Standard);
 1408              		.loc 11 367 3 view .LVU440
 1409 0094 6368     		ldr	r3, [r4, #4]
 1410 0096 1022     		movs	r2, #16
 1411 0098 9343     		bics	r3, r2
 1412 009a 6360     		str	r3, [r4, #4]
 1413              	.LVL74:
 1414              		.loc 11 367 3 is_stmt 0 view .LVU441
 1415              	.LBE251:
 1416              	.LBE250:
 435:Core/Src/main.c **** 
 1417              		.loc 1 435 1 view .LVU442
 1418 009c 12B0     		add	sp, sp, #72
 1419              		@ sp needed
 1420 009e 70BD     		pop	{r4, r5, r6, pc}
 1421              	.L20:
 1422              		.align	2
 1423              	.L19:
 1424 00a0 00100240 		.word	1073876992
 1425 00a4 00300140 		.word	1073819648
 1426              		.cfi_endproc
 1427              	.LFE939:
 1429              		.section	.text.SystemClock_Config,"ax",%progbits
 1430              		.align	1
 1431              		.global	SystemClock_Config
 1432              		.syntax unified
 1433              		.code	16
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 273


 1434              		.thumb_func
 1436              	SystemClock_Config:
 1437              	.LFB934:
 122:Core/Src/main.c ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_0);
 1438              		.loc 1 122 1 is_stmt 1 view -0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442 0000 10B5     		push	{r4, lr}
 1443              	.LCFI11:
 1444              		.cfi_def_cfa_offset 8
 1445              		.cfi_offset 4, -8
 1446              		.cfi_offset 14, -4
 123:Core/Src/main.c ****   while(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_0)
 1447              		.loc 1 123 3 view .LVU444
 1448              	.LVL75:
 1449              	.LBB252:
 1450              	.LBI252:
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get the configured defined for specific EXTI Line
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTI0         LL_SYSCFG_SetEXTISource\n
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI1         LL_SYSCFG_SetEXTISource\n
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI2         LL_SYSCFG_SetEXTISource\n
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI3         LL_SYSCFG_SetEXTISource\n
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI4         LL_SYSCFG_SetEXTISource\n
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI5         LL_SYSCFG_SetEXTISource\n
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI6         LL_SYSCFG_SetEXTISource\n
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI7         LL_SYSCFG_SetEXTISource\n
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI8         LL_SYSCFG_SetEXTISource\n
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI9         LL_SYSCFG_SetEXTISource\n
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI10        LL_SYSCFG_SetEXTISource\n
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI11        LL_SYSCFG_SetEXTISource\n
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI12        LL_SYSCFG_SetEXTISource\n
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI13        LL_SYSCFG_SetEXTISource\n
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI14        LL_SYSCFG_SetEXTISource\n
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI15        LL_SYSCFG_SetEXTISource
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 274


 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD (*)
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE (*)
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTH (*)
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetEXTISource(uint32_t Line)
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->EXTICR[Line & 0xFFU], (SYSCFG_EXTICR1_EXTI0 << (Line >> 16U)))
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Return the device identifier
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0x7FF (ex: L053 -> 0x417, L073 -> 0x447)
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Return the device revision identifier
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note This field indicates the revision of the device.
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> DBGMCU_IDCODE_REV_ID_Pos);
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Enable the Debug Module during SLEEP mode
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_EnableDBGSleepMode
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGSleepMode(void)
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Disable the Debug Module during SLEEP mode
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_DisableDBGSleepMode
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 275


 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGSleepMode(void)
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll APB1FZ      DBG_TIM2_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM3_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM6_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM7_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_RTC_STOP      LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_WWDG_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_IWDG_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C1_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 276


 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C2_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C3_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_LPTIMER_STOP  LL_DBGMCU_APB1_GRP1_FreezePeriph
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP (*)
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP (*)
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP (*)
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP (*)
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->APB1FZ, Periphs);
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll APB1FZ      DBG_TIM2_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM3_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM6_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM7_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_RTC_STOP      LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_WWDG_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_IWDG_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C1_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C2_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C3_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_LPTIMER_STOP  LL_DBGMCU_APB1_GRP1_UnFreezePeriph
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP (*)
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP (*)
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP (*)
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP (*)
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB1FZ, Periphs);
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 277


 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Freeze APB2 peripherals
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll APB2FZ      DBG_TIM22_STOP  LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB2FZ      DBG_TIM21_STOP  LL_DBGMCU_APB2_GRP1_FreezePeriph
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM22_STOP (*)
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM21_STOP
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_FreezePeriph(uint32_t Periphs)
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->APB2FZ, Periphs);
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Unfreeze APB2 peripherals
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll APB2FZ      DBG_TIM22_STOP  LL_DBGMCU_APB2_GRP1_UnFreezePeriph\n
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB2FZ      DBG_TIM21_STOP  LL_DBGMCU_APB2_GRP1_UnFreezePeriph
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM22_STOP (*)
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM21_STOP
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_UnFreezePeriph(uint32_t Periphs)
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB2FZ, Periphs);
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_FLASH FLASH
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Set FLASH Latency
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_SetLatency
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Latency This parameter can be one of the following values:
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
 1451              		.loc 7 913 22 view .LVU445
 1452              	.LBB253:
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 1453              		.loc 7 915 3 view .LVU446
 1454 0002 544A     		ldr	r2, .L31
 1455 0004 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 278


 1456 0006 0121     		movs	r1, #1
 1457 0008 8B43     		bics	r3, r1
 1458 000a 1360     		str	r3, [r2]
 1459              	.LVL76:
 1460              	.L22:
 1461              		.loc 7 915 3 is_stmt 0 view .LVU447
 1462              	.LBE253:
 1463              	.LBE252:
 126:Core/Src/main.c ****   LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE1);
 1464              		.loc 1 126 3 is_stmt 1 discriminator 1 view .LVU448
 124:Core/Src/main.c ****   {
 1465              		.loc 1 124 8 discriminator 1 view .LVU449
 1466              	.LBB254:
 1467              	.LBI254:
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get FLASH Latency
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_GetLatency
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
 1468              		.loc 7 925 26 discriminator 1 view .LVU450
 1469              	.LBB255:
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 1470              		.loc 7 927 3 discriminator 1 view .LVU451
 1471              		.loc 7 927 21 is_stmt 0 discriminator 1 view .LVU452
 1472 000c 514B     		ldr	r3, .L31
 1473 000e 1B68     		ldr	r3, [r3]
 1474              	.LBE255:
 1475              	.LBE254:
 124:Core/Src/main.c ****   {
 1476              		.loc 1 124 8 discriminator 1 view .LVU453
 1477 0010 DB07     		lsls	r3, r3, #31
 1478 0012 FBD4     		bmi	.L22
 127:Core/Src/main.c ****   while (LL_PWR_IsActiveFlag_VOS() != 0)
 1479              		.loc 1 127 3 is_stmt 1 view .LVU454
 1480              	.LVL77:
 1481              	.LBB256:
 1482              	.LBI256:
 1483              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @file    stm32l0xx_ll_pwr.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief   Header file of PWR LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * in the root directory of this software component.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 279


  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #ifndef __STM32L0xx_LL_PWR_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define __STM32L0xx_LL_PWR_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #ifdef __cplusplus
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** extern "C" {
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #include "stm32l0xx.h"
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR)
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL PWR
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Private macros ------------------------------------------------------------*/
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Exported types ------------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Exported constants --------------------------------------------------------*/
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Constants PWR Exported Constants
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_CLEAR_FLAG Clear Flags Defines
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_WriteReg function
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CR_CSBF                     PWR_CR_CSBF            /*!< Clear standby flag */
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CR_CWUF                     PWR_CR_CWUF            /*!< Clear wakeup flag */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GET_FLAG Get Flags Defines
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_ReadReg function
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_WUF                     PWR_CSR_WUF            /*!< Wakeup flag */
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_SBF                     PWR_CSR_SBF            /*!< Standby flag */
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_PVD_SUPPORT)
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_PVDO                    PWR_CSR_PVDO           /*!< Power voltage detector outpu
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_PVD_SUPPORT */
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CSR_VREFINTRDYF)
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_VREFINTRDYF             PWR_CSR_VREFINTRDYF    /*!< VREFINT ready flag */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 280


  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CSR_VREFINTRDYF */
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_VOS                     PWR_CSR_VOSF           /*!< Voltage scaling select flag 
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_REGLPF                  PWR_CSR_REGLPF         /*!< Regulator low power flag */
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP1                   PWR_CSR_EWUP1          /*!< Enable WKUP pin 1 */
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP2                   PWR_CSR_EWUP2          /*!< Enable WKUP pin 2 */
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP3)
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP3                   PWR_CSR_EWUP3          /*!< Enable WKUP pin 3 */
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP3 */
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_VOLTAGE Regulator Voltage
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE1         (PWR_CR_VOS_0)                   /*!< 1.8V (range 1) */
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE2         (PWR_CR_VOS_1)                   /*!< 1.5V (range 2) */
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE3         (PWR_CR_VOS_0 | PWR_CR_VOS_1)    /*!< 1.2V (range 3) */
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_MODE_PWR Mode Power
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_MODE_STOP                      0x00000000U                    /*!< Enter Stop mode w
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_MODE_STANDBY                   (PWR_CR_PDDS)                  /*!< Enter Standby mod
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_MODE_LP_MODES  Regulator Mode In Low Power Modes
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_LPMODES_MAIN           0x00000000U        /*!< Voltage regulator in main mode d
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_LPMODES_LOW_POWER      (PWR_CR_LPSDSR)    /*!< Voltage regulator in low-power m
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CR_LPDS)
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_MODE_DS_MODE  Regulator Mode In Deep Sleep Mode
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****  * @{
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****  */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_DSMODE_MAIN        0x00000000U           /*!< Voltage regulator in main mode du
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_DSMODE_LOW_POWER   (PWR_CR_LPDS)         /*!< Voltage regulator in low-power mo
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CR_LPDS */
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_PVD_SUPPORT)
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVDLEVEL Power Voltage Detector Level
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_0                  (PWR_CR_PLS_LEV0)      /*!< Voltage threshold detected b
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_1                  (PWR_CR_PLS_LEV1)      /*!< Voltage threshold detected b
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_2                  (PWR_CR_PLS_LEV2)      /*!< Voltage threshold detected b
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 281


 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_3                  (PWR_CR_PLS_LEV3)      /*!< Voltage threshold detected b
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_4                  (PWR_CR_PLS_LEV4)      /*!< Voltage threshold detected b
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_5                  (PWR_CR_PLS_LEV5)      /*!< Voltage threshold detected b
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_6                  (PWR_CR_PLS_LEV6)      /*!< Voltage threshold detected b
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_7                  (PWR_CR_PLS_LEV7)      /*!< External input analog voltag
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_PVD_SUPPORT */
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_WAKEUP_PIN  Wakeup Pins
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN1                 (PWR_CSR_EWUP1)        /*!< WKUP pin 1 : PA0 */
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN2                 (PWR_CSR_EWUP2)        /*!< WKUP pin 2 : PC13 */
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP3)
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN3                 (PWR_CSR_EWUP3)        /*!< WKUP pin 3 : PE6 or PA2 acco
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP3 */
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Exported macro ------------------------------------------------------------*/
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Macros PWR Exported Macros
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EM_WRITE_READ Common write and read registers Macros
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Write a value in PWR register
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  __REG__ Register to be written
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  __VALUE__ Value to be written in the register
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_WriteReg(__REG__, __VALUE__) WRITE_REG(PWR->__REG__, (__VALUE__))
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Read a value in PWR register
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  __REG__ Register to be read
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval Register value
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_ReadReg(__REG__) READ_REG(PWR->__REG__)
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 282


 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Exported functions --------------------------------------------------------*/
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Functions PWR Exported Functions
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration Configuration
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Switch the regulator from main mode to low-power mode
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPRUN       LL_PWR_EnableLowPowerRunMode
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   Remind to set the regulator to low power before enabling
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         LowPower run mode (bit @ref LL_PWR_REGU_LPMODES_LOW_POWER).
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableLowPowerRunMode(void)
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_LPRUN);
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Switch the regulator from low-power mode to main mode
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPRUN       LL_PWR_DisableLowPowerRunMode
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableLowPowerRunMode(void)
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_LPRUN);
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Check if the regulator is in low-power mode
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPRUN       LL_PWR_IsEnabledLowPowerRunMode
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledLowPowerRunMode(void)
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CR, PWR_CR_LPRUN) == (PWR_CR_LPRUN));
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Set voltage regulator to low-power and switch from 
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         run main mode to run low-power mode.
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPSDSR       LL_PWR_EnterLowPowerRunMode\n
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         CR    LPRUN        LL_PWR_EnterLowPowerRunMode
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   This "high level" function is introduced to provide functional
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         compatibility with other families. Notice that the two registers
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         have to be written sequentially, so this function is not atomic.
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         To assure atomicity you can call separately the following functions:
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         - @ref LL_PWR_SetRegulModeLP(@ref LL_PWR_REGU_LPMODES_LOW_POWER);
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         - @ref LL_PWR_EnableLowPowerRunMode();
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnterLowPowerRunMode(void)
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_LPSDSR); /* => LL_PWR_SetRegulModeLP(LL_PWR_REGU_LPMODES_LOW_POWER) */
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_LPRUN);  /* => LL_PWR_EnableLowPowerRunMode() */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 283


 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Set voltage regulator to main and switch from 
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         run main mode to low-power mode.
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPSDSR       LL_PWR_ExitLowPowerRunMode\n
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         CR    LPRUN        LL_PWR_ExitLowPowerRunMode
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   This "high level" function is introduced to provide functional   
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         compatibility with other families. Notice that the two registers 
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         have to be written sequentially, so this function is not atomic.
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         To assure atomicity you can call separately the following functions:
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         - @ref LL_PWR_DisableLowPowerRunMode();
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         - @ref LL_PWR_SetRegulModeLP(@ref LL_PWR_REGU_LPMODES_MAIN);
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_ExitLowPowerRunMode(void)
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_LPRUN);   /* => LL_PWR_DisableLowPowerRunMode() */
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_LPSDSR);  /* => LL_PWR_SetRegulModeLP(LL_PWR_REGU_LPMODES_MAIN) */
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Set the main internal regulator output voltage
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    VOS       LL_PWR_SetRegulVoltageScaling
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  VoltageScaling This parameter can be one of the following values:
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE3
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRegulVoltageScaling(uint32_t VoltageScaling)
 1484              		.loc 12 271 22 view .LVU455
 1485              	.LBB257:
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   MODIFY_REG(PWR->CR, PWR_CR_VOS, VoltageScaling);
 1486              		.loc 12 273 3 view .LVU456
 1487 0014 5049     		ldr	r1, .L31+4
 1488 0016 0B68     		ldr	r3, [r1]
 1489 0018 504A     		ldr	r2, .L31+8
 1490 001a 1A40     		ands	r2, r3
 1491 001c 8023     		movs	r3, #128
 1492 001e 1B01     		lsls	r3, r3, #4
 1493 0020 1343     		orrs	r3, r2
 1494 0022 0B60     		str	r3, [r1]
 1495              	.LVL78:
 1496              	.L23:
 1497              		.loc 12 273 3 is_stmt 0 view .LVU457
 1498              	.LBE257:
 1499              	.LBE256:
 130:Core/Src/main.c ****   LL_RCC_HSI_EnableDivider();
 1500              		.loc 1 130 3 is_stmt 1 discriminator 1 view .LVU458
 128:Core/Src/main.c ****   {
 1501              		.loc 1 128 9 discriminator 1 view .LVU459
 1502              	.LBB258:
 1503              	.LBI258:
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 284


 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Get the main internal regulator output voltage
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    VOS       LL_PWR_GetRegulVoltageScaling
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE3
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRegulVoltageScaling(void)
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR, PWR_CR_VOS));
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Enable access to the backup domain
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    DBP       LL_PWR_EnableBkUpAccess
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableBkUpAccess(void)
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_DBP);
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Disable access to the backup domain
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    DBP       LL_PWR_DisableBkUpAccess
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableBkUpAccess(void)
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_DBP);
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Check if the backup domain is enabled
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    DBP       LL_PWR_IsEnabledBkUpAccess
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledBkUpAccess(void)
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CR, PWR_CR_DBP) == (PWR_CR_DBP));
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Set voltage regulator mode during low power modes
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPSDSR       LL_PWR_SetRegulModeLP
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  RegulMode This parameter can be one of the following values:
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_LPMODES_MAIN
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_LPMODES_LOW_POWER
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRegulModeLP(uint32_t RegulMode)
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   MODIFY_REG(PWR->CR, PWR_CR_LPSDSR, RegulMode);
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Get voltage regulator mode during low power modes
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 285


 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPSDSR       LL_PWR_GetRegulModeLP
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_LPMODES_MAIN
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_LPMODES_LOW_POWER
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRegulModeLP(void)
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR, PWR_CR_LPSDSR));
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CR_LPDS)
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Set voltage regulator mode during deep sleep mode
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPDS         LL_PWR_SetRegulModeDS
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  RegulMode This parameter can be one of the following values:
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_DSMODE_MAIN
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_DSMODE_LOW_POWER
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRegulModeDS(uint32_t RegulMode)
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   MODIFY_REG(PWR->CR, PWR_CR_LPDS, RegulMode);
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Get voltage regulator mode during deep sleep mode
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPDS         LL_PWR_GetRegulModeDS
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_DSMODE_MAIN
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_DSMODE_LOW_POWER
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRegulModeDS(void)
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR, PWR_CR_LPDS));
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CR_LPDS */
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Set power down mode when CPU enters deepsleep
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    PDDS         LL_PWR_SetPowerMode
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  PDMode This parameter can be one of the following values:
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STANDBY
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   Set the regulator to low power (bit @ref LL_PWR_REGU_LPMODES_LOW_POWER)  
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         before setting MODE_STOP. If the regulator remains in "main mode",   
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         it consumes more power without providing any additional feature. 
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         In MODE_STANDBY the regulator is automatically off.
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   It is forbidden to configure both EN_VREFINT=1 and ULP=1 if the device is
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         in Stop mode or in Sleep/Low-power sleep mode. If the device is not in 
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         low-power mode, VREFINT is always enabled whatever the state of EN_VREFINT and ULP
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetPowerMode(uint32_t PDMode)
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   MODIFY_REG(PWR->CR, PWR_CR_PDDS, PDMode);
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 286


 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Get power down mode when CPU enters deepsleep
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    PDDS         LL_PWR_GetPowerMode
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STANDBY
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetPowerMode(void)
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR, PWR_CR_PDDS));
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_PVD_SUPPORT)
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Configure the voltage threshold detected by the Power Voltage Detector
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    PLS       LL_PWR_SetPVDLevel
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  PVDLevel This parameter can be one of the following values:
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_0
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_1
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_2
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_3
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_4
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_5
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_6
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_7
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetPVDLevel(uint32_t PVDLevel)
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, PVDLevel);
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Get the voltage threshold detection
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    PLS       LL_PWR_GetPVDLevel
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_0
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_1
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_2
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_3
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_4
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_5
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_6
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_7
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetPVDLevel(void)
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR, PWR_CR_PLS));
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Enable Power Voltage Detector
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    PVDE       LL_PWR_EnablePVD
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnablePVD(void)
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 287


 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_PVDE);
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Disable Power Voltage Detector
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    PVDE       LL_PWR_DisablePVD
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisablePVD(void)
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_PVDE);
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Check if Power Voltage Detector is enabled
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    PVDE       LL_PWR_IsEnabledPVD
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledPVD(void)
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CR, PWR_CR_PVDE) == (PWR_CR_PVDE));
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_PVD_SUPPORT */
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Enable the WakeUp PINx functionality
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   EWUP1       LL_PWR_EnableWakeUpPin\n
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   EWUP2       LL_PWR_EnableWakeUpPin\n
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   EWUP3       LL_PWR_EnableWakeUpPin
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  WakeUpPin This parameter can be one of the following values:
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN1
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN2
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN3 (*)
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         (*) not available on all devices
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableWakeUpPin(uint32_t WakeUpPin)
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CSR, WakeUpPin);
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Disable the WakeUp PINx functionality
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   EWUP1       LL_PWR_DisableWakeUpPin\n
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   EWUP2       LL_PWR_DisableWakeUpPin\n
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   EWUP3       LL_PWR_DisableWakeUpPin
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  WakeUpPin This parameter can be one of the following values:
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN1
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN2
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN3 (*)
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         (*) not available on all devices
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableWakeUpPin(uint32_t WakeUpPin)
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 288


 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CSR, WakeUpPin);
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Check if the WakeUp PINx functionality is enabled
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   EWUP1       LL_PWR_IsEnabledWakeUpPin\n
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   EWUP2       LL_PWR_IsEnabledWakeUpPin\n
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   EWUP3       LL_PWR_IsEnabledWakeUpPin
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  WakeUpPin This parameter can be one of the following values:
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN1
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN2
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN3 (*)
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         (*) not available on all devices
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledWakeUpPin(uint32_t WakeUpPin)
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CSR, WakeUpPin) == (WakeUpPin));
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Enable ultra low-power mode by enabling VREFINT switch off in low-power modes
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    ULP       LL_PWR_EnableUltraLowPower
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableUltraLowPower(void)
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_ULP);
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Disable ultra low-power mode by disabling VREFINT switch off in low-power modes
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    ULP       LL_PWR_DisableUltraLowPower
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableUltraLowPower(void)
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_ULP);
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Check if ultra low-power mode is enabled by checking if VREFINT switch off in low-power
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    ULP       LL_PWR_IsEnabledUltraLowPower
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledUltraLowPower(void)
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CR, PWR_CR_ULP) == (PWR_CR_ULP));
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Enable fast wakeup by ignoring VREFINT startup time when exiting from low-power mode
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    FWU       LL_PWR_EnableFastWakeUp
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   Works in conjunction with ultra low power mode.
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 289


 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableFastWakeUp(void)
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_FWU);
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Disable fast wakeup by waiting VREFINT startup time when exiting from low-power mode
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    FWU       LL_PWR_DisableFastWakeUp
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   Works in conjunction with ultra low power mode.
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableFastWakeUp(void)
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_FWU);
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Check if fast wakeup is enabled by checking if VREFINT startup time when exiting from l
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    FWU       LL_PWR_IsEnabledFastWakeUp
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledFastWakeUp(void)
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CR, PWR_CR_FWU) == (PWR_CR_FWU));
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Enable non-volatile memory (Flash and EEPROM) keeping off feature when exiting from low
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    DS_EE_KOFF       LL_PWR_EnableNVMKeptOff
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   When enabled, after entering low-power mode (Stop or Standby only), if RUN_PD of FLASH_
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         is also set, the Flash memory will not be woken up when exiting from deepsleep mode.
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         When enabled, the EEPROM will not be woken up when exiting from low-power mode (if the 
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableNVMKeptOff(void)
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_DSEEKOFF);
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Disable non-volatile memory (Flash and EEPROM) keeping off feature when exiting from lo
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    DS_EE_KOFF       LL_PWR_DisableNVMKeptOff
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   When disabled, Flash memory is woken up when exiting from deepsleep mode even if the bi
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableNVMKeptOff(void)
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_DSEEKOFF);
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Check if non-volatile memory (Flash and EEPROM) keeping off feature when exiting from l
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    DS_EE_KOFF       LL_PWR_IsEnabledNVMKeptOff
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledNVMKeptOff(void)
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 290


 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CR, PWR_CR_DSEEKOFF) == (PWR_CR_DSEEKOFF));
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EF_FLAG_Management FLAG_Management
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Get Wake-up Flag
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   WUF       LL_PWR_IsActiveFlag_WU
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsActiveFlag_WU(void)
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CSR, PWR_CSR_WUF) == (PWR_CSR_WUF));
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Get Standby Flag
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   SBF       LL_PWR_IsActiveFlag_SB
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsActiveFlag_SB(void)
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CSR, PWR_CSR_SBF) == (PWR_CSR_SBF));
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_PVD_SUPPORT)
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Indicate whether VDD voltage is below the selected PVD threshold
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   PVDO       LL_PWR_IsActiveFlag_PVDO
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsActiveFlag_PVDO(void)
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CSR, PWR_CSR_PVDO) == (PWR_CSR_PVDO));
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_PVD_SUPPORT */
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CSR_VREFINTRDYF)
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Get Internal Reference VrefInt Flag
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   VREFINTRDYF       LL_PWR_IsActiveFlag_VREFINTRDY
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsActiveFlag_VREFINTRDY(void)
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CSR, PWR_CSR_VREFINTRDYF) == (PWR_CSR_VREFINTRDYF));
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CSR_VREFINTRDYF */
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Indicate whether the regulator is ready in the selected voltage range or if its output 
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CSR   VOSF       LL_PWR_IsActiveFlag_VOS
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 291


 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsActiveFlag_VOS(void)
 1504              		.loc 12 678 26 discriminator 1 view .LVU460
 1505              	.LBB259:
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CSR, LL_PWR_CSR_VOS) == (LL_PWR_CSR_VOS));
 1506              		.loc 12 680 3 discriminator 1 view .LVU461
 1507              		.loc 12 680 11 is_stmt 0 discriminator 1 view .LVU462
 1508 0024 4C4B     		ldr	r3, .L31+4
 1509 0026 5B68     		ldr	r3, [r3, #4]
 1510              	.LBE259:
 1511              	.LBE258:
 128:Core/Src/main.c ****   {
 1512              		.loc 1 128 9 discriminator 1 view .LVU463
 1513 0028 DB06     		lsls	r3, r3, #27
 1514 002a FBD4     		bmi	.L23
 131:Core/Src/main.c ****   LL_RCC_HSI_Enable();
 1515              		.loc 1 131 3 is_stmt 1 view .LVU464
 1516              	.LBB260:
 1517              	.LBI260:
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1518              		.loc 9 831 22 view .LVU465
 1519              	.LBB261:
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1520              		.loc 9 833 3 view .LVU466
 1521 002c 4C4B     		ldr	r3, .L31+12
 1522 002e 1A68     		ldr	r2, [r3]
 1523 0030 0821     		movs	r1, #8
 1524 0032 0A43     		orrs	r2, r1
 1525 0034 1A60     		str	r2, [r3]
 1526              	.LBE261:
 1527              	.LBE260:
 132:Core/Src/main.c **** 
 1528              		.loc 1 132 3 view .LVU467
 1529              	.LBB262:
 1530              	.LBI262:
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1531              		.loc 9 780 22 view .LVU468
 1532              	.LBB263:
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1533              		.loc 9 782 3 view .LVU469
 1534 0036 1A68     		ldr	r2, [r3]
 1535 0038 0739     		subs	r1, r1, #7
 1536 003a 0A43     		orrs	r2, r1
 1537 003c 1A60     		str	r2, [r3]
 1538              	.L24:
 1539              	.LBE263:
 1540              	.LBE262:
 138:Core/Src/main.c ****   LL_RCC_HSI_SetCalibTrimming(16);
 1541              		.loc 1 138 3 discriminator 1 view .LVU470
 135:Core/Src/main.c ****   {
 1542              		.loc 1 135 8 discriminator 1 view .LVU471
 1543              	.LBB264:
 1544              	.LBI264:
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1545              		.loc 9 800 26 discriminator 1 view .LVU472
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 292


 1546              	.LBB265:
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1547              		.loc 9 802 3 discriminator 1 view .LVU473
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1548              		.loc 9 802 12 is_stmt 0 discriminator 1 view .LVU474
 1549 003e 484B     		ldr	r3, .L31+12
 1550 0040 1B68     		ldr	r3, [r3]
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1551              		.loc 9 802 69 discriminator 1 view .LVU475
 1552 0042 5B07     		lsls	r3, r3, #29
 1553 0044 FBD5     		bpl	.L24
 1554              	.LBE265:
 1555              	.LBE264:
 139:Core/Src/main.c ****   LL_RCC_LSI_Enable();
 1556              		.loc 1 139 3 is_stmt 1 view .LVU476
 1557              	.LVL79:
 1558              	.LBB266:
 1559              	.LBI266:
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1560              		.loc 9 891 22 view .LVU477
 1561              	.LBB267:
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1562              		.loc 9 893 3 view .LVU478
 1563 0046 464B     		ldr	r3, .L31+12
 1564 0048 5A68     		ldr	r2, [r3, #4]
 1565 004a 4649     		ldr	r1, .L31+16
 1566 004c 1140     		ands	r1, r2
 1567 004e 8022     		movs	r2, #128
 1568 0050 5201     		lsls	r2, r2, #5
 1569 0052 0A43     		orrs	r2, r1
 1570 0054 5A60     		str	r2, [r3, #4]
 1571              	.LVL80:
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1572              		.loc 9 893 3 is_stmt 0 view .LVU479
 1573              	.LBE267:
 1574              	.LBE266:
 140:Core/Src/main.c **** 
 1575              		.loc 1 140 3 is_stmt 1 view .LVU480
 1576              	.LBB268:
 1577              	.LBI268:
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1578              		.loc 9 1123 22 view .LVU481
 1579              	.LBB269:
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1580              		.loc 9 1125 3 view .LVU482
 1581 0056 1A6D     		ldr	r2, [r3, #80]
 1582 0058 0121     		movs	r1, #1
 1583 005a 0A43     		orrs	r2, r1
 1584 005c 1A65     		str	r2, [r3, #80]
 1585              	.L25:
 1586              	.LBE269:
 1587              	.LBE268:
 146:Core/Src/main.c ****   LL_PWR_EnableBkUpAccess();
 1588              		.loc 1 146 3 discriminator 1 view .LVU483
 143:Core/Src/main.c ****   {
 1589              		.loc 1 143 8 discriminator 1 view .LVU484
 1590              	.LBB270:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 293


 1591              	.LBI270:
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1592              		.loc 9 1143 26 discriminator 1 view .LVU485
 1593              	.LBB271:
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1594              		.loc 9 1145 3 discriminator 1 view .LVU486
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1595              		.loc 9 1145 12 is_stmt 0 discriminator 1 view .LVU487
 1596 005e 404B     		ldr	r3, .L31+12
 1597 0060 1B6D     		ldr	r3, [r3, #80]
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1598              		.loc 9 1145 72 discriminator 1 view .LVU488
 1599 0062 9B07     		lsls	r3, r3, #30
 1600 0064 FBD5     		bpl	.L25
 1601              	.LBE271:
 1602              	.LBE270:
 147:Core/Src/main.c ****   if(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSE)
 1603              		.loc 1 147 3 is_stmt 1 view .LVU489
 1604              	.LBB272:
 1605              	.LBI272:
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 1606              		.loc 12 294 22 view .LVU490
 1607              	.LBB273:
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 1608              		.loc 12 296 3 view .LVU491
 1609 0066 3C4A     		ldr	r2, .L31+4
 1610 0068 1168     		ldr	r1, [r2]
 1611 006a 8023     		movs	r3, #128
 1612 006c 5B00     		lsls	r3, r3, #1
 1613 006e 0B43     		orrs	r3, r1
 1614 0070 1360     		str	r3, [r2]
 1615              	.LBE273:
 1616              	.LBE272:
 148:Core/Src/main.c ****   {
 1617              		.loc 1 148 3 view .LVU492
 1618              	.LBB274:
 1619              	.LBI274:
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1620              		.loc 9 1714 26 view .LVU493
 1621              	.LBB275:
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1622              		.loc 9 1716 3 view .LVU494
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1623              		.loc 9 1716 21 is_stmt 0 view .LVU495
 1624 0072 3B4B     		ldr	r3, .L31+12
 1625 0074 1B6D     		ldr	r3, [r3, #80]
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1626              		.loc 9 1716 10 view .LVU496
 1627 0076 C022     		movs	r2, #192
 1628 0078 9202     		lsls	r2, r2, #10
 1629 007a 1340     		ands	r3, r2
 1630              	.LBE275:
 1631              	.LBE274:
 148:Core/Src/main.c ****   {
 1632              		.loc 1 148 5 view .LVU497
 1633 007c 8022     		movs	r2, #128
 1634 007e 5202     		lsls	r2, r2, #9
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 294


 1635 0080 9342     		cmp	r3, r2
 1636 0082 09D0     		beq	.L26
 150:Core/Src/main.c ****     LL_RCC_ReleaseBackupDomainReset();
 1637              		.loc 1 150 5 is_stmt 1 view .LVU498
 1638              	.LBB276:
 1639              	.LBI276:
1727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable RTC
1731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         RTCEN         LL_RCC_DisableRTC
1732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_DisableRTC(void)
1735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_RTCEN);
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if RTC has been enabled or not
1741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         RTCEN         LL_RCC_IsEnabledRTC
1742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_IsEnabledRTC(void)
1745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CSR, RCC_CSR_RTCEN) == RCC_CSR_RTCEN) ? 1UL : 0UL);
1747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Force the Backup domain reset
1751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         RTCRST         LL_RCC_ForceBackupDomainReset
1752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ForceBackupDomainReset(void)
 1640              		.loc 9 1754 22 view .LVU499
 1641              	.LBB277:
1755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_RTCRST);
 1642              		.loc 9 1756 3 view .LVU500
 1643 0084 364B     		ldr	r3, .L31+12
 1644 0086 196D     		ldr	r1, [r3, #80]
 1645 0088 8022     		movs	r2, #128
 1646 008a 1203     		lsls	r2, r2, #12
 1647 008c 0A43     		orrs	r2, r1
 1648 008e 1A65     		str	r2, [r3, #80]
 1649              	.LBE277:
 1650              	.LBE276:
 151:Core/Src/main.c ****   }
 1651              		.loc 1 151 5 view .LVU501
 1652              	.LBB278:
 1653              	.LBI278:
1757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Release the Backup domain reset
1761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         RTCRST         LL_RCC_ReleaseBackupDomainReset
1762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 295


1763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ReleaseBackupDomainReset(void)
 1654              		.loc 9 1764 22 view .LVU502
 1655              	.LBB279:
1765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_RTCRST);
 1656              		.loc 9 1766 3 view .LVU503
 1657 0090 1A6D     		ldr	r2, [r3, #80]
 1658 0092 3549     		ldr	r1, .L31+20
 1659 0094 0A40     		ands	r2, r1
 1660 0096 1A65     		str	r2, [r3, #80]
 1661              	.L26:
 1662              	.LBE279:
 1663              	.LBE278:
 153:Core/Src/main.c ****   LL_RCC_LSE_Enable();
 1664              		.loc 1 153 3 view .LVU504
 1665              	.LVL81:
 1666              	.LBB280:
 1667              	.LBI280:
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1668              		.loc 9 1049 22 view .LVU505
 1669              	.LBB281:
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1670              		.loc 9 1051 3 view .LVU506
 1671 0098 314B     		ldr	r3, .L31+12
 1672 009a 1A6D     		ldr	r2, [r3, #80]
 1673 009c 2F49     		ldr	r1, .L31+8
 1674 009e 0A40     		ands	r2, r1
 1675 00a0 1A65     		str	r2, [r3, #80]
 1676              	.LVL82:
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1677              		.loc 9 1051 3 is_stmt 0 view .LVU507
 1678              	.LBE281:
 1679              	.LBE280:
 154:Core/Src/main.c **** 
 1680              		.loc 1 154 3 is_stmt 1 view .LVU508
 1681              	.LBB282:
 1682              	.LBI282:
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1683              		.loc 9 1003 22 view .LVU509
 1684              	.LBB283:
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1685              		.loc 9 1005 3 view .LVU510
 1686 00a2 196D     		ldr	r1, [r3, #80]
 1687 00a4 8022     		movs	r2, #128
 1688 00a6 5200     		lsls	r2, r2, #1
 1689 00a8 0A43     		orrs	r2, r1
 1690 00aa 1A65     		str	r2, [r3, #80]
 1691              	.L27:
 1692              	.LBE283:
 1693              	.LBE282:
 160:Core/Src/main.c ****   if(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSE)
 1694              		.loc 1 160 3 discriminator 1 view .LVU511
 157:Core/Src/main.c ****   {
 1695              		.loc 1 157 8 discriminator 1 view .LVU512
 1696              	.LBB284:
 1697              	.LBI284:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 296


1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1698              		.loc 9 1095 26 discriminator 1 view .LVU513
 1699              	.LBB285:
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1700              		.loc 9 1097 3 discriminator 1 view .LVU514
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1701              		.loc 9 1097 12 is_stmt 0 discriminator 1 view .LVU515
 1702 00ac 2C4B     		ldr	r3, .L31+12
 1703 00ae 1B6D     		ldr	r3, [r3, #80]
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1704              		.loc 9 1097 72 discriminator 1 view .LVU516
 1705 00b0 9B05     		lsls	r3, r3, #22
 1706 00b2 FBD5     		bpl	.L27
 1707              	.LBE285:
 1708              	.LBE284:
 161:Core/Src/main.c ****   {
 1709              		.loc 1 161 3 is_stmt 1 view .LVU517
 1710              	.LBB286:
 1711              	.LBI286:
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1712              		.loc 9 1714 26 view .LVU518
 1713              	.LBB287:
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1714              		.loc 9 1716 3 view .LVU519
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1715              		.loc 9 1716 21 is_stmt 0 view .LVU520
 1716 00b4 2A4B     		ldr	r3, .L31+12
 1717 00b6 1B6D     		ldr	r3, [r3, #80]
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1718              		.loc 9 1716 10 view .LVU521
 1719 00b8 C022     		movs	r2, #192
 1720 00ba 9202     		lsls	r2, r2, #10
 1721 00bc 1340     		ands	r3, r2
 1722              	.LBE287:
 1723              	.LBE286:
 161:Core/Src/main.c ****   {
 1724              		.loc 1 161 5 view .LVU522
 1725 00be 8022     		movs	r2, #128
 1726 00c0 5202     		lsls	r2, r2, #9
 1727 00c2 9342     		cmp	r3, r2
 1728 00c4 07D0     		beq	.L28
 163:Core/Src/main.c ****   }
 1729              		.loc 1 163 5 is_stmt 1 view .LVU523
 1730              	.LVL83:
 1731              	.LBB288:
 1732              	.LBI288:
1700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1733              		.loc 9 1700 22 view .LVU524
 1734              	.LBB289:
1702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1735              		.loc 9 1702 3 view .LVU525
 1736 00c6 2649     		ldr	r1, .L31+12
 1737 00c8 0B6D     		ldr	r3, [r1, #80]
 1738 00ca 284A     		ldr	r2, .L31+24
 1739 00cc 1A40     		ands	r2, r3
 1740 00ce 8023     		movs	r3, #128
 1741 00d0 5B02     		lsls	r3, r3, #9
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 297


 1742 00d2 1343     		orrs	r3, r2
 1743 00d4 0B65     		str	r3, [r1, #80]
 1744              	.LVL84:
 1745              	.L28:
1702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1746              		.loc 9 1702 3 is_stmt 0 view .LVU526
 1747              	.LBE289:
 1748              	.LBE288:
 165:Core/Src/main.c ****   LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI, LL_RCC_PLL_MUL_4, LL_RCC_PLL_DIV_2);
 1749              		.loc 1 165 3 is_stmt 1 view .LVU527
 1750              	.LBB290:
 1751              	.LBI290:
1724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1752              		.loc 9 1724 22 view .LVU528
 1753              	.LBB291:
1726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1754              		.loc 9 1726 3 view .LVU529
 1755 00d6 224B     		ldr	r3, .L31+12
 1756 00d8 196D     		ldr	r1, [r3, #80]
 1757 00da 8022     		movs	r2, #128
 1758 00dc D202     		lsls	r2, r2, #11
 1759 00de 0A43     		orrs	r2, r1
 1760 00e0 1A65     		str	r2, [r3, #80]
 1761              	.LBE291:
 1762              	.LBE290:
 166:Core/Src/main.c ****   LL_RCC_PLL_Enable();
 1763              		.loc 1 166 3 view .LVU530
 1764              	.LVL85:
 1765              	.LBB292:
 1766              	.LBI292:
1767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLL PLL
1774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable PLL
1779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
1780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Enable(void)
1783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLON);
1785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable PLL
1789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system clock
1790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Disable
1791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Disable(void)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 298


1794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
1796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if PLL Ready
1800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
1801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
1804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_PLLRDY) == RCC_CR_PLLRDY) ? 1UL : 0UL);
1806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure PLL used for SYSCLK Domain
1810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         PLLSRC        LL_RCC_PLL_ConfigDomain_SYS\n
1811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         CFGR         PLLMUL        LL_RCC_PLL_ConfigDomain_SYS\n
1812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         CFGR         PLLDIV        LL_RCC_PLL_ConfigDomain_SYS
1813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
1815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
1816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  PLLMul This parameter can be one of the following values:
1817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
1818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
1819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
1820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
1821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
1822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
1823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_24
1824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_32
1825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_48
1826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  PLLDiv This parameter can be one of the following values:
1827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_DIV_2
1828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_DIV_3
1829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_DIV_4
1830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLMul, uint32_t PLLDiv)
 1767              		.loc 9 1832 22 view .LVU531
 1768              	.LBB293:
1833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL | RCC_CFGR_PLLDIV, Source | PLLMul | PLLD
 1769              		.loc 9 1834 3 view .LVU532
 1770 00e2 DA68     		ldr	r2, [r3, #12]
 1771 00e4 2249     		ldr	r1, .L31+28
 1772 00e6 1140     		ands	r1, r2
 1773 00e8 8822     		movs	r2, #136
 1774 00ea D203     		lsls	r2, r2, #15
 1775 00ec 0A43     		orrs	r2, r1
 1776 00ee DA60     		str	r2, [r3, #12]
 1777              	.LVL86:
 1778              		.loc 9 1834 3 is_stmt 0 view .LVU533
 1779              	.LBE293:
 1780              	.LBE292:
 167:Core/Src/main.c **** 
 1781              		.loc 1 167 3 is_stmt 1 view .LVU534
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 299


 1782              	.LBB294:
 1783              	.LBI294:
1782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1784              		.loc 9 1782 22 view .LVU535
 1785              	.LBB295:
1784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1786              		.loc 9 1784 3 view .LVU536
 1787 00f0 1968     		ldr	r1, [r3]
 1788 00f2 8022     		movs	r2, #128
 1789 00f4 5204     		lsls	r2, r2, #17
 1790 00f6 0A43     		orrs	r2, r1
 1791 00f8 1A60     		str	r2, [r3]
 1792              	.L29:
 1793              	.LBE295:
 1794              	.LBE294:
 173:Core/Src/main.c ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 1795              		.loc 1 173 3 discriminator 1 view .LVU537
 170:Core/Src/main.c ****   {
 1796              		.loc 1 170 8 discriminator 1 view .LVU538
 1797              	.LBB296:
 1798              	.LBI296:
1803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1799              		.loc 9 1803 26 discriminator 1 view .LVU539
 1800              	.LBB297:
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1801              		.loc 9 1805 3 discriminator 1 view .LVU540
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1802              		.loc 9 1805 12 is_stmt 0 discriminator 1 view .LVU541
 1803 00fa 194B     		ldr	r3, .L31+12
 1804 00fc 1B68     		ldr	r3, [r3]
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1805              		.loc 9 1805 69 discriminator 1 view .LVU542
 1806 00fe 9B01     		lsls	r3, r3, #6
 1807 0100 FBD5     		bpl	.L29
 1808              	.LBE297:
 1809              	.LBE296:
 174:Core/Src/main.c ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
 1810              		.loc 1 174 3 is_stmt 1 view .LVU543
 1811              	.LVL87:
 1812              	.LBB298:
 1813              	.LBI298:
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1814              		.loc 9 1307 22 view .LVU544
 1815              	.LBB299:
1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1816              		.loc 9 1309 3 view .LVU545
 1817 0102 174B     		ldr	r3, .L31+12
 1818 0104 DA68     		ldr	r2, [r3, #12]
 1819 0106 F021     		movs	r1, #240
 1820 0108 8A43     		bics	r2, r1
 1821 010a DA60     		str	r2, [r3, #12]
 1822              	.LVL88:
1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1823              		.loc 9 1309 3 is_stmt 0 view .LVU546
 1824              	.LBE299:
 1825              	.LBE298:
 175:Core/Src/main.c ****   LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 300


 1826              		.loc 1 175 3 is_stmt 1 view .LVU547
 1827              	.LBB300:
 1828              	.LBI300:
1323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1829              		.loc 9 1323 22 view .LVU548
 1830              	.LBB301:
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1831              		.loc 9 1325 3 view .LVU549
 1832 010c DA68     		ldr	r2, [r3, #12]
 1833 010e 1949     		ldr	r1, .L31+32
 1834 0110 0A40     		ands	r2, r1
 1835 0112 DA60     		str	r2, [r3, #12]
 1836              	.LVL89:
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1837              		.loc 9 1325 3 is_stmt 0 view .LVU550
 1838              	.LBE301:
 1839              	.LBE300:
 176:Core/Src/main.c ****   LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 1840              		.loc 1 176 3 is_stmt 1 view .LVU551
 1841              	.LBB302:
 1842              	.LBI302:
1339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1843              		.loc 9 1339 22 view .LVU552
 1844              	.LBB303:
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1845              		.loc 9 1341 3 view .LVU553
 1846 0114 DA68     		ldr	r2, [r3, #12]
 1847 0116 1849     		ldr	r1, .L31+36
 1848 0118 0A40     		ands	r2, r1
 1849 011a DA60     		str	r2, [r3, #12]
 1850              	.LVL90:
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1851              		.loc 9 1341 3 is_stmt 0 view .LVU554
 1852              	.LBE303:
 1853              	.LBE302:
 177:Core/Src/main.c **** 
 1854              		.loc 1 177 3 is_stmt 1 view .LVU555
 1855              	.LBB304:
 1856              	.LBI304:
1273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1857              		.loc 9 1273 22 view .LVU556
 1858              	.LBB305:
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1859              		.loc 9 1275 3 view .LVU557
 1860 011c DA68     		ldr	r2, [r3, #12]
 1861 011e 0321     		movs	r1, #3
 1862 0120 8A43     		bics	r2, r1
 1863 0122 0A43     		orrs	r2, r1
 1864 0124 DA60     		str	r2, [r3, #12]
 1865              	.LVL91:
 1866              	.L30:
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1867              		.loc 9 1275 3 is_stmt 0 view .LVU558
 1868              	.LBE305:
 1869              	.LBE304:
 183:Core/Src/main.c **** 
 1870              		.loc 1 183 3 is_stmt 1 discriminator 1 view .LVU559
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 301


 180:Core/Src/main.c ****   {
 1871              		.loc 1 180 8 discriminator 1 view .LVU560
 1872              	.LBB306:
 1873              	.LBI306:
1287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1874              		.loc 9 1287 26 discriminator 1 view .LVU561
 1875              	.LBB307:
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1876              		.loc 9 1289 3 discriminator 1 view .LVU562
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1877              		.loc 9 1289 21 is_stmt 0 discriminator 1 view .LVU563
 1878 0126 0E4B     		ldr	r3, .L31+12
 1879 0128 DA68     		ldr	r2, [r3, #12]
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1880              		.loc 9 1289 10 discriminator 1 view .LVU564
 1881 012a 0C23     		movs	r3, #12
 1882 012c 1340     		ands	r3, r2
 1883              	.LBE307:
 1884              	.LBE306:
 180:Core/Src/main.c ****   {
 1885              		.loc 1 180 8 discriminator 1 view .LVU565
 1886 012e 0C2B     		cmp	r3, #12
 1887 0130 F9D1     		bne	.L30
 185:Core/Src/main.c **** 
 1888              		.loc 1 185 3 is_stmt 1 view .LVU566
 1889 0132 124C     		ldr	r4, .L31+40
 1890 0134 2000     		movs	r0, r4
 1891 0136 FFF7FEFF 		bl	LL_Init1msTick
 1892              	.LVL92:
 187:Core/Src/main.c ****   LL_RCC_SetLPTIMClockSource(LL_RCC_LPTIM1_CLKSOURCE_LSI);
 1893              		.loc 1 187 3 view .LVU567
 1894 013a 2000     		movs	r0, r4
 1895 013c FFF7FEFF 		bl	LL_SetSystemCoreClock
 1896              	.LVL93:
 188:Core/Src/main.c **** }
 1897              		.loc 1 188 3 view .LVU568
 1898              	.LBB308:
 1899              	.LBI308:
1528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 1900              		.loc 9 1528 22 view .LVU569
 1901              	.LBB309:
1530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1902              		.loc 9 1530 3 view .LVU570
 1903 0140 0749     		ldr	r1, .L31+12
 1904 0142 CB6C     		ldr	r3, [r1, #76]
 1905 0144 0E4A     		ldr	r2, .L31+44
 1906 0146 1A40     		ands	r2, r3
 1907 0148 8023     		movs	r3, #128
 1908 014a DB02     		lsls	r3, r3, #11
 1909 014c 1343     		orrs	r3, r2
 1910 014e CB64     		str	r3, [r1, #76]
 1911              	.LVL94:
1530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 1912              		.loc 9 1530 3 is_stmt 0 view .LVU571
 1913              	.LBE309:
 1914              	.LBE308:
 189:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 302


 1915              		.loc 1 189 1 view .LVU572
 1916              		@ sp needed
 1917 0150 10BD     		pop	{r4, pc}
 1918              	.L32:
 1919 0152 C046     		.align	2
 1920              	.L31:
 1921 0154 00200240 		.word	1073881088
 1922 0158 00700040 		.word	1073770496
 1923 015c FFE7FFFF 		.word	-6145
 1924 0160 00100240 		.word	1073876992
 1925 0164 FFE0FFFF 		.word	-7937
 1926 0168 FFFFF7FF 		.word	-524289
 1927 016c FFFFFCFF 		.word	-196609
 1928 0170 FFFF02FF 		.word	-16580609
 1929 0174 FFF8FFFF 		.word	-1793
 1930 0178 FFC7FFFF 		.word	-14337
 1931 017c 00127A00 		.word	8000000
 1932 0180 FFFFF3FF 		.word	-786433
 1933              		.cfi_endproc
 1934              	.LFE934:
 1936              		.section	.text.main,"ax",%progbits
 1937              		.align	1
 1938              		.global	main
 1939              		.syntax unified
 1940              		.code	16
 1941              		.thumb_func
 1943              	main:
 1944              	.LFB933:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1945              		.loc 1 70 1 is_stmt 1 view -0
 1946              		.cfi_startproc
 1947              		@ Volatile: function does not return.
 1948              		@ args = 0, pretend = 0, frame = 8
 1949              		@ frame_needed = 0, uses_anonymous_args = 0
 1950 0000 00B5     		push	{lr}
 1951              	.LCFI12:
 1952              		.cfi_def_cfa_offset 4
 1953              		.cfi_offset 14, -4
 1954 0002 83B0     		sub	sp, sp, #12
 1955              	.LCFI13:
 1956              		.cfi_def_cfa_offset 16
  78:Core/Src/main.c ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
 1957              		.loc 1 78 3 view .LVU574
 1958              	.LVL95:
 1959              	.LBB310:
 1960              	.LBI310:
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 1961              		.loc 2 784 22 view .LVU575
 1962              	.LBB311:
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 1963              		.loc 2 786 3 view .LVU576
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1964              		.loc 2 787 3 view .LVU577
 1965 0004 144B     		ldr	r3, .L35
 1966 0006 596B     		ldr	r1, [r3, #52]
 1967 0008 0122     		movs	r2, #1
 1968 000a 1143     		orrs	r1, r2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 303


 1969 000c 5963     		str	r1, [r3, #52]
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1970              		.loc 2 789 3 view .LVU578
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1971              		.loc 2 789 12 is_stmt 0 view .LVU579
 1972 000e 596B     		ldr	r1, [r3, #52]
 1973 0010 0A40     		ands	r2, r1
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1974              		.loc 2 789 10 view .LVU580
 1975 0012 0192     		str	r2, [sp, #4]
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 1976              		.loc 2 790 3 is_stmt 1 view .LVU581
 1977 0014 019A     		ldr	r2, [sp, #4]
 1978              	.LVL96:
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 1979              		.loc 2 790 3 is_stmt 0 view .LVU582
 1980              	.LBE311:
 1981              	.LBE310:
  79:Core/Src/main.c **** 
 1982              		.loc 1 79 3 is_stmt 1 view .LVU583
 1983              	.LBB312:
 1984              	.LBI312:
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 1985              		.loc 2 438 22 view .LVU584
 1986              	.LBB313:
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 1987              		.loc 2 440 3 view .LVU585
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1988              		.loc 2 441 3 view .LVU586
 1989 0016 9A6B     		ldr	r2, [r3, #56]
 1990 0018 8021     		movs	r1, #128
 1991 001a 4905     		lsls	r1, r1, #21
 1992 001c 0A43     		orrs	r2, r1
 1993 001e 9A63     		str	r2, [r3, #56]
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1994              		.loc 2 443 3 view .LVU587
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1995              		.loc 2 443 12 is_stmt 0 view .LVU588
 1996 0020 9B6B     		ldr	r3, [r3, #56]
 1997 0022 0B40     		ands	r3, r1
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1998              		.loc 2 443 10 view .LVU589
 1999 0024 0093     		str	r3, [sp]
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 2000              		.loc 2 444 3 is_stmt 1 view .LVU590
 2001 0026 009B     		ldr	r3, [sp]
 2002              	.LVL97:
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 2003              		.loc 2 444 3 is_stmt 0 view .LVU591
 2004              	.LBE313:
 2005              	.LBE312:
  82:Core/Src/main.c **** 
 2006              		.loc 1 82 3 is_stmt 1 view .LVU592
 2007              	.LBB314:
 2008              	.LBI314:
 848:Drivers/CMSIS/Include/core_cm0plus.h **** {
 2009              		.loc 4 848 22 view .LVU593
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 304


 2010              	.LBB315:
 850:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 2011              		.loc 4 850 3 view .LVU594
 853:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 854:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 855:Drivers/CMSIS/Include/core_cm0plus.h ****   else
 856:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 857:Drivers/CMSIS/Include/core_cm0plus.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 2012              		.loc 4 857 5 view .LVU595
 2013              		.loc 4 857 52 is_stmt 0 view .LVU596
 2014 0028 0C49     		ldr	r1, .L35+4
 2015 002a 0B6A     		ldr	r3, [r1, #32]
 2016              		.loc 4 857 33 view .LVU597
 2017 002c 1B02     		lsls	r3, r3, #8
 2018 002e 1B0A     		lsrs	r3, r3, #8
 2019              		.loc 4 857 102 view .LVU598
 2020 0030 C022     		movs	r2, #192
 2021 0032 1206     		lsls	r2, r2, #24
 2022 0034 1343     		orrs	r3, r2
 2023              		.loc 4 857 30 view .LVU599
 2024 0036 0B62     		str	r3, [r1, #32]
 2025              	.LVL98:
 2026              		.loc 4 857 30 view .LVU600
 2027              	.LBE315:
 2028              	.LBE314:
  89:Core/Src/main.c **** 
 2029              		.loc 1 89 3 is_stmt 1 view .LVU601
 2030 0038 FFF7FEFF 		bl	SystemClock_Config
 2031              	.LVL99:
  96:Core/Src/main.c ****   MX_ADC_Init();
 2032              		.loc 1 96 3 view .LVU602
 2033 003c FFF7FEFF 		bl	MX_GPIO_Init
 2034              	.LVL100:
  97:Core/Src/main.c ****   MX_CRC_Init();
 2035              		.loc 1 97 3 view .LVU603
 2036 0040 FFF7FEFF 		bl	MX_ADC_Init
 2037              	.LVL101:
  98:Core/Src/main.c ****   MX_LPTIM1_Init();
 2038              		.loc 1 98 3 view .LVU604
 2039 0044 FFF7FEFF 		bl	MX_CRC_Init
 2040              	.LVL102:
  99:Core/Src/main.c ****   MX_RTC_Init();
 2041              		.loc 1 99 3 view .LVU605
 2042 0048 FFF7FEFF 		bl	MX_LPTIM1_Init
 2043              	.LVL103:
 100:Core/Src/main.c ****   MX_SPI1_Init();
 2044              		.loc 1 100 3 view .LVU606
 2045 004c FFF7FEFF 		bl	MX_RTC_Init
 2046              	.LVL104:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2047              		.loc 1 101 3 view .LVU607
 2048 0050 FFF7FEFF 		bl	MX_SPI1_Init
 2049              	.LVL105:
 2050              	.L34:
 108:Core/Src/main.c ****   {
 2051              		.loc 1 108 3 discriminator 1 view .LVU608
 113:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 305


 2052              		.loc 1 113 3 discriminator 1 view .LVU609
 108:Core/Src/main.c ****   {
 2053              		.loc 1 108 9 discriminator 1 view .LVU610
 2054 0054 FEE7     		b	.L34
 2055              	.L36:
 2056 0056 C046     		.align	2
 2057              	.L35:
 2058 0058 00100240 		.word	1073876992
 2059 005c 00ED00E0 		.word	-536810240
 2060              		.cfi_endproc
 2061              	.LFE933:
 2063              		.section	.text.Error_Handler,"ax",%progbits
 2064              		.align	1
 2065              		.global	Error_Handler
 2066              		.syntax unified
 2067              		.code	16
 2068              		.thumb_func
 2070              	Error_Handler:
 2071              	.LFB941:
 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c **** /* USER CODE END 4 */
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** /**
 564:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 565:Core/Src/main.c ****   * @retval None
 566:Core/Src/main.c ****   */
 567:Core/Src/main.c **** void Error_Handler(void)
 568:Core/Src/main.c **** {
 2072              		.loc 1 568 1 view -0
 2073              		.cfi_startproc
 2074              		@ Volatile: function does not return.
 2075              		@ args = 0, pretend = 0, frame = 0
 2076              		@ frame_needed = 0, uses_anonymous_args = 0
 2077              		@ link register save eliminated.
 569:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 570:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 571:Core/Src/main.c ****   __disable_irq();
 2078              		.loc 1 571 3 view .LVU612
 2079              	.LBB316:
 2080              	.LBI316:
 2081              		.file 13 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 306


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 307


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 308


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2082              		.loc 13 140 27 view .LVU613
 2083              	.LBB317:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2084              		.loc 13 142 3 view .LVU614
 2085              		.syntax divided
 2086              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2087 0000 72B6     		cpsid i
 2088              	@ 0 "" 2
 2089              		.thumb
 2090              		.syntax unified
 2091              	.L38:
 2092              	.LBE317:
 2093              	.LBE316:
 572:Core/Src/main.c ****   while (1)
 2094              		.loc 1 572 3 discriminator 1 view .LVU615
 573:Core/Src/main.c ****   {
 574:Core/Src/main.c ****   }
 2095              		.loc 1 574 3 discriminator 1 view .LVU616
 572:Core/Src/main.c ****   while (1)
 2096              		.loc 1 572 9 discriminator 1 view .LVU617
 2097 0002 FEE7     		b	.L38
 2098              		.cfi_endproc
 2099              	.LFE941:
 2101              		.text
 2102              	.Letext0:
 2103              		.file 14 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 2104              		.file 15 "c:\\developtools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 2105              		.file 16 "c:\\developtools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 2106              		.file 17 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 2107              		.file 18 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_exti.h"
 2108              		.file 19 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h"
 2109              		.file 20 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 2110              		.file 21 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_utils.h"
 2111              		.file 22 "<built-in>"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s 			page 309


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:18     .text.MX_CRC_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:23     .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:137    .text.MX_CRC_Init:00000040 $d
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:144    .text.MX_LPTIM1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:149    .text.MX_LPTIM1_Init:00000000 MX_LPTIM1_Init
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:316    .text.MX_LPTIM1_Init:00000064 $d
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:329    .text.MX_GPIO_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:334    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:787    .text.MX_GPIO_Init:00000164 $d
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:797    .text.MX_ADC_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:802    .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1093   .text.MX_ADC_Init:000000e8 $d
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1104   .text.MX_RTC_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1109   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1223   .text.MX_RTC_Init:00000050 $d
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1231   .text.MX_SPI1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1236   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1424   .text.MX_SPI1_Init:000000a0 $d
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1430   .text.SystemClock_Config:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1436   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1921   .text.SystemClock_Config:00000154 $d
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1937   .text.main:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:1943   .text.main:00000000 main
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:2058   .text.main:00000058 $d
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:2064   .text.Error_Handler:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccsc8G6R.s:2070   .text.Error_Handler:00000000 Error_Handler

UNDEFINED SYMBOLS
memset
LL_GPIO_Init
LL_EXTI_Init
__aeabi_uidiv
LL_ADC_REG_Init
LL_ADC_Init
SystemCoreClock
LL_RTC_Init
LL_SPI_Init
LL_Init1msTick
LL_SetSystemCoreClock
