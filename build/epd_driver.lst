ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"epd_driver.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SPI_Transmit,"ax",%progbits
  18              		.align	1
  19              		.global	SPI_Transmit
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	SPI_Transmit:
  25              	.LVL0:
  26              	.LFB180:
  27              		.file 1 "App/EPD/epd_driver.c"
   1:App/EPD/epd_driver.c **** #include "EPD/epd_driver.h"
   2:App/EPD/epd_driver.c **** 
   3:App/EPD/epd_driver.c **** #define EPD_PWR_PIN     LL_GPIO_PIN_10
   4:App/EPD/epd_driver.c **** #define EPD_BUSY_PIN    LL_GPIO_PIN_0
   5:App/EPD/epd_driver.c **** #define EPD_RST_PIN     LL_GPIO_PIN_3
   6:App/EPD/epd_driver.c **** #define EPD_DC_PIN      LL_GPIO_PIN_6
   7:App/EPD/epd_driver.c **** #define EPD_CS_PIN      LL_GPIO_PIN_4
   8:App/EPD/epd_driver.c **** #define EPD_CLK_PIN     LL_GPIO_PIN_5
   9:App/EPD/epd_driver.c **** #define EPD_DIN_PIN     LL_GPIO_PIN_7
  10:App/EPD/epd_driver.c **** 
  11:App/EPD/epd_driver.c **** #define IMG_SIZE (((EPD_WIDTH % 8 == 0)? (EPD_WIDTH / 8 ): (EPD_WIDTH / 8 + 1)) * EPD_HEIGHT)
  12:App/EPD/epd_driver.c **** 
  13:App/EPD/epd_driver.c **** static uint8_t ImageBuf[IMG_SIZE];
  14:App/EPD/epd_driver.c **** 
  15:App/EPD/epd_driver.c **** void SPI_Transmit(uint8_t byte)
  16:App/EPD/epd_driver.c **** {
  28              		.loc 1 16 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  17:App/EPD/epd_driver.c ****     LL_SPI_TransmitData8(SPI1, byte);
  33              		.loc 1 17 5 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @file    stm32l0xx_ll_spi.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief   Header file of SPI LL module.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 2


   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * All rights reserved.
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * in the root directory of this software component.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   ******************************************************************************
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #ifndef STM32L0xx_LL_SPI_H
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define STM32L0xx_LL_SPI_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #ifdef __cplusplus
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** extern "C" {
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #endif
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #include "stm32l0xx.h"
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @addtogroup STM32L0xx_LL_Driver
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #if defined (SPI1) || defined (SPI2)
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL SPI
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Private macros ------------------------------------------------------------*/
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Exported types ------------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_ES_INIT SPI Exported Init structure
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  SPI Init structures definition
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** typedef struct
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t TransferDirection;       /*!< Specifies the SPI unidirectional or bidirectional data mod
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_TRANSFER_M
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t Mode;                    /*!< Specifies the SPI mode (Master/Slave).
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_MODE.
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 3


  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t DataWidth;               /*!< Specifies the SPI data width.
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_DATAWIDTH.
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t ClockPolarity;           /*!< Specifies the serial clock steady state.
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_POLARITY.
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t ClockPhase;              /*!< Specifies the clock active edge for the bit capture.
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_PHASE.
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t NSS;                     /*!< Specifies whether the NSS signal is managed by hardware (N
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_NSS_MODE.
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t BaudRate;                /*!< Specifies the BaudRate prescaler value which will be used 
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BAUDRATEPR
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          @note The communication clock is derived from the master c
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t BitOrder;                /*!< Specifies whether data transfers start from MSB or LSB bit
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BIT_ORDER.
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t CRCCalculation;          /*!< Specifies if the CRC calculation is enabled or not.
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_CRC_CALCUL
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t CRCPoly;                 /*!< Specifies the polynomial used for the CRC calculation.
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This parameter must be a number between Min_Data = 0x00 an
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** } LL_SPI_InitTypeDef;
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Exported constants --------------------------------------------------------*/
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Constants SPI Exported Constants
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_GET_FLAG Get Flags Defines
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief    Flags defines which can be used with LL_SPI_ReadReg function
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 4


 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_RXNE                     SPI_SR_RXNE               /*!< Rx buffer not empty flag 
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_TXE                      SPI_SR_TXE                /*!< Tx buffer empty flag     
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_BSY                      SPI_SR_BSY                /*!< Busy flag                
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_CRCERR                   SPI_SR_CRCERR             /*!< CRC error flag           
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_MODF                     SPI_SR_MODF               /*!< Mode fault flag          
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_OVR                      SPI_SR_OVR                /*!< Overrun flag             
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SR_FRE                      SPI_SR_FRE                /*!< TI mode frame format erro
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_IT IT Defines
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief    IT defines which can be used with LL_SPI_ReadReg and  LL_SPI_WriteReg functions
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CR2_RXNEIE                  SPI_CR2_RXNEIE            /*!< Rx buffer not empty inter
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CR2_TXEIE                   SPI_CR2_TXEIE             /*!< Tx buffer empty interrupt
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CR2_ERRIE                   SPI_CR2_ERRIE             /*!< Error interrupt enable   
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_MODE Operation Mode
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_MODE_MASTER                 (SPI_CR1_MSTR | SPI_CR1_SSI)    /*!< Master configuratio
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_MODE_SLAVE                  0x00000000U                     /*!< Slave configuration
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PROTOCOL Serial Protocol
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_MOTOROLA           0x00000000U               /*!< Motorola mode. Used as de
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_TI                 (SPI_CR2_FRF)             /*!< TI mode                  
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PHASE Clock Phase
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_PHASE_1EDGE                 0x00000000U               /*!< First clock transition is
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_PHASE_2EDGE                 (SPI_CR1_CPHA)            /*!< Second clock transition i
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_POLARITY Clock Polarity
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_POLARITY_LOW                0x00000000U               /*!< Clock to 0 when idle */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_POLARITY_HIGH               (SPI_CR1_CPOL)            /*!< Clock to 1 when idle */
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 5


 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BAUDRATEPRESCALER Baud Rate Prescaler
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV2      0x00000000U                                    /*!< Baud
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV4      (SPI_CR1_BR_0)                                 /*!< Baud
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV8      (SPI_CR1_BR_1)                                 /*!< Baud
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV16     (SPI_CR1_BR_1 | SPI_CR1_BR_0)                  /*!< Baud
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV32     (SPI_CR1_BR_2)                                 /*!< Baud
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV64     (SPI_CR1_BR_2 | SPI_CR1_BR_0)                  /*!< Baud
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV128    (SPI_CR1_BR_2 | SPI_CR1_BR_1)                  /*!< Baud
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV256    (SPI_CR1_BR_2 | SPI_CR1_BR_1 | SPI_CR1_BR_0)   /*!< Baud
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BIT_ORDER Transmission Bit Order
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_LSB_FIRST                   (SPI_CR1_LSBFIRST)        /*!< Data is transmitted/recei
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_MSB_FIRST                   0x00000000U               /*!< Data is transmitted/recei
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TRANSFER_MODE Transfer Mode
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_FULL_DUPLEX                 0x00000000U                          /*!< Full-Duplex mo
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_SIMPLEX_RX                  (SPI_CR1_RXONLY)                     /*!< Simplex Rx mod
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_RX              (SPI_CR1_BIDIMODE)                   /*!< Half-Duplex Rx
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_TX              (SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE)  /*!< Half-Duplex Tx
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_NSS_MODE Slave Select Pin Mode
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_NSS_SOFT                    (SPI_CR1_SSM)                     /*!< NSS managed inter
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_INPUT              0x00000000U                       /*!< NSS pin used in I
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_OUTPUT             (((uint32_t)SPI_CR2_SSOE << 16U)) /*!< NSS pin used in O
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DATAWIDTH Datawidth
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_8BIT              0x00000000U                       /*!< Data length for S
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_16BIT             (SPI_CR1_DFF)                     /*!< Data length for S
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 6


 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_CALCULATION CRC Calculation
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_DISABLE      0x00000000U               /*!< CRC calculation disabled 
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_ENABLE       (SPI_CR1_CRCEN)           /*!< CRC calculation enabled  
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Exported macro ------------------------------------------------------------*/
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Macros SPI Exported Macros
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EM_WRITE_READ Common Write and read registers Macros
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Write a value in SPI register
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __REG__ Register to be written
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __VALUE__ Value to be written in the register
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Read a value in SPI register
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  __REG__ Register to be read
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Register value
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #define LL_SPI_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /* Exported functions --------------------------------------------------------*/
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Functions SPI Exported Functions
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_Configuration Configuration
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 7


 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Enable SPI peripheral
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Enable
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Enable(SPI_TypeDef *SPIx)
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_SPE);
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Disable SPI peripheral
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   When disabling the SPI, follow the procedure described in the Reference Manual.
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Disable
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Disable(SPI_TypeDef *SPIx)
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if SPI peripheral is enabled
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_IsEnabled
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabled(SPI_TypeDef *SPIx)
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_SPE) == (SPI_CR1_SPE)) ? 1UL : 0UL);
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set SPI operation mode to Master or Slave
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_SetMode\n
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_SetMode
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  Mode This parameter can be one of the following values:
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetMode(SPI_TypeDef *SPIx, uint32_t Mode)
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI, Mode);
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get SPI operation mode (Master or Slave)
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_GetMode\n
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_GetMode
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 8


 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetMode(SPI_TypeDef *SPIx)
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI));
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set serial protocol used
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_SetStandard
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  Standard This parameter can be one of the following values:
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetStandard(SPI_TypeDef *SPIx, uint32_t Standard)
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRF, Standard);
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get serial protocol used
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_GetStandard
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetStandard(SPI_TypeDef *SPIx)
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_FRF));
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set clock phase
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_SetClockPhase
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  ClockPhase This parameter can be one of the following values:
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPhase(SPI_TypeDef *SPIx, uint32_t ClockPhase)
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPHA, ClockPhase);
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get clock phase
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_GetClockPhase
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 9


 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPhase(SPI_TypeDef *SPIx)
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPHA));
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set clock polarity
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_SetClockPolarity
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPolarity(SPI_TypeDef *SPIx, uint32_t ClockPolarity)
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPOL, ClockPolarity);
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get clock polarity
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_GetClockPolarity
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPolarity(SPI_TypeDef *SPIx)
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPOL));
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set baud rate prescaler
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   These bits should not be changed when communication is ongoing. SPI BaudRate = fPCLK/Pr
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_SetBaudRatePrescaler
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  BaudRate This parameter can be one of the following values:
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetBaudRatePrescaler(SPI_TypeDef *SPIx, uint32_t BaudRate)
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_BR, BaudRate);
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 10


 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get baud rate prescaler
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_GetBaudRatePrescaler
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetBaudRatePrescaler(SPI_TypeDef *SPIx)
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_BR));
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set transfer bit order
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_SetTransferBitOrder
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  BitOrder This parameter can be one of the following values:
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferBitOrder(SPI_TypeDef *SPIx, uint32_t BitOrder)
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_LSBFIRST, BitOrder);
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get transfer bit order
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_GetTransferBitOrder
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferBitOrder(SPI_TypeDef *SPIx)
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_LSBFIRST));
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set transfer direction mode
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   For Half-Duplex mode, Rx Direction is set by default.
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         In master mode, the MOSI pin is used and in slave mode, the MISO pin is used for Half-D
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_SetTransferDirection\n
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_SetTransferDirection\n
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_SetTransferDirection
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  TransferDirection This parameter can be one of the following values:
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 11


 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferDirection(SPI_TypeDef *SPIx, uint32_t TransferDirection)
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE, TransferDirection);
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get transfer direction mode
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_GetTransferDirection\n
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_GetTransferDirection\n
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_GetTransferDirection
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferDirection(SPI_TypeDef *SPIx)
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE));
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set frame data width
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          DFF           LL_SPI_SetDataWidth
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  DataWidth This parameter can be one of the following values:
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDataWidth(SPI_TypeDef *SPIx, uint32_t DataWidth)
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_DFF, DataWidth);
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get frame data width
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          DFF           LL_SPI_GetDataWidth
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDataWidth(SPI_TypeDef *SPIx)
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_DFF));
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 12


 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_CRC_Management CRC Management
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Enable CRC
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_EnableCRC
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableCRC(SPI_TypeDef *SPIx)
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Disable CRC
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_DisableCRC
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableCRC(SPI_TypeDef *SPIx)
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if CRC is enabled
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_IsEnabledCRC
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledCRC(SPI_TypeDef *SPIx)
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_CRCEN) == (SPI_CR1_CRCEN)) ? 1UL : 0UL);
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set CRCNext to transfer CRC on the line
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit has to be written as soon as the last data is written in the SPIx_DR register.
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          CRCNEXT       LL_SPI_SetCRCNext
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCNext(SPI_TypeDef *SPIx)
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCNEXT);
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set polynomial for CRC calculation
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_SetCRCPolynomial
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 13


 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  CRCPoly This parameter must be a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCPolynomial(SPI_TypeDef *SPIx, uint32_t CRCPoly)
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   WRITE_REG(SPIx->CRCPR, (uint16_t)CRCPoly);
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get polynomial for CRC calculation
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_GetCRCPolynomial
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCPolynomial(SPI_TypeDef *SPIx)
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->CRCPR));
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get Rx CRC
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll RXCRCR       RXCRC         LL_SPI_GetRxCRC
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxCRC(SPI_TypeDef *SPIx)
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->RXCRCR));
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get Tx CRC
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll TXCRCR       TXCRC         LL_SPI_GetTxCRC
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTxCRC(SPI_TypeDef *SPIx)
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->TXCRCR));
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_NSS_Management Slave Select Pin Management
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Set NSS mode
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   LL_SPI_NSS_SOFT Mode is not used in SPI TI mode.
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_SetNSSMode\n
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_SetNSSMode
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  NSS This parameter can be one of the following values:
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 14


 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetNSSMode(SPI_TypeDef *SPIx, uint32_t NSS)
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_SSM,  NSS);
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_SSOE, ((uint32_t)(NSS >> 16U)));
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get NSS mode
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_GetNSSMode\n
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_GetNSSMode
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetNSSMode(SPI_TypeDef *SPIx)
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t Ssm  = (READ_BIT(SPIx->CR1, SPI_CR1_SSM));
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   uint32_t Ssoe = (READ_BIT(SPIx->CR2,  SPI_CR2_SSOE) << 16U);
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (Ssm | Ssoe);
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_FLAG_Management FLAG Management
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if Rx buffer is not empty
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           RXNE          LL_SPI_IsActiveFlag_RXNE
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_RXNE(SPI_TypeDef *SPIx)
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_RXNE) == (SPI_SR_RXNE)) ? 1UL : 0UL);
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if Tx buffer is empty
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           TXE           LL_SPI_IsActiveFlag_TXE
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_TXE(SPI_TypeDef *SPIx)
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_TXE) == (SPI_SR_TXE)) ? 1UL : 0UL);
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 15


 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get CRC error flag
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_IsActiveFlag_CRCERR
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_CRCERR(SPI_TypeDef *SPIx)
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_CRCERR) == (SPI_SR_CRCERR)) ? 1UL : 0UL);
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get mode fault error flag
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_IsActiveFlag_MODF
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_MODF(SPI_TypeDef *SPIx)
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_MODF) == (SPI_SR_MODF)) ? 1UL : 0UL);
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get overrun error flag
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_IsActiveFlag_OVR
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_OVR(SPI_TypeDef *SPIx)
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_OVR) == (SPI_SR_OVR)) ? 1UL : 0UL);
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get busy flag
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   The BSY flag is cleared under any one of the following conditions:
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * -When the SPI is correctly disabled
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * -When a fault is detected in Master mode (MODF bit set to 1)
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * -In Master mode, when it finishes a data transmission and no new data is ready to be
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * sent
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * -In Slave mode, when the BSY flag is set to '0' for at least one SPI clock cycle between
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * each data transfer.
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           BSY           LL_SPI_IsActiveFlag_BSY
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_BSY(SPI_TypeDef *SPIx)
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_BSY) == (SPI_SR_BSY)) ? 1UL : 0UL);
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get frame format error flag
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           FRE           LL_SPI_IsActiveFlag_FRE
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 16


 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_FRE(SPI_TypeDef *SPIx)
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_FRE) == (SPI_SR_FRE)) ? 1UL : 0UL);
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Clear CRC error flag
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_ClearFlag_CRCERR
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_CRCERR(SPI_TypeDef *SPIx)
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->SR, SPI_SR_CRCERR);
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Clear mode fault error flag
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_SR
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         register followed by a write access to the SPIx_CR1 register
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_ClearFlag_MODF
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_MODF(SPI_TypeDef *SPIx)
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   __IO uint32_t tmpreg_sr;
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   tmpreg_sr = SPIx->SR;
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   (void) tmpreg_sr;
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Clear overrun error flag
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_DR
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *         register followed by a read access to the SPIx_SR register
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_ClearFlag_OVR
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_OVR(SPI_TypeDef *SPIx)
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   __IO uint32_t tmpreg;
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   tmpreg = SPIx->DR;
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   (void) tmpreg;
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   tmpreg = SPIx->SR;
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   (void) tmpreg;
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Clear frame format error flag
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   Clearing this flag is done by reading SPIx_SR register
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll SR           FRE           LL_SPI_ClearFlag_FRE
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_FRE(SPI_TypeDef *SPIx)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 17


 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   __IO uint32_t tmpreg;
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   tmpreg = SPIx->SR;
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   (void) tmpreg;
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_IT_Management Interrupt Management
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Enable error interrupt
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_EnableIT_ERR
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_ERR(SPI_TypeDef *SPIx)
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_ERRIE);
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Enable Rx buffer not empty interrupt
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_EnableIT_RXNE
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_RXNE(SPI_TypeDef *SPIx)
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Enable Tx buffer empty interrupt
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_EnableIT_TXE
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_TXE(SPI_TypeDef *SPIx)
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXEIE);
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Disable error interrupt
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_DisableIT_ERR
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_ERR(SPI_TypeDef *SPIx)
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 18


 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_ERRIE);
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Disable Rx buffer not empty interrupt
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_DisableIT_RXNE
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_RXNE(SPI_TypeDef *SPIx)
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Disable Tx buffer empty interrupt
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_DisableIT_TXE
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_TXE(SPI_TypeDef *SPIx)
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXEIE);
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if error interrupt is enabled
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_IsEnabledIT_ERR
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_ERR(SPI_TypeDef *SPIx)
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_ERRIE) == (SPI_CR2_ERRIE)) ? 1UL : 0UL);
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if Rx buffer not empty interrupt is enabled
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_IsEnabledIT_RXNE
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_RXNE(SPI_TypeDef *SPIx)
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXNEIE) == (SPI_CR2_RXNEIE)) ? 1UL : 0UL);
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if Tx buffer empty interrupt
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_IsEnabledIT_TXE
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_TXE(SPI_TypeDef *SPIx)
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXEIE) == (SPI_CR2_TXEIE)) ? 1UL : 0UL);
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 19


 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DMA_Management DMA Management
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Enable DMA Rx
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_EnableDMAReq_RX
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_RX(SPI_TypeDef *SPIx)
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Disable DMA Rx
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_DisableDMAReq_RX
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_RX(SPI_TypeDef *SPIx)
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if DMA Rx is enabled
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_IsEnabledDMAReq_RX
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_RX(SPI_TypeDef *SPIx)
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXDMAEN) == (SPI_CR2_RXDMAEN)) ? 1UL : 0UL);
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Enable DMA Tx
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_EnableDMAReq_TX
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_TX(SPI_TypeDef *SPIx)
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Disable DMA Tx
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_DisableDMAReq_TX
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 20


1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_TX(SPI_TypeDef *SPIx)
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Check if DMA Tx is enabled
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_IsEnabledDMAReq_TX
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_TX(SPI_TypeDef *SPIx)
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXDMAEN) == (SPI_CR2_TXDMAEN)) ? 1UL : 0UL);
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Get the data register address used for DMA transfer
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_DMA_GetRegAddr
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval Address of data register
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_DMA_GetRegAddr(SPI_TypeDef *SPIx)
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint32_t) &(SPIx->DR);
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @}
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DATA_Management DATA Management
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @{
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Read 8-Bits in the data register
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData8
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFF
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint8_t LL_SPI_ReceiveData8(SPI_TypeDef *SPIx)
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (*((__IO uint8_t *)&SPIx->DR));
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Read 16-Bits in the data register
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData16
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFFFF
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE uint16_t LL_SPI_ReceiveData16(SPI_TypeDef *SPIx)
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   return (uint16_t)(READ_REG(SPIx->DR));
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 21


1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** }
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** 
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** /**
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @brief  Write 8-Bits in the data register
1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_TransmitData8
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @param  TxData Value between Min_Data=0x00 and Max_Data=0xFF
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   * @retval None
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   */
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_TransmitData8(SPI_TypeDef *SPIx, uint8_t TxData)
  37              		.loc 2 1098 22 view .LVU2
  38              	.LBB5:
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** {
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h **** #if defined (__GNUC__)
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   __IO uint8_t *spidr = ((__IO uint8_t *)&SPIx->DR);
  39              		.loc 2 1101 3 view .LVU3
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_spi.h ****   *spidr = TxData;
  40              		.loc 2 1102 3 view .LVU4
  41              		.loc 2 1102 10 is_stmt 0 view .LVU5
  42 0000 014B     		ldr	r3, .L2
  43 0002 1873     		strb	r0, [r3, #12]
  44              	.LVL1:
  45              		.loc 2 1102 10 view .LVU6
  46              	.LBE5:
  47              	.LBE4:
  18:App/EPD/epd_driver.c **** }
  48              		.loc 1 18 1 view .LVU7
  49              		@ sp needed
  50 0004 7047     		bx	lr
  51              	.L3:
  52 0006 C046     		.align	2
  53              	.L2:
  54 0008 00300140 		.word	1073819648
  55              		.cfi_endproc
  56              	.LFE180:
  58              		.section	.text.EPD_Delay_ms,"ax",%progbits
  59              		.align	1
  60              		.global	EPD_Delay_ms
  61              		.syntax unified
  62              		.code	16
  63              		.thumb_func
  65              	EPD_Delay_ms:
  66              	.LVL2:
  67              	.LFB181:
  19:App/EPD/epd_driver.c **** 
  20:App/EPD/epd_driver.c **** void EPD_Delay_ms(uint16_t ms)
  21:App/EPD/epd_driver.c **** {
  68              		.loc 1 21 1 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		.loc 1 21 1 is_stmt 0 view .LVU9
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 22


  22:App/EPD/epd_driver.c ****     LL_mDelay(ms);
  78              		.loc 1 22 5 is_stmt 1 view .LVU10
  79 0002 FFF7FEFF 		bl	LL_mDelay
  80              	.LVL3:
  23:App/EPD/epd_driver.c **** }
  81              		.loc 1 23 1 is_stmt 0 view .LVU11
  82              		@ sp needed
  83 0006 10BD     		pop	{r4, pc}
  84              		.cfi_endproc
  85              	.LFE181:
  87              		.section	.text.EPD_SetPower,"ax",%progbits
  88              		.align	1
  89              		.global	EPD_SetPower
  90              		.syntax unified
  91              		.code	16
  92              		.thumb_func
  94              	EPD_SetPower:
  95              	.LVL4:
  96              	.LFB182:
  24:App/EPD/epd_driver.c **** 
  25:App/EPD/epd_driver.c **** void EPD_SetPower(uint8_t onoff)
  26:App/EPD/epd_driver.c **** {
  97              		.loc 1 26 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
  27:App/EPD/epd_driver.c ****     if (onoff)
 102              		.loc 1 27 5 view .LVU13
 103              		.loc 1 27 8 is_stmt 0 view .LVU14
 104 0000 0028     		cmp	r0, #0
 105 0002 05D0     		beq	.L6
  28:App/EPD/epd_driver.c ****     {
  29:App/EPD/epd_driver.c ****         /** Active low for PMOS */
  30:App/EPD/epd_driver.c ****         GPIOA->BSRR = EPD_PWR_PIN;
 106              		.loc 1 30 9 is_stmt 1 view .LVU15
 107              		.loc 1 30 21 is_stmt 0 view .LVU16
 108 0004 A023     		movs	r3, #160
 109 0006 DB05     		lsls	r3, r3, #23
 110 0008 8022     		movs	r2, #128
 111 000a D200     		lsls	r2, r2, #3
 112 000c 9A61     		str	r2, [r3, #24]
 113              	.L5:
  31:App/EPD/epd_driver.c ****     }
  32:App/EPD/epd_driver.c ****     else
  33:App/EPD/epd_driver.c ****     {
  34:App/EPD/epd_driver.c ****         GPIOA->BRR = EPD_PWR_PIN;
  35:App/EPD/epd_driver.c ****     }
  36:App/EPD/epd_driver.c **** }
 114              		.loc 1 36 1 view .LVU17
 115              		@ sp needed
 116 000e 7047     		bx	lr
 117              	.L6:
  34:App/EPD/epd_driver.c ****     }
 118              		.loc 1 34 9 is_stmt 1 view .LVU18
  34:App/EPD/epd_driver.c ****     }
 119              		.loc 1 34 20 is_stmt 0 view .LVU19
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 23


 120 0010 A023     		movs	r3, #160
 121 0012 DB05     		lsls	r3, r3, #23
 122 0014 8022     		movs	r2, #128
 123 0016 D200     		lsls	r2, r2, #3
 124 0018 9A62     		str	r2, [r3, #40]
 125              		.loc 1 36 1 view .LVU20
 126 001a F8E7     		b	.L5
 127              		.cfi_endproc
 128              	.LFE182:
 130              		.section	.text.EPD_Reset,"ax",%progbits
 131              		.align	1
 132              		.global	EPD_Reset
 133              		.syntax unified
 134              		.code	16
 135              		.thumb_func
 137              	EPD_Reset:
 138              	.LFB183:
  37:App/EPD/epd_driver.c **** 
  38:App/EPD/epd_driver.c **** void EPD_Reset()
  39:App/EPD/epd_driver.c **** {
 139              		.loc 1 39 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143 0000 70B5     		push	{r4, r5, r6, lr}
 144              	.LCFI1:
 145              		.cfi_def_cfa_offset 16
 146              		.cfi_offset 4, -16
 147              		.cfi_offset 5, -12
 148              		.cfi_offset 6, -8
 149              		.cfi_offset 14, -4
  40:App/EPD/epd_driver.c ****     GPIOA->BSRR = EPD_RST_PIN;
 150              		.loc 1 40 5 view .LVU22
 151              		.loc 1 40 17 is_stmt 0 view .LVU23
 152 0002 A024     		movs	r4, #160
 153 0004 E405     		lsls	r4, r4, #23
 154 0006 0825     		movs	r5, #8
 155 0008 A561     		str	r5, [r4, #24]
  41:App/EPD/epd_driver.c ****     EPD_Delay_ms(20);
 156              		.loc 1 41 5 is_stmt 1 view .LVU24
 157 000a 1420     		movs	r0, #20
 158 000c FFF7FEFF 		bl	EPD_Delay_ms
 159              	.LVL5:
  42:App/EPD/epd_driver.c ****     GPIOA->BRR = EPD_RST_PIN;
 160              		.loc 1 42 5 view .LVU25
 161              		.loc 1 42 16 is_stmt 0 view .LVU26
 162 0010 A562     		str	r5, [r4, #40]
  43:App/EPD/epd_driver.c ****     EPD_Delay_ms(20);
 163              		.loc 1 43 5 is_stmt 1 view .LVU27
 164 0012 1420     		movs	r0, #20
 165 0014 FFF7FEFF 		bl	EPD_Delay_ms
 166              	.LVL6:
  44:App/EPD/epd_driver.c ****     GPIOA->BSRR = EPD_RST_PIN;
 167              		.loc 1 44 5 view .LVU28
 168              		.loc 1 44 17 is_stmt 0 view .LVU29
 169 0018 A561     		str	r5, [r4, #24]
  45:App/EPD/epd_driver.c ****     EPD_Delay_ms(20);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 24


 170              		.loc 1 45 5 is_stmt 1 view .LVU30
 171 001a 1420     		movs	r0, #20
 172 001c FFF7FEFF 		bl	EPD_Delay_ms
 173              	.LVL7:
  46:App/EPD/epd_driver.c **** }
 174              		.loc 1 46 1 is_stmt 0 view .LVU31
 175              		@ sp needed
 176 0020 70BD     		pop	{r4, r5, r6, pc}
 177              		.cfi_endproc
 178              	.LFE183:
 180              		.section	.text.EPD_WaitForBusy,"ax",%progbits
 181              		.align	1
 182              		.global	EPD_WaitForBusy
 183              		.syntax unified
 184              		.code	16
 185              		.thumb_func
 187              	EPD_WaitForBusy:
 188              	.LFB184:
  47:App/EPD/epd_driver.c **** 
  48:App/EPD/epd_driver.c **** void EPD_WaitForBusy()
  49:App/EPD/epd_driver.c **** {
 189              		.loc 1 49 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 10B5     		push	{r4, lr}
 194              	.LCFI2:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 198 0002 02E0     		b	.L11
 199              	.L12:
  50:App/EPD/epd_driver.c **** 	while (1)
  51:App/EPD/epd_driver.c **** 	{	//=1 BUSY
  52:App/EPD/epd_driver.c **** 		if ((GPIOB->IDR & EPD_BUSY_PIN) == 0) 
  53:App/EPD/epd_driver.c ****         {
  54:App/EPD/epd_driver.c **** 			break;
  55:App/EPD/epd_driver.c ****         }
  56:App/EPD/epd_driver.c **** 		EPD_Delay_ms(20);
 200              		.loc 1 56 3 view .LVU33
 201 0004 1420     		movs	r0, #20
 202 0006 FFF7FEFF 		bl	EPD_Delay_ms
 203              	.LVL8:
  50:App/EPD/epd_driver.c **** 	while (1)
 204              		.loc 1 50 8 view .LVU34
 205              	.L11:
  50:App/EPD/epd_driver.c **** 	while (1)
 206              		.loc 1 50 2 view .LVU35
  52:App/EPD/epd_driver.c ****         {
 207              		.loc 1 52 3 view .LVU36
  52:App/EPD/epd_driver.c ****         {
 208              		.loc 1 52 13 is_stmt 0 view .LVU37
 209 000a 044B     		ldr	r3, .L13
 210 000c 1B69     		ldr	r3, [r3, #16]
  52:App/EPD/epd_driver.c ****         {
 211              		.loc 1 52 6 view .LVU38
 212 000e DB07     		lsls	r3, r3, #31
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 25


 213 0010 F8D4     		bmi	.L12
  57:App/EPD/epd_driver.c **** 	}
  58:App/EPD/epd_driver.c **** 	EPD_Delay_ms(20);
 214              		.loc 1 58 2 is_stmt 1 view .LVU39
 215 0012 1420     		movs	r0, #20
 216 0014 FFF7FEFF 		bl	EPD_Delay_ms
 217              	.LVL9:
  59:App/EPD/epd_driver.c **** }
 218              		.loc 1 59 1 is_stmt 0 view .LVU40
 219              		@ sp needed
 220 0018 10BD     		pop	{r4, pc}
 221              	.L14:
 222 001a C046     		.align	2
 223              	.L13:
 224 001c 00040050 		.word	1342178304
 225              		.cfi_endproc
 226              	.LFE184:
 228              		.section	.text.EPD_SendData,"ax",%progbits
 229              		.align	1
 230              		.global	EPD_SendData
 231              		.syntax unified
 232              		.code	16
 233              		.thumb_func
 235              	EPD_SendData:
 236              	.LVL10:
 237              	.LFB185:
  60:App/EPD/epd_driver.c **** 
  61:App/EPD/epd_driver.c **** void EPD_SendData(uint8_t data)
  62:App/EPD/epd_driver.c **** {
 238              		.loc 1 62 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		.loc 1 62 1 is_stmt 0 view .LVU42
 243 0000 70B5     		push	{r4, r5, r6, lr}
 244              	.LCFI3:
 245              		.cfi_def_cfa_offset 16
 246              		.cfi_offset 4, -16
 247              		.cfi_offset 5, -12
 248              		.cfi_offset 6, -8
 249              		.cfi_offset 14, -4
  63:App/EPD/epd_driver.c ****     GPIOA->BSRR = EPD_DC_PIN;
 250              		.loc 1 63 5 is_stmt 1 view .LVU43
 251              		.loc 1 63 17 is_stmt 0 view .LVU44
 252 0002 A024     		movs	r4, #160
 253 0004 E405     		lsls	r4, r4, #23
 254 0006 4023     		movs	r3, #64
 255 0008 A361     		str	r3, [r4, #24]
  64:App/EPD/epd_driver.c ****     GPIOA->BRR = EPD_CS_PIN;
 256              		.loc 1 64 5 is_stmt 1 view .LVU45
 257              		.loc 1 64 16 is_stmt 0 view .LVU46
 258 000a 1025     		movs	r5, #16
 259 000c A562     		str	r5, [r4, #40]
  65:App/EPD/epd_driver.c ****     SPI_Transmit(data);
 260              		.loc 1 65 5 is_stmt 1 view .LVU47
 261 000e FFF7FEFF 		bl	SPI_Transmit
 262              	.LVL11:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 26


  66:App/EPD/epd_driver.c ****     GPIOA->BSRR = EPD_CS_PIN;
 263              		.loc 1 66 5 view .LVU48
 264              		.loc 1 66 17 is_stmt 0 view .LVU49
 265 0012 A561     		str	r5, [r4, #24]
  67:App/EPD/epd_driver.c **** }
 266              		.loc 1 67 1 view .LVU50
 267              		@ sp needed
 268 0014 70BD     		pop	{r4, r5, r6, pc}
 269              		.cfi_endproc
 270              	.LFE185:
 272              		.section	.text.EPD_SendCommand,"ax",%progbits
 273              		.align	1
 274              		.global	EPD_SendCommand
 275              		.syntax unified
 276              		.code	16
 277              		.thumb_func
 279              	EPD_SendCommand:
 280              	.LVL12:
 281              	.LFB186:
  68:App/EPD/epd_driver.c **** 
  69:App/EPD/epd_driver.c **** void EPD_SendCommand(uint8_t cmd)
  70:App/EPD/epd_driver.c **** {
 282              		.loc 1 70 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		.loc 1 70 1 is_stmt 0 view .LVU52
 287 0000 70B5     		push	{r4, r5, r6, lr}
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 16
 290              		.cfi_offset 4, -16
 291              		.cfi_offset 5, -12
 292              		.cfi_offset 6, -8
 293              		.cfi_offset 14, -4
  71:App/EPD/epd_driver.c ****     GPIOA->BRR = EPD_DC_PIN;
 294              		.loc 1 71 5 is_stmt 1 view .LVU53
 295              		.loc 1 71 16 is_stmt 0 view .LVU54
 296 0002 A024     		movs	r4, #160
 297 0004 E405     		lsls	r4, r4, #23
 298 0006 4023     		movs	r3, #64
 299 0008 A362     		str	r3, [r4, #40]
  72:App/EPD/epd_driver.c ****     GPIOA->BRR = EPD_CS_PIN;
 300              		.loc 1 72 5 is_stmt 1 view .LVU55
 301              		.loc 1 72 16 is_stmt 0 view .LVU56
 302 000a 1025     		movs	r5, #16
 303 000c A562     		str	r5, [r4, #40]
  73:App/EPD/epd_driver.c ****     SPI_Transmit(cmd);
 304              		.loc 1 73 5 is_stmt 1 view .LVU57
 305 000e FFF7FEFF 		bl	SPI_Transmit
 306              	.LVL13:
  74:App/EPD/epd_driver.c ****     GPIOA->BSRR = EPD_CS_PIN;
 307              		.loc 1 74 5 view .LVU58
 308              		.loc 1 74 17 is_stmt 0 view .LVU59
 309 0012 A561     		str	r5, [r4, #24]
  75:App/EPD/epd_driver.c **** }
 310              		.loc 1 75 1 view .LVU60
 311              		@ sp needed
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 27


 312 0014 70BD     		pop	{r4, r5, r6, pc}
 313              		.cfi_endproc
 314              	.LFE186:
 316              		.text
 317              	.Letext0:
 318              		.file 3 "c:\\developtools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defau
 319              		.file 4 "c:\\developtools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 320              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 321              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_utils.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 epd_driver.c
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:18     .text.SPI_Transmit:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:24     .text.SPI_Transmit:00000000 SPI_Transmit
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:54     .text.SPI_Transmit:00000008 $d
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:59     .text.EPD_Delay_ms:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:65     .text.EPD_Delay_ms:00000000 EPD_Delay_ms
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:88     .text.EPD_SetPower:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:94     .text.EPD_SetPower:00000000 EPD_SetPower
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:131    .text.EPD_Reset:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:137    .text.EPD_Reset:00000000 EPD_Reset
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:181    .text.EPD_WaitForBusy:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:187    .text.EPD_WaitForBusy:00000000 EPD_WaitForBusy
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:224    .text.EPD_WaitForBusy:0000001c $d
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:229    .text.EPD_SendData:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:235    .text.EPD_SendData:00000000 EPD_SendData
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:273    .text.EPD_SendCommand:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccSFj736.s:279    .text.EPD_SendCommand:00000000 EPD_SendCommand

UNDEFINED SYMBOLS
LL_mDelay
